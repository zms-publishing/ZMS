<?xml version="1.0" encoding="UTF-8"?>
<list>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_SCORMutil -->


<!-- EO bodyContentZMSCustom_SCORMutil -->]]></item>
<item key="enabled" type="int">1</item>
<item key="key"><![CDATA[SCORMutil]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO SCORMutil.standard_html_header //-->

<dtml-if "_.len(REQUEST.form.get('manage_tabs_message',REQUEST.get('manage_tabs_message','')))>0">
 <style>
  .system-msg {
    font-family: Verdana, Helvetica, sans-serif; 
    font-size: 10pt; 
    background-color: #ffffff;
    border:  1px solid #000000;
    margin-bottom: 6px;
    margin-top: 6px;
    padding: 4px;
    width: 100%;
    color: #660033;
  }
 </style>
 <div class="system-msg">
  <dtml-var "REQUEST.form.get('manage_tabs_message',REQUEST.get('manage_tabs_message',''))">
  (<dtml-var "getLangFmtDate(ZopeTime())">)
 </div>
</dtml-if>

<!--// EO SCORMutil.standard_html_header //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[standard_html_header]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[MASTER: before content]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO SCORMutil.standard_html_request //-->

<dtml-call "REQUEST.set('member',getPersonalProfileByEmail(_,_,userObjEmail=AUTHENTICATED_USER.getId()))">

<!--// EO SCORMutil.standard_html_request //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[standard_html_request]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[MASTER: init request]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO manage_login //-->

<dtml-call "RESPONSE.redirect(getHref2IndexHtml(REQUEST)+'?manage_tabs_message='+url_quote(REQUEST.get('manage_tabs_message','')))">

<!--// EO manage_login //-->
]]></item>
<item key="default"/>
<item key="id"><![CDATA[manage_login]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Template_L0: Member login]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<dtml-call "REQUEST.set('op','registering')">
<dtml-with content>
<dtml-let membersFldr="e200000"
          meta_id="'personalProfile'" 
          valid_ids="['profileEmail','profileLastname','profileFirstname','profileAcademic','profileSalutation','profileProfession','profileDiscipline','profileCompany','profileStreet','profileZip','profileCity','profileCountry','profileTel','profileFax','profileWWW','profilePublic']">
<dtml-var f_standard_html_header>

<!-- ############################### -->
<!----------// BO Register //---------->
<!-- ############################### -->

<dtml-if "REQUEST.get('ZMS_INSERT','')==meta_id and 
          REQUEST.get('btn','')==getLangStr('BTN_SEND',lang)">

  <dtml-call "REQUEST.set('message','')">

  <!--// BO Search for existing profile by e-Mail //-->
  <dtml-call "REQUEST.set('found',0)">
  <dtml-in "membersFldr.filteredTreeNodes(REQUEST,ZMS_INSERT)">
   <dtml-call "REQUEST.set('found',found or getObjProperty('profileEmail',REQUEST)==REQUEST['profileEmail'])">
  </dtml-in>
  <!--// EO Search for existing profile by e-Mail //-->

  <!--// BO Create profile //-->
  <dtml-if "found==0">

 <!----------// BO Register: create a new personalProfile //---------->
  <dtml-call "REQUEST.set('profileRole','Participant')">
  <dtml-call "REQUEST.set('profilePasswd',_.str(rand_int(999999)))">
  <dtml-call insertPersonalProfile>
  <dtml-call "REQUEST.set('message',REQUEST.get('message','')+getLangStr('LMS_REG_REG_OK',lang)+'!<br />')">
 <!----------// EO Register: create a new personalProfile //---------->

 <!----------// BO Apply for a course: create a new personalTrack //---------->
 <dtml-if "SESSION.get('sessionRefObjPath',_.None) is not _.None">
  <dtml-let courseFldr="getLinkObj(SESSION['sessionRefObjPath'],REQUEST)">
  <dtml-call "personalProfile.manage_addZMSCustom(meta_id='personalTrack',
   values={'id_prefix':'personalTracks'
          ,'active':1
          ,'titlealt':courseFldr.getTitlealt(REQUEST)
          ,'attrRef':SESSION['sessionRefObjPath']
          ,'attrData':{}
          ,'attrCreationDt':ZopeTime()
   },REQUEST=REQUEST)">
  <dtml-call "SESSION.set('sessionRefObjPath',_.None)">
  <dtml-call "REQUEST.set('message',REQUEST.get('message','')+getLangStr('LMS_REG_COURSE',lang)+'!<br/>')">
  </dtml-let>
 </dtml-if>
 <!----------// EO Apply for a course: create a new personalTrack //---------->

<dtml-try>
<dtml-sendmail MailHost="MailHost">
To: <dtml-var "REQUEST['profileEmail']">
From: <dtml-var "getConfProperty('ZMSAdministrator.email')">
Subject: Registration: <dtml-var "getDocumentElement().getTitle(REQUEST)">

<dtml-var "getLangStr('LMS_REG_SALUTATION',lang)"> <dtml-var "REQUEST['profileSalutation']"> <dtml-var "REQUEST['profileAcademic']"> <dtml-var "REQUEST['profileFirstname']"> <dtml-var "REQUEST['profileLastname']">,

<dtml-var "getLangStr('LMS_REG_REG_OK',lang)">.

  <dtml-var "getLangStr('LMS_REG_LOGIN',lang)">: <dtml-var "REQUEST['profileEmail']">
  <dtml-var "getLangStr('profilePasswd',lang)">: <dtml-var "REQUEST['profilePasswd']">

<dtml-var "getLangStr('LMS_REG_REGARDS',lang)">.

</dtml-sendmail>
<dtml-call "REQUEST.set('message',REQUEST.get('message','')+getLangStr('LMS_REG_NOTIFICATION_SENT',lang)+'!<br/>')">
<dtml-except></dtml-try>

  <!--// EO Create profile //-->

  <dtml-else>
  <!--// BO Existing profile //-->
   <dtml-call "REQUEST.set('message',getLangStr('LMS_REG_PROFILE_EXISTS',lang)+'!<br/>')">
  </dtml-if>
  <!--// EO Existing profile //-->

  <dtml-call "RESPONSE.redirect('%s?manage_tabs_message=%s'%(getDocumentElement().absolute_url(),url_quote(message)))">

</dtml-if>

<!----------// EO Register //---------->

<!-- ######################################## -->
<!----------// BO Registration Form //---------->
<!-- ######################################## -->

<h1><dtml-var "getLangStr('LMS_REG_TITLE',lang)"></h1>
<p class="standard"><dtml-var "getLangStr('LMS_REG_PLEASE_ENTER',lang)">.</p>
<dtml-call "REQUEST.set('ZMS_INSERT',meta_id)">
<form name="form0" action="<dtml-var URL>" method="post" encoding="multipart/form-data">
<input type="hidden" name="ZMS_INSERT" value="<dtml-var ZMS_INSERT>">
<table cellspacing="0" cellpadding="2" border="1">
<dtml-if "SESSION.get('sessionRefObjPath',_.None) is not _.None">
<dtml-with "getLinkObj(SESSION['sessionRefObjPath'],REQUEST)">
<tr>
 <td><div class="form-label"><dtml-var "getLangStr('REGISTER_COURSE',lang)"></div></td>
 <td class="form-element">
  <h1><dtml-var "getTitle(REQUEST)"></h1>
  <p class="description"><dtml-var "getObjProperty('attr_dc_description',REQUEST)"></p>
 </td>
</tr>
</dtml-with>
</dtml-if>
<dtml-in "getMetaobjAttrIds(meta_id)">
 <dtml-let metaObjAttr="getMetaobjAttr(meta_id,_['sequence-item'])">
  <dtml-if "metaObjAttr['id'] in valid_ids">
   <tr>
    <td><div class="form-label"><dtml-var "getLangStr(metaObjAttr['id'],lang)"><dtml-if "metaObjAttr.get('mandatory',0)==1"><sup style="color:red">*</sup></dtml-if></div></td>
    <td><dtml-var "getObjInput(metaObjAttr['id'],REQUEST)">
   </tr>
  </dtml-if>
 </dtml-let>
</dtml-in>
</table>
<hr size="1" />
<p><dtml-var "getLangStr('LMS_REG_HINT',lang)">: 
[<sup style="color:red">*</sup>] <dtml-var "getLangStr('LMS_REG_MANDATORY',lang)">. <br />
<dtml-var "getLangStr('LMS_REG_CONFIRM_ANNOUNCE',lang)">.<br />
<hr size="1" />
<p class="form-element">
 <input class="form-submit" type="submit" name="btn" value="<dtml-var "getLangStr('BTN_SEND',lang)">"> &nbsp;&nbsp;&nbsp;&nbsp; 
 <input class="form-submit" type="reset" name="btn" value="<dtml-var "getLangStr('BTN_RESET',lang)">">
</p>
</form>

<!----------// EO Registration Form //---------->

<dtml-var f_standard_html_footer>
</dtml-let>
</dtml-with>
]]></item>
<item key="default"/>
<item key="id"><![CDATA[manage_register]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Template_L0: Member registration]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Course-Util]]></item>
<item key="package"><![CDATA[com.zms.elc.lms]]></item>
<item key="type"><![CDATA[ZMSLibrary]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_courseContent -->

<dtml-comment>
##########################################################################################
# Author:   Dr.Frank Hoffmann <fh@hoffmannliebenberg.de>
# Company:  HOFFMANN+LIEBENBERG GmbH
# WWW:      http://www.hoffmannliebenberg.de
# Date:     10.06.2007
# Version:  1.1.0
# Comments: ZMS eLearning components.
##########################################################################################
</dtml-comment>

<dtml-call "REQUEST.set('templateUrl','%s/bodyContentZMSCustom_%s'%(absolute_url(),meta_id))">
<dtml-call "REQUEST.set('actionId','ACTION%s'%meta_id)">
<dtml-call "REQUEST.set('userObjTrack',getObjProperty('getPersonalTrack',REQUEST))">
<dtml-call "getObjProperty('getManifestAbsoluteUrl',REQUEST)">
<dtml-call "SESSION.set('courseId',getHome().id+'_'+getParentNode().id.lstrip('e'))">


<dtml-comment>
######################################################################
# Redirect to frameset
######################################################################
</dtml-comment>
<dtml-if "REQUEST.get(actionId,'')==''">
<!-- Redirect to frameset -->
<dtml-call "REQUEST.set('url',url_append_params(REQUEST['templateUrl'],{'lang':lang,actionId:'Frameset_Outer'}))">
<dtml-if "REQUEST.form.has_key('scoId')">
<dtml-call "REQUEST.set('url',url_append_params(REQUEST['url'],{'scoId':REQUEST['scoId']}))">
</dtml-if>
<dtml-call "RESPONSE.redirect(REQUEST['url'])">

<dtml-comment>
######################################################################
</dtml-comment>

<dtml-else>

<!-- Get IMS-Manifest -->
<dtml-call "REQUEST.set('imsmanifest',getObjProperty('_imsmanifest',REQUEST))">

<!--  Post data to track -->
<dtml-var "getObjProperty('postTrack',REQUEST)">

<!-- Get scoId -->
<dtml-if "REQUEST.form.has_key('scoId')">
 <!-- from request -->
 <dtml-in imsmanifest mapping>
  <dtml-if "REQUEST.get('scoId','')==''">
   <dtml-call "REQUEST.set('scoId',id)">
  </dtml-if>
  <dtml-if "REQUEST.get('scoId','')==id">
   <dtml-if href>
    <dtml-call "REQUEST.set('scoId',id)">
   <dtml-else>
    <dtml-call "REQUEST.set('scoId','')">
   </dtml-if>
  </dtml-if>
 </dtml-in>
<dtml-else>
 <!-- find next -->
 <dtml-call "REQUEST.set('scoId',getObjProperty('getNextScoId',REQUEST,{'fetchReqBuff':0}))">
</dtml-if>

<dtml-comment>
######################################################################
# Display frames
######################################################################
</dtml-comment>
  <dtml-var "getObjProperty(REQUEST.get(actionId,''),REQUEST)">

</dtml-if>

<!-- EO bodyContentZMSCustom_courseContent -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[courseContent]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[titlealt]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Title.Alt]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="courseContent.gif" type="file">47494638396112001000b30000040204649a6464029c649a9cccce9c64666486669cfcfefc880264fcfe04fc02fccc9accbccecc9c9a649c029c9c666421f9040100000a002c000000001200100003048050c921abbdb23183bb02c84150d5f03418201cc7230506cb5d80c32e46c31e89010016d50ec0e0b1740ea044c802107689c70101582c43cd62823538080024d0f0c94a14bc8099b8b9301e74d43062752042bb49d4d211aa1e7c3f530005417d3f1a45687a573f7c0208087c718502493f979701343f0f063903060f010f1411003b</data></item>
<item key="default"/>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="icon_exam.gif" type="file">47494638396112001000f700000432bc7c828cc4c2c44c4e4c0c46bce4e2e46c8acc3c66bc94aad4c4f2fc94cafc2456bc346ad4bccae44c8afc7ca6f41c56ccd4e2f4acaeacf4f2ecccd6e46c6e6c849acccceafcfcfeecacb6cc547ed4547ac43c6ed4ccdaf4bcc6dc144ac42c5ec4245ecc6c86c4648edc3466cc94aadcb4b2b47c7e7ce4eaf4fcfafc9c9a9cc4cacc5c5a5c144eb4acd6fc1c56c484aeece4e6f4ecf2fc6c727c749ae43472e4ccdefc3c6ecc0c4abca4b2cc2c66e4c4d2e46c9af41456d4dce6f494a6c4ecf2f4d4deec747674fcfaf4a4bae4d4def42c62cc7492dc346acce4eefc949aa4245ac474b2fcfc02fcbcc2cc545254dce2ec5c86dc9caed49ccefc346adcc4cee44c8efc245accdce2f4acaeb4d4daec7472747c9ed4dceafcb4bacc5c7ec44472d4d4daf4c4cadc144ec43462c42c5ecc6c8edc9caedcbcbabceceef4fcfefccccacc646264acdefc2456c494aeec7c9ee43c72e4144abcf4f2f4fcfef43c6acc9c9ea47700002000f80000620000150000002000000000000000140000000c10850000f40e00f4000077a40000c30000d60000770000180000c200001200140000000000850000f40000f400007700f0a100c2f40012f40000770200087f0006000014000000283c08c2f9001212b200000000c601004300001800007e00788701c44300121800007e008d20784ad0c4d11b12777e00a44896c34939d614e577007702ed9e7f3a390018e5007e7760840cc4930012d1b20077000d601c09c339ded6e50c77772a3800048c00926c000000002371f804836200d11500770000ec0800d20000d1b2007700acd0010a04000059000000004000480000c4000012000000904f3cdb00f9140012000000002a3c1404f916921200000000c80900c3480012e70000770700380000300000e6000077a800ff0100ff1400ff0000fff8009e1300391600e5000077002ae20004e700924100000000c8b800c3ed00121400000000d0d90004570059e500007790b81c5ec3394412e5000077345dafc2a179d6d1d177777790002a5e000444009200000006820000000000000000000021f9040100004d002c00000000120010000708fb009b081c58248c968241062a248822859a872962145948f06182365314b8785864c5c2226a2e308101650296070e6ca829b246a18c2e0ea260484144cd90383564c4505291870e11693400e0a266440f1a6ac448105824091506655e401853450d982b375204a9c0b4430806248cbcc8a0860b04232080047922104b911724485c11a106c607232140cc29c2b64991216442900861c0c78d2b245e6c48516500d31425e4183152c74c19b438c4a050c286209d2f04c6fc5073640c010b6ab0b050319042173a165a1c38b3608194d433b62c74822545811c083c4c0012e144053414b3548910010b96085e586c314151a0800a4f06687f72626140003b</data></item>
<item key="default"/>
<item key="id"><![CDATA[icon_exam]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon: exam]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="icon_this.gif" type="file">47494638396110001000800100000000ffffff21f90401000001002c00000000100010000002148c8fa9cbed0fa38440824aafbe8ddb0986225300003b</data></item>
<item key="default"/>
<item key="id"><![CDATA[icon_this]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon: this]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="btn_reset.gif" type="file">47494638396110001000800100000000ffffff21f90401000001002c00000000100010000002218c8fa9cbed0fa29c205576cfcddbeac079df485621d21929a9642a453df24c0705003b</data></item>
<item key="default"/>
<item key="id"><![CDATA[btn_reset]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Button: reset]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[url]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Location of imsmanifest.xml]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[url]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[_imsmanifest]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[imsmanifest.xml (list)]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[list]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[macronav]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[strict sequence]]></item>
<item><![CDATA[custom sequence]]></item>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Navigation]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[macronav_display]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[complete]]></item>
<item><![CDATA[folders]]></item>
<item><![CDATA[context]]></item>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Nav. Display]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[resetexam]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Exam repeatable?]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[boolean]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[mandatoryexam]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Exam mandatory?]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[boolean]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[frame_parameters]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[<b>- Frame Parameter:</b>]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[interface]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"><![CDATA[90%]]></item>
<item key="id"><![CDATA[lmsPageWidth]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[LMS Page width px]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"><![CDATA[120]]></item>
<item key="id"><![CDATA[frameTopHeight]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Top height px]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[int]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"><![CDATA[200]]></item>
<item key="id"><![CDATA[frameLeftWidth]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Left width px]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[int]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[frameLeftScrolling]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[yes]]></item>
<item><![CDATA[no]]></item>
<item><![CDATA[auto]]></item>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Left scrolling]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[frameBorder]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Frame: Border]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[boolean]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO Frameset_Outer //-->

<dtml-var standard_html_request>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<dtml-var headCSS>
<title><dtml-var "getTitlealt(REQUEST)"></title>
 </head>
 <frameset cols="*,<dtml-var "getObjProperty('lmsPageWidth',REQUEST)">,*" border="0" frameborder="0" framespacing="0">
  <frame id="Frame_Left" name="Frame_Left" src="about:blank" scrolling="no">
  <frameset id="Frameset_LMSPage" name="Frameset_LMSPage" rows="<dtml-var "getObjProperty('frameTopHeight',REQUEST)">,*" 
            border="0" frameborder="<dtml-var "getObjProperty('frameBorder',REQUEST)">" framespacing="0" >
  <frame id="Frame_Top" name="Frame_Top" src="<dtml-var "REQUEST['templateUrl']">?lang=<dtml-var lang>&<dtml-var actionId>=Frame_Top<dtml-if "REQUEST.form.has_key('scoId')">&scoId=<dtml-var "REQUEST['scoId']"></dtml-if>" scrolling="no">
  <frame id="Frameset_Inner" name="Frameset_Inner" src="<dtml-var "REQUEST['templateUrl']">?lang=<dtml-var lang>&<dtml-var actionId>=Frameset_Inner<dtml-if "REQUEST.form.has_key('scoId')">&scoId=<dtml-var "REQUEST['scoId']"></dtml-if>" scrolling="no">
 </frameset>
  <frame id="Frame_Right" name="Frame_Right" src="about:blank" scrolling="no">
</html>

<!--// EO Frameset_Outer //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[Frameset_Outer]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Frameset: Outer]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO Frame_Top //-->

<dtml-var standard_html_request>
<dtml-call "REQUEST.set('op','disableChannelDropDown')">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<title><dtml-var "getTitle(REQUEST)"></title>
<dtml-var headCSS>
<base target="_parent">
</head>
<dtml-var headBodytag>
<dtml-var pageregionTop>
</body>
</html>

<!--// EO Frame_Top //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[Frame_Top]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Frame: Top]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO Frameset_Inner //-->

<dtml-var standard_html_request>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title><dtml-var "getTitle(REQUEST)"></title>
 </head>
 <frameset rows="0,*" border="0" frameborder="0" framespacing="0">
  <frame id="LMSFrame" name="LMSFrame" src="<dtml-var "REQUEST['templateUrl']">?lang=<dtml-var lang>&<dtml-var actionId>=LMSFrame<dtml-if "REQUEST.form.has_key('scoId')">&scoId=<dtml-var "REQUEST['scoId']"></dtml-if>" resize="no" scrolling="no">
  <frameset cols="<dtml-var "getObjProperty('frameLeftWidth',REQUEST)">,*" border="0" frameborder="<dtml-var "getObjProperty('frameBorder',REQUEST)">" framespacing="1">
   <frame id="Navigation" name="Navigation" src="about:blank" resize="yes" scrolling="<dtml-var "getObjProperty('frameLeftScrolling',REQUEST)">">
   <frame id="Content" name="Content" src="about:blank" resize="yes" scrolling="auto">
  </frameset>
 </frameset>
</html>

<!--// EO Frameset_Inner //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[Frameset_Inner]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Frameset: Inner]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO LMSFrame //-->

<!--  Data Form for track -->
<dtml-var standard_html_request>
<html>
<head>
<title><dtml-var "getTitle(REQUEST)"></title>
<script language="JavaScript">
<!--//

  // Define exception/error codes
  var _NoError = 0;
  var _GeneralException = 101;
  var _GeneralInitializationFailure = 102;
  var _AlreadyInitialized = 103;
  var _ContentInstanceTerminated = 104;
  var _GeneralTerminationFailure = 111;
  var _TerminationBeforeInitialization = 112;
  var _TerminationAfterTermination = 113;
  var _RetrieveDataBeforeInitialization = 122;
  var _RetrieveDataAfterTermination = 123;
  var _StoreDataBeforeInitialization = 132;
  var _StoreDataAfterTermination = 133;
  var _CommitBeforeInitialization = 142;
  var _CommitAfterInitialization = 143;
  var _GeneralArgumentError = 201;
  var _GeneralGetFailure = 301;
  var _GeneralSetFailure = 351;
  var _GeneralCommitFailure = 391;
  var _UndefinedDataModelElement = 401;
  var _UnimplementedDataModelElement = 402;
  var _DataModelElementValueNotInitialized = 403;
  var _DataModelElementIsReadOnly = 404;
  var _DataModelElementIsWriteOnly = 405;
  var _DataModelElementTypeMismatch = 406;
  var _DataModelElementValueOutOfRange = 407;
  var _DataModelDependencyNotEstablished = 408;
  var CMIBooleanTrue = "true";
  var CMIBooleanFalse = "false";
  var errCode = _NoError;
  var errDiagnostic = "";

  function writeLog(s)
  {
    var fm = document.forms["form0"];
    el = fm.elements["cmiScoLog"];
    el.value = el.value + s;
  }

  function findElement(arr, element)
  {
    if (arr) {
      for (var i=0;i<arr.length/2;i++) {
        key = arr[i*2];
        if (key==element)
          return i*2;
      }
    }
    return -1;
  }

  function getElement(arr, element)
  {
    value = "";
    if (arr) {
      if (element.indexOf("cmi.interactions.")==0)
      {
        var l = String("cmi.interactions.").length
        var k = parseInt(element.substring(l,l+element.substring(l).indexOf(".")));
        var node = element.substring(l+element.substring(l).indexOf(".")+1);
        var i = findElement(arr,"cmi.interactions");
        var arr2 = arr[i+1];
        if (arr2.length > k)
        {
          var arr3 = arr2[k]
          var j = findElement(arr3,node);
          if (j >= 0)
          {
            value = arr3[j+1];
          }
        }
      }
      else
      {
        var i = findElement(arr,element);
        if (i >= 0)
          value = arr[i+1];
      }
    }
    return value;
  }
  
  function setElement(arr, element, value )
  {
    if (arr) {
      if (element.indexOf("cmi.interactions.")==0)
      {
        var l = String("cmi.interactions.").length
        var k = parseInt(element.substring(l,l+element.substring(l).indexOf(".")));
        var node = element.substring(l+element.substring(l).indexOf(".")+1);
        var i = findElement(arr,"cmi.interactions");
        var arr2 = arr[i+1];
        if (arr2.length<=k)
          arr2[k] = new Array();
        arr3 = arr2[k]
        var j = findElement(arr3,node);
        if (j<0)
        {
          j = arr3.length;
          arr3[j] = node;
        }
        arr3[j+1] = value;
      }
      else
      {
        var i = findElement(arr,element);
        if (i<0)
          i = arr.length;
        arr[i] = element;
        arr[i+1] = value;
      }
    }
  }

  /**
   * Initialize.
   */
  function Initialize(parameter )
  {
    writeLog("\nInitialize('"+parameter+"')");
    if (parameter && parameter.length > 0) {
      errCode = _InvalidArgumentError;
      return CMIBooleanFalse;
    }
    <dtml-call "REQUEST.set('cmi.learner_id',AUTHENTICATED_USER)">
    <dtml-call "REQUEST.set('cmi.learner_name',AUTHENTICATED_USER)">
    <dtml-call "REQUEST.set('cmi.success_status','unknown')">
    <dtml-call "REQUEST.set('cmi.completion_status','unknown')">
    <dtml-if userObjTrack
     ><dtml-let attrData="userObjTrack.get('data',{})" 
                dict="attrData.get(scoId,{})"
      ><dtml-in "dict.keys()"
       ><dtml-let element=sequence-item value="dict[element]"
        ><dtml-if "element.find('cmi.interactions')==0"
         ><dtml-in value
          ><dtml-let subindex=sequence-index subdict=sequence-item
           ><dtml-in "subdict.keys()"
            ><dtml-let subelement=sequence-item subvalue="subdict[subelement]">
             setElement(this.cmi,"<dtml-var element>.<dtml-var subindex>.<dtml-var subelement>","<dtml-var subvalue>");
            </dtml-let
           ></dtml-in
          ></dtml-let
         ></dtml-in
        ><dtml-else
         ><dtml-call "REQUEST.set( element, value)"
        ></dtml-if
       ></dtml-let
      ></dtml-in
     ></dtml-let
    ></dtml-if
    ><dtml-in "REQUEST.keys()"
     ><dtml-let key=sequence-item value="REQUEST.get(key)"
      ><dtml-if "key.find('cmi.') == 0">
       setElement(this.cmi,"<dtml-var key>","<dtml-var value>");
      </dtml-if
     ></dtml-let
    ></dtml-in>
    this.mode = this.GetValue("cmi.mode");
    // Return CMIBoolean-string.
    errCode = _NoError;
    this.initialized = true;
    return CMIBooleanTrue;
  }

  /**
   * Get value.
   */
  function GetValue( element)
  {
    writeLog( "\nGetValue('"+element+"')");
    var value = ""
    if ( element == "cmi.mode")
    {
      value = "normal";
      var completion_status = getElement( this.cmi, "cmi.completion_status");
      if ( completion_status == "completed")
        value = "browse";
    }
    else if ( element == "cmi.interactions._count")
    {
      var arr = this.cmi;
      var i = findElement( arr, "cmi.interactions");
      var arr2 = arr[i+1];
      value = arr2.length;
    }
    else {
      value = getElement( this.cmi, element);
    }
    writeLog( "="+value);
    return value;
  }

  /**
   * Set value.
   */
  function SetValue( element, value)
  {
    errCode = "0";
    errDiagnostic = "";
    writeLog( "\nSetValue('"+element+"','"+value+"')");
    var mode = this.GetValue( "cmi.mode");
    if ( mode == "normal")
      setElement( this.cmi, element, value);
    return "true";
  }

  /**
   * Commit.
   */
  function Commit(parameter )
  {
    writeLog("\nCommit('"+parameter+"')");
    // Error-Code.
    if (parameter && parameter.length > 0) {
      errCode = _InvalidArgumentError;
    }
    if (errCode != _NoError) {
      return CMIBooleanFalse;
    }
    // Return CMIBoolean-string.
    errCode = _NoError;
    return CMIBooleanTrue;
  }

  /**
   * Terminate.
   */
  function Terminate( parameter)
  {
    writeLog( "\nTerminate('"+parameter+"')");
    writeLog( "\ncmi.completion_status="+this.GetValue( "cmi.completion_status"));
    writeLog( "\ncmi.success_status="+this.GetValue( "cmi.success_status"));
    // Error-Code.
    if ( parameter && parameter.length > 0) {
      errCode = _InvalidArgumentError;
    }
    if ( errCode != _NoError) {
      return CMIBooleanFalse;
    }
    // Write cmiScoXml.
    xml = "";
    xml += "<dictionary>\n";
    for (var i=0;i<this.cmi.length/2;i++)
    {
      element = this.cmi[i*2];
      value = this.cmi[i*2+1];
      xml += "<item key=\"" +element+"\">";
      if (element.indexOf("cmi.interactions")==0)
      {
        xml += "<list>\n";
        for (var j=0;j<value.length;j++)
        {
          if (value[j]) {
            xml += "<item>\n";
            xml += "<dictionary>\n";
            for (var k=0;k<value[j].length/2;k++)
              xml += "<item key=\"" +value[j][k*2]+"\">"+value[j][k*2+1]+"</item>\n";
            xml += "</dictionary>\n";
            xml += "</item>\n";
          }
        }
        xml += "</list>\n";
      }
      else
        xml += value;
      xml += "</item>\n";
    }
    xml += "</dictionary>\n";
    // Submit form.
    fm = document.forms["form0"];
    fm.elements["cmiScoXml"].value = xml;
    fm.elements["cmiScoMode"].value = this.mode;
    fm.submit();
    // Return CMIBoolean-string.
    errCode = _NoError;
    this.terminated = true;
    return CMIBooleanTrue;
  }

  function GetLastError()
  {
    return errCode;
  }

  function GetErrorString(errorCode)
  {
    var errString = "";    
    if (errCode==_NoError)
      errString = "No error";
    else if (errCode==_GeneralException)
      errString = "General exception";
    else if (errCode==_ServerBusy)
      errString = "Server is busy";
    else if (errCode==_InvalidArgumentError)
      errString = "Invalid argument erro";
    else if (errCode==_ElementCannotHaveChildren)
      errString = "Element can not have children";
    else if (errCode==_ElementIsNotAnArray)
      errString = "Element is not an array";
    else if (errCode==_NotInitialized)
      errString = "Not initialized";
    else if (errCode==_NotImplementedError)
      errString = "Not implemented error";
    else if (errCode==_InvalidSetValue)
      errString = "Invalid set value";
    else if (errCode==_ElementIsReadOnly)
      errString = "Element is read only";
    else if (errCode==_ElementIsWriteOnly)
      errString = "Element is write only";
    else if (errCode==_IncorrectDataType)
      errString = "Incorrect data type";
    else
      errString = "Unknown errCode="+errCode;
    return errString;
  }

  function GetDiagnostic(errorCode)
  {
    var errDiagnostic = "";    
    if (errCode==_NoError)
      errDiagnostic = "No error";
    else if (errCode==_GeneralException)
      errDiagnostic = "General Exception";
    else if (errCode==_GeneralInitializationFailure)
      errDiagnostic = "General Initialization Failure";
    else if (errCode==_AlreadyInitialized)
      errDiagnostic = "Already Initialized";
    else if (errCode==_ContentInstanceTerminated)
      errDiagnostic = "Content Instance Terminated";
    else if (errCode==_GeneralTerminationFailure)
      errDiagnostic = "General Termination Failure";
    else if (errCode==_TerminationBeforeInitialization)
      errDiagnostic = "Termination Before Initialization";
    else if (errCode==_TerminationAfterTermination)
      errDiagnostic = "Termination After Termination";
    else if (errCode==_RetrieveDataBeforeInitialization)
      errDiagnostic = "Retrieve Data Before Initialization";
    else if (errCode==_RetrieveDataAfterTermination)
      errDiagnostic = "Retrieve Data After Termination";
    else if (errCode==_StoreDataBeforeInitialization)
      errDiagnostic = "Store Data Before Initialization";
    else if (errCode==_StoreDataAfterTermination)
      errDiagnostic = "Store Data After Termination";
    else if (errCode==_CommitBeforeInitialization)
      errDiagnostic = "Commit Before Initialization";
    else if (errCode==_CommitAfterInitialization)
      errDiagnostic = "Commit After Initialization";
    else if (errCode==_GeneralArgumentError)
      errDiagnostic = "General Argument Error";
    else if (errCode==_GeneralGetFailure)
      errDiagnostic = "General Get Failure";
    else if (errCode==_GeneralSetFailure)
      errDiagnostic = "General Set Failure";
    else if (errCode==_GeneralCommitFailure)
      errDiagnostic = "General Commit Failure";
    else if (errCode==_UndefinedDataModelElement)
      errDiagnostic = "Undefined Data Model Element";
    else if (errCode==_UnimplementedDataModelElement)
      errDiagnostic = "Unimplemented Data Model Element";
    else if (errCode==_DataModelElementValueNotInitialized)
      errDiagnostic = "Data Model Element Value Not Initialized";
    else if (errCode==_DataModelElementIsReadOnly)
      errDiagnostic = "Data Model Element Is Read Only";
    else if (errCode==_DataModelElementIsWriteOnly)
      errDiagnostic = "Data Model Element Is Write Only";
    else if (errCode==_DataModelElementTypeMismatch)
      errDiagnostic = "Data Model Element Type Mismatch";
    else if (errCode==_DataModelElementValueOutOfRange)
      errDiagnostic = "Data Model Element Value Out Of Range";
    else if (errCode==_DataModelDependencyNotEstablished)
      errDiagnostic = "Data Model Dependency Not Established";
    else
      errDiagnostic = "Unknown errCode="+errCode;
    return errDiagnostic;
  }

  function APIClass()
  {
    this.version = "1.0";
    this.cmi = new Array();
    this.cmi[this.cmi.length] = "cmi.interactions";
    this.cmi[this.cmi.length] = new Array();
    this.initialized = false;
    this.terminated = false;
    this.Initialize = Initialize;
    this.GetValue = GetValue;
    this.SetValue = SetValue;
    this.Commit = Commit;
    this.commit = Commit;
    this.Terminate = Terminate;
    this.terminate = Terminate;
    this.GetLastError = GetLastError;
    this.getLastError = GetLastError;
    this.GetErrorString = GetErrorString;
    this.getErrorString = GetErrorString;
    this.GetDiagnostic = GetDiagnostic;
    this.getDiagnostic = GetDiagnostic;
  }

  function bodyOnLoad()
  {
    window.parent.API_1484_11 = new APIClass();
    window.parent.Navigation.location.href = "<dtml-var templateUrl>?lang=<dtml-var lang>&<dtml-var actionId>=Navigation<dtml-if "REQUEST.form.has_key('scoId')">&scoId=<dtml-var "REQUEST['scoId']"></dtml-if>";
    <dtml-in imsmanifest mapping>
     <dtml-if "REQUEST.get('scoId','')==id">
      <dtml-if "_['sequence-end'] and REQUEST.form.get('scoId','')=='' and userObjTrack.get('data',{}).get(id,{}).get('cmi.completion_status','unknown')=='completed'">
       window.parent.Content.location.href = "<dtml-var templateUrl>?lang=<dtml-var lang>&<dtml-var actionId>=Completed";
      <dtml-else>
      window.parent.Content.location.href = "<dtml-var "REQUEST.get('url','')"><dtml-var href>";
     </dtml-if>
     </dtml-if>
    </dtml-in>
  }

-->
</script> 
</head>
 <body onload="bodyOnLoad()">
  <form name="form0" method="post" action="<dtml-var templateUrl>" target="_self">
  <input type="hidden" name="<dtml-var actionId>" value="<dtml-var "REQUEST.get(actionId,'')">">
  <input type="hidden" name="lang" value="<dtml-var lang>">
  <input type="hidden" name="cmiScoId" value="<dtml-var scoId>">
  <input type="hidden" name="cmiScoMode" value="normal">
  <textarea name="cmiScoLog" cols="80" rows="10" wrap="off"></textarea>
  <textarea name="cmiScoXml" cols="80" rows="10" wrap="off"></textarea>
  <input type="submit" value="SUBMIT">
  </form>
 </body>
</html>

<!--// EO LMSFrame //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[LMSFrame]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Frame: LMS]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO Navigation //-->

<dtml-call "RESPONSE.setHeader('Content-Type', 'text/html; charset=utf-8')">
<dtml-call "RESPONSE.setHeader('Cache-Control', 'no-cache')">
<dtml-call "RESPONSE.setHeader('Pragma', 'no-cache')">
<dtml-var standard_html_request>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta http-equiv="Cache-Control" content="no-cache"/>
<meta http-equiv="Pragma" content="no-cache"/>
  <dtml-var headCSS>
  <dtml-var headScript>
  <base target="_parent">
 </head>
 <body id="MacronavigationScorm">
  <dtml-call "REQUEST.set('targetUrl',url_append_params(REQUEST['templateUrl'],{'lang':lang,actionId:'Frameset_Inner'}))">
  <dtml-var "getObjProperty('getNavigation',REQUEST)">
 </body>
</html>

<!--// EO Navigation //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[Navigation]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Frame: Navigation]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO Completed //-->

<dtml-call "RESPONSE.setHeader('Content-Type', 'text/html; charset=utf-8')">
<dtml-call "RESPONSE.setHeader('Cache-Control', 'no-cache')">
<dtml-call "RESPONSE.setHeader('Pragma', 'no-cache')">
<dtml-var standard_html_request>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta http-equiv="Cache-Control" content="no-cache"/>
<meta http-equiv="Pragma" content="no-cache"/>
  <dtml-var headCSS>
  <dtml-var headScript>
  <base target="_top">
 </head>
 <body id="ContentScorm">
  <div align="center">
   <form action="<dtml-var "getParentNode().getHref2IndexHtml(REQUEST)">" method="GET">
   <hr size="1"/>
   <h1>Course completed!</h1>
   <hr size="1"/>
   <input type="submit" value="<dtml-var "getLangStr('BACK',lang)">"/>
   </form>
  </div>
 </body>
</html>

<!--// EO Completed //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[Completed]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Frame: Course Completed]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO getNavigation //-->
<!-- IN: targetUrl -->
<!-- IN: userObjTrack -->

<dtml-if "REQUEST.form.get('btn','') == 'reset'">
  <dtml-if userObjTrack>
   <dtml-call "REQUEST.set('attrData',userObjTrack.get('data',{}))">
   <dtml-call "REQUEST.set('l',[])">
   <dtml-in "attrData.keys()">
    <dtml-let k=sequence-item v="attrData[k]">
     <dtml-unless "scoId==k">
      <dtml-call "l.extend([k,v])">
     </dtml-unless>
    </dtml-let>
   </dtml-in>
   <dtml-call "REQUEST.set('attrData',dict_list(l))">
   <dtml-call "updatePersonalTrack(_,_,courseId=getHome().id+'_'+getParentNode().id[1:],attrData=attrData)">
   <div class="system-msg" >
    Exam <i><dtml-var id></i> reset!<br />(<dtml-var "getLangFmtDate(ZopeTime())">) 
   </div>
  </dtml-if>
</dtml-if>

<div class="navigationScorm">
<table cellspacing="0" cellpadding="2" border="0">
<dtml-call "REQUEST.set('nextScoId',getObjProperty('getNextScoId',REQUEST))">
<dtml-call "REQUEST.set('break',_.False)">

<dtml-comment>
  <!-- Pre-parsing manifest to identify active SCO -->
</dtml-comment>
<dtml-call "REQUEST.set('activeScoId',_.None)">
<dtml-call "REQUEST.set('activeScoIdPathList',[])">
<dtml-call "REQUEST.set('activeScoParentId',_.None)">
<dtml-in "getObjProperty('_imsmanifest',REQUEST)" mapping>
  <dtml-if "REQUEST.form.get('scoId','')==id or 
           (REQUEST.form.get('scoId','')=='' and nextScoId==id) ">
    <dtml-call "REQUEST.set('activeScoId',id)">
    <dtml-call "REQUEST.set('activeScoLevel',level)">
    <dtml-call "REQUEST.set('activeScoIdPathList',[])">
    <dtml-if "href is not _.None">
      <dtml-call "REQUEST.set('activeScoIdPathList',href.split('/')[:-1])">
    </dtml-if>
    <dtml-try><dtml-call "REQUEST.set('activeScoParentId',href.split('/')[-3])">
    <dtml-except><dtml-call "REQUEST.set('activeScoParentId',id)">
    </dtml-try>
<dtml-comment>
    <div style="color:#ddd;font-size:9px;" >
      activeScoLevel: <dtml-var activeScoLevel> |
      activeScoId: <dtml-var activeScoId><br />
      activeScoIdPathList: <dtml-var activeScoIdPathList>
   </div>
</dtml-comment>
  </dtml-if>
</dtml-in>

<dtml-in "getObjProperty('_imsmanifest',REQUEST)" mapping>
  <dtml-call "REQUEST.set('display',_.True)">
  <dtml-call "REQUEST.set('attrData',{})">
  
  <dtml-if userObjTrack>
    <dtml-call "REQUEST.set('attrData',userObjTrack.get('data',{}))">
  <dtml-else>   
    <dtml-in sequencing_rules mapping>
      <dtml-if "rule_condition_op == 'not' and rule_condition == 'satisfied'">
        <dtml-call "REQUEST.set('display',_.False)">
      </dtml-if>
    </dtml-in>
  </dtml-if>
  
  <dtml-in sequencing_rules mapping>  
    <dtml-let cmiDict="attrData.get(rule_condition_ref,{})" 
             success_status="cmiDict.get( 'cmi.success_status' ,'unknown').lower()"
             completion_status="cmiDict.get( 'cmi.completion_status' ,'unknown').lower()"
             satisfied="success_status == 'passed'"
             completed="completion_status == 'completed'">
    <dtml-if "rule_condition_op == 'not'">
        <dtml-call "REQUEST.set('display',REQUEST.get('display') and
          ( completion_status != 'unknown') and (
          ( rule_condition == 'satisfied' and not satisfied ) or
       ( rule_condition == 'completed' and not completed ) ) )">
      <dtml-else>
        <dtml-call "REQUEST.set('display',REQUEST.get('display') and (
          ( completion_status == 'unknown') or
          ( rule_condition == 'satisfied' and satisfied ) or
       ( rule_condition == 'completed' and completed ) ) )">
      </dtml-if>
    </dtml-let> 
  </dtml-in>
  
  <dtml-try>
    <dtml-call "REQUEST.set('parentId',href.split('/')[-3])">
  <dtml-except>
    <dtml-call "REQUEST.set('parentId',id)">
  </dtml-try>

  <dtml-call "REQUEST.set('scoIsInContext',level<3 or
                             parentId in activeScoIdPathList )">
  <dtml-call "REQUEST.set('scoIsSiblingOrFolder',level<3 or
                             learningresourcetype in ['lecture.folder'] or
                             parentId == activeScoParentId or  
                             parentId == activeScoId )">

  <dtml-if "display and 
            (getObjProperty('macronav_display',REQUEST)!='context' or scoIsInContext) and
            (getObjProperty('macronav_display',REQUEST)!='folders' or scoIsSiblingOrFolder)
            ">

  <dtml-comment><!-- TF: Testing/Debugging -->
  <tr><td colspan="2" nowrap="nowrap" style="font-size:9px;border-top:1px dotted gray;     
      <dtml-if isScoInContext>background-color:green;
      <dtml-else>background-color:red;
      </dtml-if>">
      href: <dtml-var href>
      id: <dtml-var id>, parentId: <dtml-var parentId>
    </td></tr></dtml-comment>

    <tr <dtml-if "id == activeScoId">class="activeSCO"</dtml-if> >
      <td class="navMicro" style="vertical-align:top;white-space:nowrap" >

    <dtml-call "REQUEST.set('reset',_.False)">
    <dtml-if userObjTrack>
     <dtml-let attrData="userObjTrack.get('data',{})" 
                cmiDict="attrData.get(id,{})" 
                success_status="cmiDict.get( 'cmi.success_status' ,'unknown')"
                completion_status="cmiDict.get( 'cmi.completion_status' ,'unknown')">
      <dtml-if href>
       <dtml-if "completion_status in ['completed']">
        <dtml-if "success_status in ['failed']">
         <span style="color:red">f</span>
         <dtml-call "REQUEST.set('reset',REQUEST['reset'] or getObjProperty('resetexam',REQUEST) in [1,_.True])">
        <dtml-elif "success_status in ['passed']">
         <span style="color:green">+</span>
         <dtml-call "REQUEST.set('reset',REQUEST['reset'] or getObjProperty('resetexam',REQUEST) in [1,_.True])">
        <dtml-else>+</dtml-if>
       <dtml-elif "completion_status in ['incomplete']">
        <span style="color:yellow">-</span>
       <dtml-else>
        <span style="color:red">-</span></dtml-if>
      <dtml-else>&nbsp;</dtml-if>
     </dtml-let>
    </dtml-if>
   
   </td>
   <td style="padding-left:<dtml-var "(level-1)*8">px;">
    
    <dtml-if break>
      <span class="navMicro" style="color:gray"
       ><img src="<dtml-if "learningresourcetype in ['Exam','Self Assessment']"><dtml-var "getObjProperty('icon_exam',REQUEST).getHref(REQUEST)"><dtml-elif "learningresourcetype=='lecture.document'"><dtml-var MISC_ZMS>zmsdocument_disabled.gif<dtml-else><dtml-var MISC_ZMS>zmsfolder_disabled.gif</dtml-if>" 
             title="" border="0" align="absmiddle"/> <dtml-if "learningresourcetype in ['Exam','Self Assessment'] and getObjProperty('mandatoryexam',REQUEST)"><span style="color:red;font-weight:bold">!</span> </dtml-if><dtml-var title></span>
     <dtml-else>
      <a href="<dtml-var "url_append_params(REQUEST['targetUrl'],{'scoId':id})">" class="navMicro"
       ><img src="<dtml-if "learningresourcetype in ['Exam','Self Assessment']"><dtml-var "getObjProperty('icon_exam',REQUEST).getHref(REQUEST)"><dtml-elif "learningresourcetype=='lecture.document'"><dtml-var MISC_ZMS>ico_document.gif<dtml-else><dtml-var MISC_ZMS>ico_folder.gif</dtml-if>" 
             title="" border="0" align="absmiddle" /><dtml-if "learningresourcetype in ['Exam','Self Assessment'] and getObjProperty('mandatoryexam',REQUEST)"><span style="color:red;font-weight:bold">!</span> </dtml-if>
        <dtml-var title></a>
      <dtml-if "id == activeScoId">
       <img src="<dtml-var "getObjProperty('icon_this',REQUEST).getHref(REQUEST)">" 
            title="" border="0" align="absmiddle" />
      </dtml-if>
      <dtml-if reset>
       <dtml-if actionId>
        <a href="<dtml-var URL>?lang=<dtml-var lang>&<dtml-var actionId>=<dtml-var "REQUEST[actionId]">&btn=reset&scoId=<dtml-var id>" target="Navigation" class="navMicro" title="Reset!"><img src="<dtml-var "getObjProperty('btn_reset',REQUEST).getHref(REQUEST)">" title="Reset!" border="0" align="absmiddle"/></a>       
       </dtml-if>
      </dtml-if>
     </dtml-if>
   </td>
  </tr> 
 </dtml-if>
 <dtml-call "REQUEST.set('break',REQUEST['break'] or nextScoId==id)">
 <dtml-call "REQUEST.set('break',REQUEST['break'] and not getObjProperty('macronav',REQUEST) in ['custom sequence'])">

</dtml-in>
</table>
</div>

<!--// EO getNavigation //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[getNavigation]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Returns navigation TOC]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO getManifestAbsoluteUrl //-->

<dtml-call "REQUEST.set('url',getObjProperty('url',REQUEST))">
<dtml-if "REQUEST['url']">
 <dtml-call "REQUEST.set('obj',getLinkObj(REQUEST['url'],REQUEST))">
 <dtml-if "REQUEST['obj']">
  <dtml-call "REQUEST.set('url',REQUEST['obj'].absolute_url())">
 </dtml-if>
 <dtml-unless "REQUEST['url'][-1]=='/'">
  <dtml-call "REQUEST.set('url',REQUEST['url']+'/')">
 </dtml-unless>
</dtml-if>

<!--// EO getManifestAbsoluteUrl //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[getManifestAbsoluteUrl]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Returns absolute url of manifest.xml]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO getPersonalTrack //-->

 <dtml-let userObj="getPersonalProfileByEmail(_,_,userObjEmail=AUTHENTICATED_USER.getId())">
  <dtml-if userObj>
   <dtml-let userObjTrack="userObj.get('userObjTracks',{}).get(getParentNode().id,_.None)">
    <dtml-return userObjTrack>
   </dtml-let>
  </dtml-if>
 </dtml-let>
 <dtml-return "_.None">

<!--// EO getPersonalTrack //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[getPersonalTrack]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Returns userObjTrack]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO getNextScoId //-->

  <dtml-call "REQUEST.set('scoId','')">
  
  <dtml-if userObjTrack>
  <dtml-call "REQUEST.set('break',_.False)">
   <dtml-let attrData="userObjTrack.get('data',{})">
    <dtml-in "getObjProperty('_imsmanifest',REQUEST)" mapping>
     <dtml-if href>
      <dtml-var sequence-item><br/>
      <dtml-call "REQUEST.set('display',_.True)">
      <dtml-in sequencing_rules mapping>
       <dtml-let cmiDict="attrData.get(rule_condition_ref,{})" 
                 success_status="cmiDict.get( 'cmi.success_status' ,'unknown')"
                 completion_status="cmiDict.get( 'cmi.completion_status' ,'unknown')"
                 satisfied="success_status == 'passed'"
                 completed="completion_status == 'completed'">
        <dtml-if "rule_condition_op=='not'">
         <dtml-call "REQUEST.set('display',REQUEST.get('display') and (
           ( completion_status == 'unknown' ) or
           ( rule_condition == 'satisfied' and not satisfied ) or
           ( rule_condition == 'completed' and not completed ) ) )">
        <dtml-else>
         <dtml-call "REQUEST.set('display',REQUEST.get('display') and (
           ( completion_status == 'unknown' ) or
           ( rule_condition == 'satisfied' and satisfied ) or
           ( rule_condition == 'completed' and completed ) ) )">
        </dtml-if>
       </dtml-let>
      </dtml-in>
      <dtml-if "REQUEST['display']">
       <dtml-unless "REQUEST['break']">
        <dtml-call "REQUEST.set('break_rc',_.True)">
        <dtml-in sequencing_rules mapping>
         <dtml-let cmiDict="attrData.get( rule_condition_ref, {})" 
                   success_status="cmiDict.get( 'cmi.success_status' ,'unknown')"
                   completion_status="cmiDict.get( 'cmi.completion_status' ,'unknown')"
                   satisfied="success_status == 'passed'"
                   completed="completion_status == 'completed'">
          <dtml-call "REQUEST.set( 'scoId', id)">
          <dtml-if "rule_condition_op=='not'">
           <dtml-call "REQUEST.set( 'break_rc',REQUEST.get( 'break_rc') and (
             ( rule_condition == 'satisfied' and not satisfied ) or
             ( rule_condition == 'completed' and not completed ) ) )">
          <dtml-else>
           <dtml-call "REQUEST.set( 'break_rc',REQUEST.get( 'break_rc') and (
             ( rule_condition == 'satisfied' and satisfied ) or
             ( rule_condition == 'completed' and completed ) ) )">
          </dtml-if>
         </dtml-let>
        </dtml-in>
        <dtml-if "REQUEST['break_rc']">
         <dtml-let cmiDict="attrData.get(id,{})" 
                   success_status="cmiDict.get( 'cmi.success_status' ,'unknown')"
                   completion_status="cmiDict.get( 'cmi.completion_status' ,'unknown')">
          <dtml-call "REQUEST.set('scoId',id)">
          <dtml-call "REQUEST.set('break',(completion_status != 'completed') or (getObjProperty('mandatoryexam',REQUEST) and success_status == 'failed'))">
         </dtml-let>
        </dtml-if>
       </dtml-unless>
      </dtml-if>
     </dtml-if>
    </dtml-in>
    <dtml-if "REQUEST.get( 'cmiScoId', '') != '' and 
              REQUEST.get( 'cmiScoMode', 'normal') != 'browse'">
     <dtml-if "attrData.get( REQUEST.get( 'cmiScoId'),{}).get( 'cmi.success_status', 'unknown') in [ 'passed', 'failed']">
      <dtml-call "REQUEST.set( 'scoId' ,REQUEST.get( 'cmiScoId'))">
     </dtml-if>
    </dtml-if>
   </dtml-let>
  </dtml-if>
  <dtml-if "REQUEST.get( 'scoId', '')==''">
   <dtml-in "getObjProperty( '_imsmanifest', REQUEST)" mapping>
    <dtml-if "REQUEST.get( 'scoId', '')==''">
     <dtml-call "REQUEST.set( 'scoId', id)">
    </dtml-if>
    <dtml-if "REQUEST.get( 'scoId', '')==id">
     <dtml-if sequence-end>
     <dtml-if href>
      <dtml-call "REQUEST.set( 'scoId', id)">
     <dtml-else>
      <dtml-call "REQUEST.set( 'scoId', '')">
     </dtml-if>
     <dtml-else>
      <dtml-call "REQUEST.set( 'scoId', '<EOF>')">
    </dtml-if>
    </dtml-if>
   </dtml-in>
  </dtml-if>
  <dtml-return "REQUEST['scoId']">

<!--// EO getNextScoId //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[getNextScoId]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Returns Id of next unattempted SCO]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO postTrack //-->

<dtml-if cmiScoId>
 <dtml-if userObjTrack>
  <dtml-comment>
  *** Get LMS-values. ***
  </dtml-comment>
  <dtml-call "REQUEST.set('attrData',userObjTrack.get('data',{}))">
  <dtml-call "REQUEST.set('cmiDict',attrData.get(cmiScoId,{}))">
  <dtml-comment>
  *** Reset LMS-values. ***
  </dtml-comment>
  <dtml-if "cmiDict.get( 'cmi.success_status' ,'unknown').lower() == 'failed' and 
            cmiDict.get( 'cmi.completion_status' ,'unknown').lower() == 'completed' and 
            getObjProperty('mandatoryexam',REQUEST) in [1,_.True]">
   <dtml-call "operator_setitem(attrData,cmiScoId,{})">   
  <dtml-comment>
  *** Apply LMS-values. ***
  </dtml-comment>
  <dtml-else>
  <dtml-call "REQUEST.set('LMSValues',parseXmlString('<?xml version='+_.chr(34)+'1.0'+_.chr(34)+' encoding='+_.chr(34)+'ISO-8859-1'+_.chr(34)+'?>'+REQUEST.get('cmiScoXml','')))">
  <dtml-in "LMSValues.keys()">
   <dtml-let key=sequence-item>
     <dtml-call "operator_setitem(cmiDict,key,LMSValues[key])">
   </dtml-let>
  </dtml-in>
   <dtml-call "operator_setitem(attrData,cmiScoId,cmiDict)">
  </dtml-if>
  <dtml-comment>
  *** Update personal-track. ***
  </dtml-comment>
  courseId=<dtml-var "getHome().id+'_'+getParentNode().id[1:]">
  attrData=<dtml-var attrData>
  <dtml-call "updatePersonalTrack(_,_,courseId=getHome().id+'_'+getParentNode().id[1:],attrData=attrData)">
  <dtml-comment>
  *** Trigger course-completed event. ***
  </dtml-comment>
  <dtml-if "cmiDict.get( 'cmi.completion_status','unknown').lower() == 'completed' and cmiScoId==imsmanifest[-1]['id']">
   <dtml-call "getObjProperty('onCourseCompletedEvt',REQUEST)">
  </dtml-if>
 </dtml-if>
</dtml-if>

<!--// EO postTrack //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[postTrack]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Post data to track]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO onChangeObjEvt //-->

<dtml-call "REQUEST.set('url',getObjProperty('url',REQUEST))">
<dtml-if "REQUEST['url']">
 <dtml-call "REQUEST.set('bk_lang',REQUEST['lang'])">
 <dtml-in "getLangIds()">
  <dtml-call "REQUEST.set('lang',_['sequence-item'])">
 <dtml-call "REQUEST.set('obj',getLinkObj(REQUEST['url'],REQUEST))">
 <dtml-if "REQUEST['obj'] is not _.None">
  <dtml-with "REQUEST['obj']">
   <dtml-if "'imsmanifest.xml' in objectIds(['File'])">
    <dtml-call "REQUEST.set('imsmanifest',_.str(_['imsmanifest.xml']))">
   <dtml-else>
    <dtml-call "REQUEST.set('imsmanifest',getIMSManifest(REQUEST))">
   </dtml-if>
  </dtml-with>
 <dtml-else>
  <dtml-unless "REQUEST['url'][-1]=='/'">
   <dtml-call "REQUEST.set('url',REQUEST['url']+'/')">
  </dtml-unless>
  <dtml-call "REQUEST.set('imsmanifest',http_import(REQUEST['url']+'imsmanifest.xml'))">
 </dtml-if>
 <dtml-call "setObjProperty('_imsmanifest',parseIMSManifest(REQUEST['imsmanifest']),REQUEST['lang'])">
 </dtml-in>
 <dtml-call "REQUEST.set('lang',REQUEST['bk_lang'])">
</dtml-if>

<!--// EO onChangeObjEvt //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[onChangeObjEvt]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Event: Change]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO onCourseCompletedEvt //-->

<!--// EO onCourseCompletedEvt //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[onCourseCompletedEvt]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Event: Course Completed]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO bodyContent //-->

<h2 style="vertical-align:bottom">
<dtml-let icon="getObjProperty('icon',REQUEST)">
  <dtml-if icon>
    <img src="<dtml-var "icon.getHref(REQUEST)">" title="<dtml-var "getTitlealt(REQUEST)">" border="0" align="top" />
  </dtml-if>
</dtml-let>
<dtml-var "getTitlealt(REQUEST)"></h2>

  <div class="secondColorLight">
   <dtml-if "getObjProperty('_imsmanifest',REQUEST)">
    <dtml-try>
     <dtml-call "REQUEST.set('userObjTrack',getObjProperty('getPersonalTrack',REQUEST))">
     <dtml-call "REQUEST.set('targetUrl',getHref2IndexHtml(REQUEST))">
     <dtml-var "getObjProperty('getNavigation',REQUEST)">
    <dtml-except>
     <font style="color:red;">Exception!</font>
    </dtml-try>
   <dtml-else>
    <font style="color:red;">Course not assigned!</font>
   </dtml-if>
  </div>

<!--// EO bodyContent //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[bodyContent]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Body content]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="delete" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="delete_custom"><![CDATA[<dtml-return "_.True">]]></item>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="edit_custom"><![CDATA[<dtml-return "_.True">]]></item>
<item key="insert" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert_custom"><![CDATA[<dtml-return "_.True">]]></item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Course-Content]]></item>
<item key="package"><![CDATA[com.zms.elc.lms]]></item>
<item key="type"><![CDATA[ZMSDocument]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_userObjSCA -->


<!-- EO bodyContentZMSCustom_userObjSCA -->]]></item>
<item key="enabled" type="int">1</item>
<item key="key"><![CDATA[userObjSCA]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO getPersonalProfileById //-->
<!--// @param userObjId  //-->

 <dtml-in "getDocumentElement().filteredTreeNodes(REQUEST,'userObj')">
  <dtml-if "id == userObjId">
   <dtml-let l="[]">
    <dtml-call "l.extend(['id',id])">
    <dtml-call "l.extend(['index_html',url_append_params(getHref2IndexHtml(REQUEST,deep=0),{'ACTION%s'%meta_id:'manageProfile'})])">
    <dtml-in "getMetaobjAttrIds(meta_id)">
     <dtml-let key=sequence-item metaObjAttr="getMetaobjAttr(meta_id,key)">
      <dtml-if "metaObjAttr['type'] in ['boolean','string','text','select']">
       <dtml-call "l.extend([key,getObjProperty(key,REQUEST)])">
      </dtml-if>
     </dtml-let>
    </dtml-in>
    <dtml-let m="[]">
     <dtml-in "getObjChildren('userObjTracks',REQUEST)">
      <dtml-let n="[]">
       <dtml-call "n.extend(['ref',getObjProperty('attrRef',REQUEST)])">
       <dtml-call "n.extend(['data',getObjProperty('attrData',REQUEST)])">
       <dtml-call "n.extend(['creation_dt',getObjProperty('attrCreationDt',REQUEST)])">
       <dtml-call "m.extend([getObjProperty('attrRef',REQUEST).split('/')[-2],dict_list(n)])">
      </dtml-let>
     </dtml-in>
     <dtml-call "l.extend(['userObjTracks',dict_list(m)])">
    </dtml-let>
    <dtml-return "dict_list(l)">
   </dtml-let>
  </dtml-if>
 </dtml-in>
 <dtml-return "_.None">

<!--// EO getPersonalProfileById //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[getPersonalProfileById]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Returns personal profile by id]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO getPersonalProfileByEmail //-->
<!--// @param userObjEmail  //-->

 <dtml-in "getDocumentElement().filteredTreeNodes(REQUEST,'userObj')">
  <dtml-if "getObjProperty('profileEmail',REQUEST) == userObjEmail">
   <dtml-let l="[]">
    <dtml-call "l.extend(['id',id])">
    <dtml-call "l.extend(['index_html',url_append_params(getHref2IndexHtml(REQUEST,deep=0),{'ACTION%s'%meta_id:'manageProfile'})])">
    <dtml-in "getMetaobjAttrIds(meta_id)">
     <dtml-let key=sequence-item metaObjAttr="getMetaobjAttr(meta_id,key)">
      <dtml-if "metaObjAttr['type'] in ['boolean','string','text']">
       <dtml-call "l.extend([key,getObjProperty(key,REQUEST)])">
      </dtml-if>
     </dtml-let>
    </dtml-in>
    <dtml-let m="[]">
     <dtml-in "getObjChildren('userObjTracks',REQUEST)">
      <dtml-let n="[]">
       <dtml-call "n.extend(['ref',getObjProperty('attrRef',REQUEST)])">
       <dtml-call "n.extend(['data',getObjProperty('attrData',REQUEST)])">
       <dtml-call "n.extend(['creation_dt',getObjProperty('attrCreationDt',REQUEST)])">
       <dtml-call "m.extend([getObjProperty('attrRef',REQUEST).split('/')[-2],dict_list(n)])">
      </dtml-let>
     </dtml-in>
     <dtml-call "l.extend(['userObjTracks',dict_list(m)])">
    </dtml-let>
    <dtml-return "dict_list(l)">
   </dtml-let>
  </dtml-if>
 </dtml-in>
 <dtml-return "_.None">

<!--// EO getPersonalProfileByEmail //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[getPersonalProfileByEmail]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Returns personal profile by email]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO getPersonalProfiles //-->

<dtml-let rtn="[]">
 <dtml-in "getDocumentElement().filteredTreeNodes(REQUEST,'userObj')">
  <dtml-let l="[]">
   <dtml-call "l.extend(['id',id])">
   <dtml-in "getMetaobjAttrIds(meta_id)">
    <dtml-let key=sequence-item metaObjAttr="getMetaobjAttr(meta_id,key)">
     <dtml-if "metaObjAttr['type'] in ['boolean','string','text','select']">
      <dtml-call "l.extend([key,getObjProperty(key,REQUEST)])">
     </dtml-if>
    </dtml-let>
   </dtml-in>
   <dtml-call "rtn.append(dict_list(l))">
  </dtml-let>
 </dtml-in>
 <dtml-return rtn>
</dtml-let>

<!--// EO getPersonalProfiles //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[getPersonalProfiles]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Returns personal profiles]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO insertPersonalTrack //-->
<!--// @param titlealt        //-->
<!--// @param attrRef         //-->

 <dtml-in "getDocumentElement().filteredTreeNodes(REQUEST,'userObj')">
  <dtml-if "getObjProperty('profileEmail',REQUEST) == AUTHENTICATED_USER.getId()">
   <dtml-call "REQUEST.set('userObjTrack',manage_addZMSCustom('userObjTrack',
    {'id_prefix':'userObjTracks'
    ,'titlealt':titlealt
    ,'attrRef':attrRef
    ,'attrData':{}
    ,'attrCreationDt':ZopeTime()
    },REQUEST))">
  </dtml-if>
 </dtml-in>

<!--// EO insertPersonalTrack //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[insertPersonalTrack]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[INSERT Personal-Track]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO deletePersonalTrack //-->
<!--// @param attrRef         //-->

 <dtml-in "getDocumentElement().filteredTreeNodes(REQUEST,'userObj')">
  <dtml-if "getObjProperty('profileEmail',REQUEST) == AUTHENTICATED_USER.getId()">
   <dtml-call "REQUEST.set('ids',[])">
   <dtml-in "getObjChildren('userObjTracks',REQUEST)">
    <dtml-if "getObjProperty('attrRef',REQUEST)==attrRef">
     <dtml-call "ids.append(id)">
    </dtml-if>
   </dtml-in>
   <dtml-call "delRefByObjs(ids=ids)">
   <dtml-call "manage_delObjects(ids=ids)">
  </dtml-if>
 </dtml-in>

<!--// EO deletePersonalTrack //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[deletePersonalTrack]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[DELETE Personal-Track]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO updatePersonalTrack //-->
<!--// @param courseId        //-->
<!--// @param attrData        //-->

<dtml-in "getDocumentElement().filteredTreeNodes(REQUEST,'userObj')">
 <dtml-if "getObjProperty('profileEmail',REQUEST) == AUTHENTICATED_USER.getId()">
  <dtml-in "getObjChildren('userObjTracks',REQUEST)">
   <dtml-if "'e'+courseId[courseId.find('_')+1:] in getObjProperty('attrRef',REQUEST).split('/')">
    <dtml-call "setObjStateModified(REQUEST)">
    <dtml-call "setObjProperty('attrData',attrData,lang)">
    <dtml-call "onChangeObj(REQUEST)">
   </dtml-if>
  </dtml-in>
 </dtml-if>
</dtml-in>

<!--// EO updatePersonalTrack //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[updatePersonalTrack]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[UPDATE Personal-Track]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO insertPersonalProfile //-->

<dtml-with membersFldr>
 <dtml-call "REQUEST.set('userObj',manage_addZMSCustom(ZMS_INSERT,
   {'active':1
   ,'attr_active_start':ZopeTime()
   ,'profileLastname':REQUEST['profileLastname']
   ,'profileFirstname':REQUEST['profileFirstname']
   ,'profileAcademic':REQUEST.get('profileAcademic','')
   ,'profileSalutation':REQUEST.get('profileSalutation','')
   ,'profileProfession':REQUEST.get('profileProfession','')
   ,'profileDiscipline':REQUEST.get('profileDiscipline','')
   ,'profileCompany':REQUEST.get('profileCompany','')
   ,'profileStreet':REQUEST.get('profileStreet','')
   ,'profileZip':REQUEST.get('profileZip','')
   ,'profileCity':REQUEST.get('profileCity','')
   ,'profileCountry':REQUEST.get('profileCountry','')
   ,'profileTel':REQUEST.get('profileTel','')
   ,'profileFax':REQUEST.get('profileFax','')
   ,'profileEmail':REQUEST['profileEmail']
   ,'profileWWW':REQUEST.get('profileWWW','')
   ,'profilePublic':REQUEST.get('profilePublic',0)
   ,'profileRole':REQUEST['profileRole']
   ,'profilePasswd':REQUEST['profilePasswd']
   },REQUEST))">
</dtml-with>

<!--// EO insertPersonalProfile //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[insertPersonalProfile]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[INSERT Personal-Profile]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO deletePersonalProfile //-->

<dtml-with membersFldr>
</dtml-with>

<!--// EO deletePersonalProfile //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[deletePersonalProfile]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[DELETE Personal-Profile]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO updatePersonalProfile //-->

<dtml-with membersFldr>
</dtml-with>

<!--// EO updatePersonalProfile //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[updatePersonalProfile]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[UPDATE Personal-Profile]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Personal-Profile SCORM Adapter]]></item>
<item key="package"><![CDATA[com.zms.elc.lms]]></item>
<item key="type"><![CDATA[ZMSLibrary]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_courseMembers -->

<dtml-comment>
##########################################################################################
# Author:   Dr.Frank Hoffmann <fh@hoffmannliebenberg.de>
# Company:  HOFFMANN+LIEBENBERG GmbH
# WWW:      http://www.hoffmannliebenberg.de
# Date:     10.06.2007
# Version:  1.1.0
# Comments: ZMS eLearning components.
##########################################################################################
</dtml-comment>

<dtml-var "getObjProperty('initReq',REQUEST)">

<dtml-in "getParentNode().filteredChildNodes(REQUEST,['ZMSCustom'])">
<dtml-if "meta_id=='courseContent'"><dtml-call "REQUEST.set('courseContent',_['sequence-item'])"></dtml-if>
</dtml-in>

<dtml-if "REQUEST.get(actionId,'') in ['LoginRegister']">

 <dtml-call "SESSION.set('sessionRefObjPath',getRefObjPath(getParentNode()))">
 <dtml-call "RESPONSE.redirect(getParentNode().absolute_url()+'/manage_login?lang='+lang+'&manage_tabs_message=LoginRegister')">

<dtml-elif "REQUEST.get(actionId,'') in ['displayPersonalProfile','displayPersonalTrack']">

 <dtml-var "getObjProperty(REQUEST.get(actionId,''),REQUEST)">

<dtml-else>

<!--//  Init object children //-->
<dtml-var "getObjProperty('initObjChildren',REQUEST)">

<dtml-call "REQUEST.set('userObjs',REQUEST.get('userObjs',getPersonalProfiles(_,_)))">
<dtml-call "REQUEST.set('userObj',getPersonalProfileByEmail(_,_,userObjEmail=AUTHENTICATED_USER.getId()))">

<!--// BO Register/Unregister //-->
<dtml-if member>
<dtml-call "REQUEST.set('titlealt',getParentNode().getTitlealt(REQUEST))">
<dtml-call "REQUEST.set('attrRef','{$%s}'%this().relative_obj_path())">
<dtml-if "REQUEST.get(actionId,'') == 'Register' or REQUEST.get('manage_tabs_message','')=='LoginRegister'">
 <dtml-unless "userObj['id'] in memberIds">
  <dtml-call "insertPersonalTrack(_,_,attrRef=attrRef,titlealt=titlealt)">
  <dtml-call "memberIds.append(userObj['id'])">
  <dtml-call "REQUEST.set('ids','')">
  <dtml-in memberIds>
   <dtml-let memberId=sequence-item>
    <dtml-call "REQUEST.set('ids',ids+memberId+'\n')">
   </dtml-let>
  </dtml-in>
  <dtml-call "setObjStateModified(REQUEST)">
  <dtml-call "setObjProperty('memberIds',ids,lang)">
  <dtml-call "onChangeObj(REQUEST)">
  <dtml-call "getObjProperty('onChangeObjEvt',REQUEST,{'fetchReqBuff':0})">
  <!--// Return with message //-->
 <dtml-comment>
   <dtml-call "RESPONSE.redirect(getParentNode().absolute_url()+'?lang='+lang+'&manage_tabs_message='+url_quote(getLangStr('LMS_COURSE_REG_OK',lang)+'!'))">
 </dtml-comment>
 </dtml-unless>
 <dtml-if courseContent>
   <dtml-call "RESPONSE.redirect(courseContent.getHref2IndexHtml(REQUEST)+'?lang='+lang+'&manage_tabs_message='+url_quote(getLangStr('LMS_COURSE_REG_OK',lang)+'!'))">
 </dtml-if>
<dtml-elif "REQUEST.get(actionId,'') == 'Unregister'">
 <dtml-if "userObj['id'] in memberIds">
  <dtml-call "writeLog('[deletePersonalTrack]: attrRef=%s'%attrRef)">
  <dtml-call "deletePersonalTrack(_,_,attrRef=attrRef)">
  <dtml-call "memberIds.remove(userObj['id'])">
  <dtml-call "REQUEST.set('ids','')">
  <dtml-in memberIds>
   <dtml-let memberId=sequence-item>
    <dtml-call "REQUEST.set('ids',ids+memberId+'\n')">
   </dtml-let>
  </dtml-in>
  <dtml-call "setObjStateModified(REQUEST)">
  <dtml-call "setObjProperty('memberIds',ids,lang)">
  <dtml-call "onChangeObj(REQUEST)">
  <dtml-call "getObjProperty('onChangeObjEvt',REQUEST,{'fetchReqBuff':0})">
  <!--// Return with message //-->
  <dtml-call "RESPONSE.redirect(getParentNode().absolute_url()+'/manage_login?lang='+lang+'&manage_tabs_message='+url_quote(getLangStr('LMS_COURSE_UNREG_OK',lang)+'!'))">
 </dtml-if>
</dtml-if>
</dtml-if>
<!--// EO Register/Unregister //-->


<!--// BO Display registered members //-->
<p><strong><dtml-var "_.len(memberIds)"> <dtml-var "getLangStr('LMS_REG_MEMBERS',lang)"></strong></p>
<dtml-if "userObj is not _.None and userObj['id'] in memberIds">
<ol>
<dtml-in memberIds>
 <dtml-let memberId=sequence-item>
  <dtml-in "filter_list(userObjs,'id',memberId,'==')" mapping>
   <li class="navMicro">
    <dtml-if "userObj['id']==id">
     <dtml-var profileFirstname> <dtml-var profileLastname> &raquo;<a href="<dtml-var "courseMembers.getHref2IndexHtml(REQUEST)">?<dtml-var actionId>=displayPersonalTrack&ref=<dtml-var id>" class="navMicro"><dtml-var "getLangStr('LMS_PERSONAL_TRACK',lang)"></a>
    <dtml-elif "userObj['profilePublic'] and profilePublic">
     <dtml-var profileFirstname> <dtml-var profileLastname> &raquo;<a href="<dtml-var "courseMembers.getHref2IndexHtml(REQUEST)">?<dtml-var actionId>=displayPersonalProfile&ref=<dtml-var id>" class="navMicro"><dtml-var "getLangStr('LMS_PERSONAL_PROFILE',lang)"></a>
    <dtml-else>
     N.N.
    </dtml-if>
   </li>
  </dtml-in>
 </dtml-let>
</dtml-in>
</ol>
</dtml-if>
<!--// EO Display registered members //-->


<!--// BO Display registration options //-->
<div class="teaserColor" style="padding:2px">
<div class="primColorLight0" style="padding:2px">
<dtml-if "userObj is not _.None and userObj['id'] in memberIds">
 &raquo; <a style="text-decoration:none;font-weight:bold" 
  href="<dtml-var absolute_url>?lang=<dtml-var lang>&<dtml-var actionId>=Unregister"><dtml-var "getLangStr('LMS_COURSE_UNREG',lang)"></a><br />
<dtml-elif member>
 &raquo; <a style="text-decoration:none;font-weight:bold" 
  href="<dtml-var absolute_url>?lang=<dtml-var lang>&<dtml-var actionId>=Register"><dtml-var "getLangStr('LMS_COURSE_REG',lang)"></a><br />
<dtml-elif "AUTHENTICATED_USER.has_role('Anonymous')">
 &raquo; <a style="text-decoration:none;font-weight:bold" 
 href="<dtml-var absolute_url>?lang=<dtml-var lang>&<dtml-var actionId>=LoginRegister"><dtml-var "getLangStr('LMS_COURSE_LOGINREG',lang)"></a><br />
</dtml-if>
</div>
</div>
<!--// EO Display registration options //-->

</dtml-if>

<!-- EO bodyContentZMSCustom_courseMembers -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[courseMembers]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[title]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Title]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="courseMembers.gif" type="file">47494638396112001000f700004c4c4c6d6d6d6e6e6e9967019a68029c6a049e6c06a06e08a3710ba5730da87610ab7913ae7c16b07e18ff00ffb3811bb4811cb5821db7841fb88520ba8722bc8924bd8a25bf8c27c08d28c28f2ac5922dc7942fc99631cb9833cc9934d3a03bdca944e6b34eefbc57f8c560ffcc67ffd46fffe07b8383838c8c8cffe681ffeb85fff48efff791ffff99fffffff9040100000e002c000000001200100007089f001d081c48b0a0410f1d386c30c8d0838b872e323024e8b085c5162e2c50901061638407033b5cbc08b124021402398c6cf1e2c5ca16070408dcb0b2e54b0301046a78c9b3404e07195ab060d1b2e88ba143710ac4d0428553152d9f3ef529d0420b13584db4cc9a95c04f0a2d4a887d3156acd901321d802d6b96ecd9b46bcdca958b76e0c7060c16284880e08081be06009c20782280e1c388030c761010003b</data></item>
<item key="default"/>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[memberIds]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Registered Members-IDs]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO initReq //-->

 <dtml-call "REQUEST.set('courseMembers',this())">
 <dtml-call "REQUEST.set('actionId','ACTION%s'%meta_id)">
 <dtml-call "REQUEST.set('templateUrl','%s/bodyContentZMSCustom_%s'%(absolute_url(),meta_id))">

<!--// EO initReq //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[initReq]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Init request]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO initObjChildren //-->

<dtml-call "REQUEST.set('b',_.False)">
<dtml-call "REQUEST.set('ids',getObjProperty('memberIds',REQUEST))">
<dtml-call "REQUEST.set('memberIds',[])">
<dtml-call "REQUEST.set('userObjs',REQUEST.get('userObjs',getPersonalProfiles(_,_)))">
<dtml-in "string_list(ids)">
 <dtml-let memberId=sequence-item>
  <dtml-if "_.len(filter_list(userObjs,'id',memberId,'=='))==1">
   <dtml-call "memberIds.append(memberId)">
  <dtml-else>
   <dtml-call "REQUEST.set('b',_.True)">
  </dtml-if>
 </dtml-let>
</dtml-in>
<dtml-in "getRefByObjs(REQUEST)">
 <dtml-let ref=sequence-item track="getLinkObj(ref)">
  <dtml-if track>
   <dtml-if "track.isMetaType('userObjTrack') and 
             track.getParentNode().isMetaType('userObj') and
             track.getParentNode().getParentNode().isMetaType('ZMSFolder')">
    <dtml-let member="track.getParentNode()" memberId="member.id">
     <dtml-unless "memberId in memberIds">
      <dtml-call "memberIds.append(memberId)">
      <dtml-call "REQUEST.set('b',_.True)">
     </dtml-unless>
    </dtml-let>
   </dtml-if>
  </dtml-if>
 </dtml-let>
</dtml-in>
<dtml-if b>
 <dtml-call "REQUEST.set('ids','')">
 <dtml-in memberIds>
  <dtml-let memberId=sequence-item>
   <dtml-call "REQUEST.set('ids',ids+memberId+'\n')">
  </dtml-let>
 </dtml-in>
 <dtml-call "setObjStateModified(REQUEST)">
 <dtml-call "setObjProperty('memberIds',ids,lang)">
 <dtml-call "onChangeObj(REQUEST)">
</dtml-if>

<!--// EO initObjChildren //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[initObjChildren]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Init object children]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO onChangeObjEvt //-->

<dtml-call "REQUEST.set('msg',[])">
<dtml-let thisId=id>

 <!-- ### Retrieve subscribers -->
 <dtml-call "msg.append('Retrieve subscribers\n')">
 <dtml-call "REQUEST.set('ids',['admin'])">
 <dtml-let userObjs="getPersonalProfiles(_,_)">
  <dtml-in "string_list(getObjProperty('memberIds',REQUEST,{'fetchReqBuff':0}))">
   <dtml-let memberId=sequence-item>
    <dtml-in "filter_list(userObjs,'id',memberId,'==')" mapping>
     <dtml-unless "profileEmail in REQUEST['ids']">
      <dtml-call "REQUEST['ids'].append(profileEmail)">
      <dtml-call "msg.append('* '+profileEmail+'\n')">
     </dtml-unless>
    </dtml-in>
   </dtml-let>
  </dtml-in>
 </dtml-let>
 
 <!-- ### Refresh subscribers -->
 <dtml-call "msg.append('Create subscribers\n')">
 <dtml-in "getParentNode().getChildNodes(REQUEST,PAGES)">
  <dtml-let ob=sequence-item>
   <dtml-unless "id==thisId">
    <dtml-call "REQUEST.set('local_ids',[])">
    <dtml-in get_local_roles>
     <dtml-let name=sequence-key roles="intersection_list(['ZMSSubscriber'],_['sequence-item'])">
      <dtml-if roles>
       <dtml-call "local_ids.append(name)">
      </dtml-if roles>
     </dtml-let>
    </dtml-in>
    <dtml-in "REQUEST['local_ids']">
     <dtml-let id=sequence-item>
      <dtml-unless "id in REQUEST['ids']">
       <dtml-call "delLocalUser(id,getRefObjPath(ob))">
       <dtml-call "msg.append('- Delete local user '+id+'@'+ob.id+'\n')">
      </dtml-unless>
     </dtml-let>
    </dtml-in>
    <dtml-in "REQUEST['ids']">
     <dtml-let id=sequence-item>
      <dtml-unless "id in REQUEST['local_ids']">
       <dtml-call "setLocalUser(id,getRefObjPath(ob),['ZMSSubscriber'],getLanguages())">
       <dtml-call "msg.append('+ '+id+'@'+ob.id+'\n')">
      </dtml-unless>
     </dtml-let>
    </dtml-in>
   </dtml-unless>
  </dtml-let>
 </dtml-in>

</dtml-let>
<dtml-return "''.join(msg)">
 
<!--// EO onChangeObjEvt //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[onChangeObjEvt]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Event: Change]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO bodyContent //-->

  <h2><dtml-var "getTitlealt(REQUEST)"></h2>
  <div class="primColorLight0">
   <dtml-var "getBodyContent(REQUEST)">
  </div>

<!--// EO bodyContent //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[bodyContent]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Body content]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO displayPersonalProfile //-->

<dtml-call "REQUEST.set('userObj',getPersonalProfileById(_,_,userObjId=ref))">
<dtml-call "REQUEST.set('userObjTrack',userObj['userObjTracks'][getParentNode().id])">
<dtml-call "REQUEST.set('attrData',userObjTrack.get('data',{}))">

<dtml-let contentFolder="getParentNode().filteredChildNodes(REQUEST,'courseContent')[0]">

<h1><dtml-var "display_type(REQUEST)"> for &quot;<dtml-var "contentFolder.getParentNode().getTitle(REQUEST)">&quot;</h1>
<p class="description">
  <dtml-var "userObj.get('profileAcademic')"> <dtml-var "userObj.get('profileFirstname')"> <dtml-var "userObj.get('profileLastname')"> <dtml-var "getLangStr('LMS_REG_SINCE',lang)"> 
  <dtml-var "getLangFmtDate(userObjTrack.get('creation_dt'),lang,'DATETIME_FMT')"></p>
<table>
<tr>
<td valign="top">
<dtml-if "userObj.get('profileImage')">
<img src="<dtml-var "userObj.get('profileImage').getHref(REQUEST)">">
</dtml-if>
</td>
<td>
<table>
<tr class="neutralColorLight0">
<td valign="top"><dtml-var "getLangStr('PROFILEPROFESSION',lang)">:</td>
<td><dtml-var "userObj.get('profileProfession')"></td>
</tr>
<tr class="neutralColorLight0">
<td valign="top"><dtml-var "getLangStr('PROFILEDISCIPLINE',lang)">:</td>
<td><dtml-var "userObj.get('profileDiscipline')"></td>
</tr>

<tr class="neutralColorLight0">
<td valign="top"><dtml-var "getLangStr('PROFILECOMPANY',lang)">:</td>
<td><dtml-var "userObj.get('profileCompany')"></td>
</tr>
<tr class="neutralColorLight0">
<td valign="top"><dtml-var "getLangStr('PROFILESTREET',lang)">:</td>
<td><dtml-var "userObj.get('profileStreet')"></td>
</tr>
<tr class="neutralColorLight0">
<td valign="top"><dtml-var "getLangStr('PROFILEZIP',lang)">/<dtml-var "getLangStr('PROFILECITY',lang)">:</td>
<td><dtml-var "userObj.get('profileZip')"> 
<dtml-var "userObj.get('profileCity')"></td>
</tr>
<tr valign="top" class="neutralColorLight0">
 <td><dtml-var "getLangStr('PROFILECOUNTRY',lang)">:</td>
 <td><dtml-var "userObj.get('profileCountry')"></td>
</tr>
<tr valign="top" class="neutralColorLight0">
 <td><dtml-var "getLangStr('PROFILETEL',lang)">:</td>
 <td><dtml-var "userObj.get('profileTel')"></td>
</tr>
<tr valign="top" class="neutralColorLight0">
 <td><dtml-var "getLangStr('PROFILEFAX',lang)">:</td>
 <td><dtml-var "userObj.get('profileFax')"></td>
</tr>
<tr valign="top" class="neutralColorLight0">
 <td><dtml-var "getLangStr('PROFILEEMAIL',lang)">:</td>
 <td><a href="mailto:<dtml-var "userObj.get('profileEmail')">"><dtml-var "userObj.get('profileEmail')"></a></td>
</tr>
<tr valign="top" class="neutralColorLight0">
 <td><dtml-var "getLangStr('PROFILEWWW',lang)">:</td>
 <td><a href="<dtml-var "userObj.get('profileWWW')">"><dtml-var "userObj.get('profileWWW')"></a></td>
</tr>
<tr valign="top" class="neutralColorLight0">
 <td><dtml-var "getLangStr('PROFILECV',lang)">:</td>
 <td><dtml-var "userObj.get('profileCV')" newline_to_br html_quote></td>
</tr>
<tr valign="top" class="neutralColorLight0">
 <td><dtml-var "getLangStr('LMS_COURSES',lang)">:</td>
 <td><dtml-var "userObj.get('displayCourses')"></td>
</tr>
</table>
</td>
</tr>
</table>

</dtml-let>

<!--// EO displayPersonalProfile //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[displayPersonalProfile]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Display personal profile]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO displayPersonalTrack //-->

<dtml-call "REQUEST.set('userObj',getPersonalProfileByEmail(_,_,userObjEmail=AUTHENTICATED_USER.getId()))">
<dtml-call "REQUEST.set('userObjTrack',userObj['userObjTracks'][getParentNode().id])">
<dtml-call "REQUEST.set('attrData',userObjTrack.get('data',{}))">

<dtml-let contentFolder="getParentNode().filteredChildNodes(REQUEST,'courseContent')[0]">

<h1><dtml-var "display_type(REQUEST)"> <dtml-var "getLangStr('LMS_FOR',lang)"> &quot;<dtml-var "contentFolder.getParentNode().getTitle(REQUEST)">&quot;</h1>
<p class="description">
 <dtml-var "userObj.get('profileAcademic')"> <dtml-var "userObj.get('profileFirstname')"> <dtml-var "userObj.get('profileLastname')"> <dtml-var "getLangStr('LMS_REG_SINCE',lang)"> 
 <dtml-var "getLangFmtDate(userObjTrack.get('creation_dt'),lang,'DATETIME_FMT')"></p>
 <dtml-with contentFolder>
  <dtml-let imsmanifest="getObjProperty('_imsmanifest',REQUEST)">
  <dtml-in imsmanifest mapping>
   <dtml-let cmiDict="attrData.get(id,{})"
             success_status="cmiDict.get( 'cmi.success_status' ,'unknown')"
             completion_status="cmiDict.get( 'cmi.completion_status' ,'unknown')">
    <table cellspacing="0" cellpadding="2" border="0">
    <dtml-if href>
     <tr valign="top">
      <td class="navMicro" nowrap="nowrap" rowspan="2">
        <dtml-if "completion_status in ['completed']">
         <dtml-if "success_status in ['failed']">
          <font style="color:red">f</font>
         <dtml-elif "success_status in ['passed']">
          <font style="color:green">OK</font>
         <dtml-else>
          &#9658;
         </dtml-if>
        <dtml-elif "completion_status in ['incomplete']">
         <font style="color:yellow">-</font>
        <dtml-else>
         <dtml-if sequencing_rules>
          <font style="color:blue">-</font>
         <dtml-else>
          <font style="color:red">-</font>
         </dtml-if>
        </dtml-if>
       <dtml-in "_.range(0,level)">&nbsp;&nbsp;</dtml-in>
      </td>
      <td class="navMicro" nowrap="nowrap">
       <nobr><dtml-var title></nobr>
       (<i>
        <dtml-var "cmiDict.get('cmi.completion_status','unknown')">
        <dtml-if "cmiDict.get('cmi.completion_status','unknown')=='completed'"><dtml-var "cmiDict.get('cmi.success_status','unknown')"></dtml-if>
       </i>)
      </td>
     </tr>
     <tr valign="top">
      <td class="navMicro">
       <dtml-if "cmiDict.has_key('cmi.session_time')">
        Session Time: <dtml-var "cmiDict['cmi.session_time']"><br/>
       </dtml-if>
       <dtml-if "cmiDict.has_key('cmi.score.raw')">
        Score (Raw): <dtml-var "cmiDict['cmi.score.raw']"><br/>
       </dtml-if>
       <dtml-if "_.len(cmiDict.get('cmi.interactions',[]))>0">
        <table cellspacing="0" cellpadding="1" border="1">
        <tr>
         <th class="navMicro"><i><dtml-var "getLangStr('LMS_CMI_NO',lang)"></i></th>
         <th class="navMicro"><i><dtml-var "getLangStr('LMS_CMI_TYPE',lang)"></i></th>
         <th class="navMicro"><i><dtml-var "getLangStr('LMS_CMI_WEIGHTING',lang)"></i></th>
         <th class="navMicro"><i><dtml-var "getLangStr('LMS_CMI_RESULT',lang)"></i></th>
         <th class="navMicro"><i><dtml-var "getLangStr('LMS_CMI_LEARNER_RESPONSE',lang)"></i></th>
         <th class="navMicro"><i><dtml-var "getLangStr('LMS_CMI_CORRECT_RESPONSE',lang)"></i></th>
        </tr>
        <dtml-call "REQUEST.set('cmiCount',0)">
        <dtml-in "cmiDict['cmi.interactions']">
         <dtml-let cmi_interaction=sequence-item>
          <dtml-if "cmi_interaction.get('type','')!=''">
          <tr>
           <td class="navMicro" align="right"><dtml-var "cmiCount+1">.</td>
           <td class="navMicro"><dtml-var "cmi_interaction.get('type','')">&nbsp;</td>
           <td class="navMicro"><dtml-var "cmi_interaction.get('weighting','')">&nbsp;</td>
           <td class="navMicro" align="center">
            <dtml-if "cmi_interaction.get('result','')=='correct'"><font style="color:green">&#8730;</font>
            <dtml-elif "cmi_interaction.get('result','')=='incorrect'"><font style="color:red">f</font>
            <dtml-else><dtml-var "cmi_interaction.get('result','')"></dtml-if>&nbsp;
           </td>
           <td class="navMicro"><dtml-var "cmi_interaction.get('learner_response','')">&nbsp;</td>
           <td class="navMicro"><dtml-var "cmi_interaction.get('correct_responses.0.pattern','')">&nbsp;</td>
          </tr>
          <dtml-call "REQUEST.set('cmiCount',cmiCount+1)">
          </dtml-if>
         </dtml-let>
        </dtml-in>
        </table>
       </dtml-if>
      </td>
     </tr>
    <dtml-else>
     <tr valign="top">
      <td class="navMicro" nowrap="nowrap" rowspan="2">&nbsp;<dtml-in "_.range(0,level)">&nbsp;&nbsp;</dtml-in></td>
      <td class="navMicro" nowrap="nowrap"><nobr><font style="color:gray;"><i><dtml-var title></i></font></nobr></td>
     </tr>
    </dtml-if>
    </table>
   </dtml-let>
  </dtml-in>
 </dtml-let>
</dtml-with>

</dtml-let>

<!--// EO displayPersonalTrack //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[displayPersonalTrack]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Display personal track]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Course-Members]]></item>
<item key="package"><![CDATA[com.zms.elc.lms]]></item>
<item key="type"><![CDATA[ZMSDocument]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_courseMetaset -->

<dtml-comment>
##########################################################################################
# Author:   Dr.Frank Hoffmann <fh@hoffmannliebenberg.de>
# Company:  HOFFMANN+LIEBENBERG GmbH
# WWW:      http://www.hoffmannliebenberg.de
# Date:     10.06.2007
# Version:  1.1.0
# Comments: ZMS eLearning components.
##########################################################################################
</dtml-comment>

<table cellspacing="0" cellpadding="2" border="1" width="100%">
<dtml-in "getMetaobjAttrIds(meta_id)">
<dtml-let metaObjAttr="getMetaobjAttr(meta_id,_['sequence-item'])">
<dtml-if "metaObjAttr['id']=='c_register' or getObjProperty(metaObjAttr['id'],REQUEST)">
<tr valign="top">
 <th align="left" width="20%"><dtml-var "metaObjAttr['name']"></th>
 <td align="left" width="80%">
  <dtml-if "getObjProperty(metaObjAttr['id'],REQUEST)">
   <dtml-if "metaObjAttr['type']=='url'">
    <a href="<dtml-var "getLinkUrl(getObjProperty(metaObjAttr['id'],REQUEST),REQUEST)">"><dtml-var "getLinkUrl(getObjProperty(metaObjAttr['id'],REQUEST),REQUEST)"></a>
   <dtml-else>
    <dtml-var "getObjProperty(metaObjAttr['id'],REQUEST)" newline_to_br>
   </dtml-if>
  </dtml-if>
  <dtml-if "metaObjAttr['id']=='c_register'">
   <dtml-in "getParentNode().filteredChildNodes(REQUEST,'courseMembers')">  
    <br/><dtml-var "getBodyContent(REQUEST)">
   </dtml-in>
  </dtml-if>
 </td>
</tr>
</dtml-if>
</dtml-let>
</dtml-in>
</table>

<!-- EO bodyContentZMSCustom_courseMetaset -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[courseMetaset]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[header]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Please fill in the Course Announcement metadata!]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_dur]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Course duration]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_language]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Language]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_fee]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Fee]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_info]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[More information]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_targetgroup]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Who is this course for ?]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_objective]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Objective]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_bonus]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Bonus]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_pre]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Prerequisites]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_start]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Available]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_size]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Class size]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_register]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Registration]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_learn]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[How you will learn]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_require]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[What this course requires from you]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_time]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Time required]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_tech]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Technical requirements]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_most]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[To get most out of this course]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_author]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Authors and facilitators]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_grade]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Credits]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_before]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Before you start]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_url]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[URL]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[url]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_version]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Version]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_length]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Study time]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_phase]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Course phases]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_rhy]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Schedule of material delivery]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[c_final]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Welcome]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Course-Metaset]]></item>
<item key="package"><![CDATA[com.zms.elc.lms]]></item>
<item key="type"><![CDATA[ZMSResource]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_com.zms.elc.lms -->


<!-- EO bodyContentZMSCustom_com.zms.elc.lms -->]]></item>
<item key="enabled" type="int">1</item>
<item key="key"><![CDATA[com.zms.elc.lms]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
</list>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[com.zms.elc.lms]]></item>
<item key="type"><![CDATA[ZMSPackage]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_userObjTrack -->

<!-- EO bodyContentZMSCustom_userObjTrack -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[userObjTrack]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="icon_track.gif" type="file">47494638396112001000b300004c4e4c6c961ca4a2a4a4ca5ce4ee95fcfee5958a6ffcf379f0f2bbfc02fcecb9798cba34796f62c68e0fecca94fccf5e21f90401000009002c000000001200100003047c30b5496b4d5896cdfb6e46d614c886300d5396a9689e4c0c702dd6203863288e0100b89a044140180c0887a20124081b84c361a75c02a44fa954b04c69b3da838e11061f045c82e28765881e0f41d2d01b2c008f67dc912418160b156e367144010e03890d0e4c21843f909013008e36161694191906319d9e951811003b</data></item>
<item key="default"/>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[titlealt]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Title.Alt]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[attrRef]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Course Reference]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[url]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[attrData]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Tracked Data]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[dictionary]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[attrCreationDt]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Creation Date]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[datetime]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Personal-Track]]></item>
<item key="package"><![CDATA[com.zms.elc.lms]]></item>
<item key="type"><![CDATA[ZMSDocument]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_userObj -->

<dtml-comment>
##########################################################################################
# Author:   Dr.Frank Hoffmann <fh@hoffmannliebenberg.de>
# Company:  HOFFMANN+LIEBENBERG GmbH
# WWW:      http://www.hoffmannliebenberg.de
# Date:     10.06.2007
# Version:  1.1.0
# Comments: ZMS eLearning components.
##########################################################################################
</dtml-comment>

<dtml-var bodyContent_PagePre>
<dtml-call "getObjProperty('initReq',REQUEST)">
<dtml-var "getObjProperty(REQUEST.get(actionId,'displayProfile'),REQUEST)">
<dtml-var bodyContent_PagePost>

<!-- EO bodyContentZMSCustom_userObj -->]]></item>
<item key="enabled" type="int">1</item>
<item key="key"><![CDATA[userObj]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[_titlealt]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[DC.Title.Alt]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[_title]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[DC.Title]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="icon_users.gif" type="file">47494638396110001000f700005b49325a49345c48314e4e4e6d971f76885493642b91663096673dbb7a3486735c87745e9570419473479a7b548d7e6da6774dd97e2add7f2c83b62587b92b8abc33889d6192816c92bf40ba9d7597c3479ac54d9fc756a7cc65a9cd69c2955ae29543e7a356e7a556edb56cf0bf7b9f978ca3a3a3bad786bdda88cfb590d8b889c7df9bcae2a3cde3a8d1e6aed5e8b4e3c497f1c383f2ca8ef7daabf9e0baddd9d4dbebc1dfedc7fbeacfe1e1e1eaeaeaff9040100003b002c00000000100010000008780077081c48b0a0c11d17145c38585041030607043014b8c0410a181f0c0098f820038d19311204985842850c1221220c98b8c38408101210b01408a1e64c132646e0203160e541132f581420614143059f044ddc70b1e284050e18284c402ad0848d16135074d8e081c0d4823dc38aed39b3acd9b33b0202003b</data></item>
<item key="default"/>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileLastname]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Last name]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileFirstname]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[First name]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileSalutation]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[Herr]]></item>
<item><![CDATA[Frau]]></item>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Salutation]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileAcademic]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Academic Title]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileProfession]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[-]]></item>
<item><![CDATA[Arzt/Ã�rztin]]></item>
<item><![CDATA[Apotheker/-in]]></item>
<item><![CDATA[Tierarzt/-Ã€rztin]]></item>
<item><![CDATA[Zahnarzt/-Ã€rztin]]></item>
<item><![CDATA[Student]]></item>
<item><![CDATA[Arzthelfer/in]]></item>
<item><![CDATA[Altenpfleger/in]]></item>
<item><![CDATA[Apothekenhelfer/in]]></item>
<item><![CDATA[Bibliothekar/in]]></item>
<item><![CDATA[Biologe/in]]></item>
<item><![CDATA[Chemiker/in]]></item>
<item><![CDATA[Medizinphysiker/in]]></item>
<item><![CDATA[Biochemiker/in]]></item>
<item><![CDATA[Ergotherapeut/in]]></item>
<item><![CDATA[Heilpraktiker/in]]></item>
<item><![CDATA[Hebamme]]></item>
<item><![CDATA[Krankenschwester/-pfleger]]></item>
<item><![CDATA[Medizininformatiker/in]]></item>
<item><![CDATA[Medizinjournalist/in]]></item>
<item><![CDATA[Medizintechniker/in]]></item>
<item><![CDATA[PTA]]></item>
<item><![CDATA[Pharmazeutisch-kaufmÃ€nnische/r Angestellte/r]]></item>
<item><![CDATA[Pharmazie-Ingenieur/in]]></item>
<item><![CDATA[Med.-Tech. Assistent/in]]></item>
<item><![CDATA[Mitarbeiter/in medizinischer Verlage]]></item>
<item><![CDATA[Mitarbeiter/in medizinischer Werbeagenturen]]></item>
<item><![CDATA[Psychologe/in]]></item>
<item><![CDATA[Psychotherapeut/in]]></item>
<item><![CDATA[Physiotherapeut/in]]></item>
<item><![CDATA[Rettungsassistent/in]]></item>
<item><![CDATA[RettungssanitÃ€ter/in]]></item>
<item><![CDATA[Unternehmensberater]]></item>
<item><![CDATA[Sonstige medizinische Berufe]]></item>
<item><![CDATA[Versicherungsfachangestelle/r]]></item>
<item><![CDATA[DiÃ€tassistent/in]]></item>
<item><![CDATA[Pharmakant]]></item>
<item><![CDATA[Medizinische Dokumentar/in]]></item>
<item><![CDATA[Rechtsanwalt/Jurist]]></item>
<item><![CDATA[Student/in der Osteopathie]]></item>
<item><![CDATA[Toxikologe/in]]></item>
<item><![CDATA[BTA,  CTA]]></item>
<item><![CDATA[Medizinische/r FachhÃ€ndler/in]]></item>
<item><![CDATA[Mitarbeiter von Krankenkassen]]></item>
<item><![CDATA[Augenoptiker/in, Optometrist/in]]></item>
<item><![CDATA[Student/in der Tiermedizin]]></item>
<item><![CDATA[Student/in der Pharmazie]]></item>
<item><![CDATA[Psychologisch-Technische Assistent/in]]></item>
<item><![CDATA[Pflegewirt/in]]></item>
<item><![CDATA[Firmenpasswort]]></item>
<item><![CDATA[Mitarbeiter von Antwerpes&Partner]]></item>
<item><![CDATA[SanitÃ€tsdienst der Bundeswehr]]></item>
<item><![CDATA[LogopÃ€de/in]]></item>
<item><![CDATA[Zahntechniker/in]]></item>
<item><![CDATA[Zahnarzthelfer/in]]></item>
<item><![CDATA[Diabetes-Berater/in]]></item>
<item><![CDATA[Drogist/in]]></item>
<item><![CDATA[Chiropraktiker/in]]></item>
<item><![CDATA[Dentalhygieniker/in]]></item>
<item><![CDATA[Ortoptist/in]]></item>
<item><![CDATA[Krankenpflegehelfer/in]]></item>
<item><![CDATA[Kinderkrankenschwester/pfleger]]></item>
<item><![CDATA[Krankenhausverwaltung]]></item>
<item><![CDATA[AnÃ€sthesieschwester/pfleger]]></item>
<item><![CDATA[OP-Schwester/OP-Pfleger]]></item>
<item><![CDATA[Mitarbeiter der pharmazeutischen Industrie]]></item>
<item><![CDATA[Student/in der Humanmedizin]]></item>
<item><![CDATA[Student/in der Zahnmedizin]]></item>
<item><![CDATA[Arzt/Ã�rztin im Praktikum (AiP)]]></item>
<item><![CDATA[selbststÃ€ndige/r Apotheker/in]]></item>
<item><![CDATA[angestellte/r Apotheker/in]]></item>
<item><![CDATA[Pharmazie-Praktikant/in]]></item>
<item><![CDATA[Naturwissenschaftler/in]]></item>
<item><![CDATA[BWL/VWL o.Ã€.]]></item>
<item><![CDATA[Geisteswissenschaftler/in]]></item>
<item><![CDATA[Techniker/in, IT]]></item>
<item><![CDATA[Sonstige]]></item>
<item><![CDATA[Pflegeheimleiter/in]]></item>
<item><![CDATA[Laborant/in]]></item>
<item><![CDATA[Pharmaassistent/in]]></item>
<item><![CDATA[Mitarbeiter von DocCheck]]></item>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Profession]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileDiscipline]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[-]]></item>
<item><![CDATA[Allgemeinmedizin]]></item>
<item><![CDATA[AnÃ€sthesiologie]]></item>
<item><![CDATA[Anatomie]]></item>
<item><![CDATA[Arbeitsmedizin]]></item>
<item><![CDATA[Augenheilkunde]]></item>
<item><![CDATA[Biochemie]]></item>
<item><![CDATA[Chirurgie - allg.]]></item>
<item><![CDATA[Chirurgie - Schwerpunkt GefÃ€Ã�chirurgie]]></item>
<item><![CDATA[Chirurgie - Schwerpunkt Herzchirurgie]]></item>
<item><![CDATA[Chirurgie - Schwerpunkt Kinderchirurgie]]></item>
<item><![CDATA[Chirurgie - Schwerpunkt Plastische Chirurgie]]></item>
<item><![CDATA[Chirurgie - Schwerpunkt Thoraxchirurgie]]></item>
<item><![CDATA[Chirurgie - Schwerpunkt Unfallchirurgie]]></item>
<item><![CDATA[Chirurgie - Schwerpunkt Viszeralchirurgie]]></item>
<item><![CDATA[Radiologie/Diagn. Radio.]]></item>
<item><![CDATA[Frauenheilkunde und Geburtshilfe]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Geriatrie]]></item>
<item><![CDATA[Hals-Nasen-Ohrenheilkunde]]></item>
<item><![CDATA[Haut- und Geschlechtskrankheiten]]></item>
<item><![CDATA[Humangenetik]]></item>
<item><![CDATA[Hygiene und Umweltmedizin]]></item>
<item><![CDATA[Innere Medizin (allg.)]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Angiologie]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Diabetologie]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Endokrinologie]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Gastroenterologie]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt HÃ€matologie]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Immunologie]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Kardiologie]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Nephrologie]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Onkologie]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Pneumologie]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Rheumatologie]]></item>
<item><![CDATA[Intensivmedizin]]></item>
<item><![CDATA[Kinderheilkunde]]></item>
<item><![CDATA[Kinder-, Jugendpsychiatrie und -psychotherapie]]></item>
<item><![CDATA[Klinische Pharmakologie]]></item>
<item><![CDATA[Laboratoriumsmedizin]]></item>
<item><![CDATA[Medizinische Informatik]]></item>
<item><![CDATA[Mikrobiologie]]></item>
<item><![CDATA[Mund-Kiefer-Gesichtschirurgie]]></item>
<item><![CDATA[Naturheilverfahren]]></item>
<item><![CDATA[Neurochirurgie]]></item>
<item><![CDATA[Neurologie]]></item>
<item><![CDATA[Neuropathologie]]></item>
<item><![CDATA[Notfallmedizin]]></item>
<item><![CDATA[Nuklearmedizin]]></item>
<item><![CDATA[Nervenarzt]]></item>
<item><![CDATA[ohne Gebietsbezeichnung]]></item>
<item><![CDATA[Ã�ffentliches Gesundheitswesen]]></item>
<item><![CDATA[OrthopÃ€die]]></item>
<item><![CDATA[Pathologie]]></item>
<item><![CDATA[Pharmakologie und Toxikologie]]></item>
<item><![CDATA[Physiologie]]></item>
<item><![CDATA[Psychiatrie und Psychotherapie]]></item>
<item><![CDATA[Psychotherapeutische Medizin]]></item>
<item><![CDATA[Psychosomatik]]></item>
<item><![CDATA[Rehabilitationsmedizin]]></item>
<item><![CDATA[Sozialmedizin]]></item>
<item><![CDATA[Strahlentherapie]]></item>
<item><![CDATA[Transfusionsmedizin]]></item>
<item><![CDATA[Tiermedizin]]></item>
<item><![CDATA[Urologie]]></item>
<item><![CDATA[Zahnmedizin]]></item>
<item><![CDATA[Medizingeschichte]]></item>
<item><![CDATA[Innere Medizin - Schwerpunkt Infektiologie]]></item>
<item><![CDATA[KieferorthopÃ€die]]></item>
<item><![CDATA[andere Spezialgebiete]]></item>
<item><![CDATA[Diagn. Radiologie - Schwerpunkt Kinderradiologie]]></item>
<item><![CDATA[Diagn. Radiologie - Schwerpunkt Neuroradiologie]]></item>
<item><![CDATA[Kinderheilkunde - Schwerpunkt Kinderkardiologie]]></item>
<item><![CDATA[Kinderheilkunde - Schwerpunkt Neonatologie]]></item>
<item><![CDATA[Oralchirurgie]]></item>
<item><![CDATA[Bakteriologie und Mykologie]]></item>
<item><![CDATA[Fische]]></item>
<item><![CDATA[Fleischhygiene]]></item>
<item><![CDATA[GeflÃŒgel]]></item>
<item><![CDATA[Kleintiere]]></item>
<item><![CDATA[Kleintiere - Teilgebiet Chirurgie]]></item>
<item><![CDATA[Kleintiere - Teilgebiet Innere Medizin]]></item>
<item><![CDATA[Klinische Laboratoriumsdiagnostik]]></item>
<item><![CDATA[Lebensmittel]]></item>
<item><![CDATA[Hygiene und Technologie der Milch]]></item>
<item><![CDATA[Parasitologie]]></item>
<item><![CDATA[Pathologie - Teilgebiet Toxikopathologie]]></item>
<item><![CDATA[Pferde]]></item>
<item><![CDATA[Pferde - Teilgebiet Chirurgie]]></item>
<item><![CDATA[Pferde - Teilgebiet Innere Medizin]]></item>
<item><![CDATA[Pferde - Teilgebiet OrthopÃ€die]]></item>
<item><![CDATA[Physiologie und Physiologische Chemie]]></item>
<item><![CDATA[Reproduktionsmedizin]]></item>
<item><![CDATA[Rinder]]></item>
<item><![CDATA[Schafe und Ziegen]]></item>
<item><![CDATA[Schweine]]></item>
<item><![CDATA[TierernÃ€hrung und DiÃ€thetik]]></item>
<item><![CDATA[Tierhygiene]]></item>
<item><![CDATA[TropenveterinÃ€rmedizin]]></item>
<item><![CDATA[Versuchstierkunde]]></item>
<item><![CDATA[Virologie]]></item>
<item><![CDATA[Zoo- und Wildtiere]]></item>
<item><![CDATA[Ã�ffentliches VeterinÃ€rwesen]]></item>
<item><![CDATA[Tierschutz]]></item>
<item><![CDATA[Radiologie/Strahlenkunde]]></item>
<item><![CDATA[Vorstand/GeschÃ€ftsfÃŒhrung]]></item>
<item><![CDATA[Abteilungs-/Gruppen-/BU-Leiter/in]]></item>
<item><![CDATA[(Produkt-/Projekt-)Manager/in]]></item>
<item><![CDATA[Regional-/Bereichs-Leiter/in]]></item>
<item><![CDATA[AuÃ�endienstmitarbeiter/in]]></item>
<item><![CDATA[Webmaster/IT]]></item>
<item><![CDATA[Sachbearbeiter/in]]></item>
<item><![CDATA[Sonstige]]></item>
<item><![CDATA[Medizinische Onkologie]]></item>
<item><![CDATA[Tropen- und Reisemedizin]]></item>
<item><![CDATA[Gyn - Schwerpkt GynÃ€kologische Onkologie]]></item>
<item><![CDATA[Gyn - Schwerpkt Geburtshilfe, fetomat. Med.]]></item>
<item><![CDATA[Gyn - Schwerpkt Repr.-Med., gyn. Endokrinol.]]></item>
<item><![CDATA[Oto-Rhino-Laryngologie - Schwerpkt Hals- und Gesichtschirurgie]]></item>
<item><![CDATA[Oto-Rhino-Laryngologie - Schwerpkt Phoniatrie]]></item>
<item><![CDATA[Kinder- und Jugendmedizin (allgemein) - Schwerpkt pÃ€d. Endokrinol.-Diabetol.]]></item>
<item><![CDATA[Kinder- und Jugendmedizin (allgemein) - Schwerpkt pÃ€d. Gastroenterologie]]></item>
<item><![CDATA[Kinder- und Jugendmedizin (allgemein) - Schwerpkt pÃ€diatrische Kardiologie]]></item>
<item><![CDATA[Kinder- und Jugendmedizin (allgemein) - Schwerpkt Neonatologie]]></item>
<item><![CDATA[Kinder- und Jugendmedizin (allgemein) - Schwerpkt pÃ€diatrische Nephrologie]]></item>
<item><![CDATA[Kinder- und Jugendmedizin (allgemein) - Schwerpkt NeuropÃ€diatrie]]></item>
<item><![CDATA[Kinder- und Jugendmedizin (allgemein) - Schwerpkt pÃ€d. Onkologie-HÃ€matologie]]></item>
<item><![CDATA[Kinder- und Jugendmedizin (allgemein) - Schwerpkt pÃ€diatrische Pneumologie]]></item>
<item><![CDATA[Ophthalmologie - Schwerpkt Ophthalmochirurgie]]></item>
<item><![CDATA[Pathologie - Schwerpkt Zytopathologie]]></item>
<item><![CDATA[Pathologie - Schwerpkt Neuropathologie]]></item>
<item><![CDATA[Pathologie - Schwerpkt Molekularpathologie]]></item>
<item><![CDATA[Urologie - Schwerpkt Operative Urologie]]></item>
<item><![CDATA[Radiologie - Schwerpkt PÃ€diatrische Radiologie]]></item>
<item><![CDATA[Radiologie - Schwerpkt Diagn. Neuroradiologie]]></item>
<item><![CDATA[Radiologie - Schwerpkt Invasive Neuroradiologie]]></item>
<item><![CDATA[Herz-/ Thoraxchirurgie]]></item>
<item><![CDATA[Herz-/ Thoraxchirurgie - Schwerp. GefÃ€Ã�chirurgie]]></item>
<item><![CDATA[Herz-/ Thoraxchirurgie - Schwerp. Thoraxchirurgie]]></item>
<item><![CDATA[Pharmazeut. Medizin]]></item>
<item><![CDATA[Chirurgie - Schwerpunkt Handchirurgie]]></item>
<item><![CDATA[Kinderchirurgie]]></item>
<item><![CDATA[OrthopÃ€dische Chirurgie]]></item>
<item><![CDATA[Plastische, Rekonstruktive und Ã�sthetische Chirurgie]]></item>
<item><![CDATA[Allgemeinmedizin - Schwerpunkt Geriatrie]]></item>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Discipline]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileImage]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Image]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[image]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileCompany]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Company]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileRole]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[Participant]]></item>
<item><![CDATA[Tutor]]></item>
<item><![CDATA[Moderator]]></item>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Role]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileStreet]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Street / No.]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileZip]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Zip]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileCity]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[City]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileCountry]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[Afghanistan]]></item>
<item><![CDATA[Albania]]></item>
<item><![CDATA[Algeria]]></item>
<item><![CDATA[American Samoa]]></item>
<item><![CDATA[Andorra]]></item>
<item><![CDATA[Angola]]></item>
<item><![CDATA[Anguilla]]></item>
<item><![CDATA[Antarctica]]></item>
<item><![CDATA[Antigua And Barbuda]]></item>
<item><![CDATA[Argentina]]></item>
<item><![CDATA[Armenia]]></item>
<item><![CDATA[Aruba]]></item>
<item><![CDATA[Australia]]></item>
<item><![CDATA[Austria]]></item>
<item><![CDATA[Azerbaijan]]></item>
<item><![CDATA[Bahamas]]></item>
<item><![CDATA[Bahrain]]></item>
<item><![CDATA[Bangladesh]]></item>
<item><![CDATA[Barbados]]></item>
<item><![CDATA[Belarus]]></item>
<item><![CDATA[Belgium]]></item>
<item><![CDATA[Belize]]></item>
<item><![CDATA[Benin]]></item>
<item><![CDATA[Bermuda]]></item>
<item><![CDATA[Bhutan]]></item>
<item><![CDATA[Bolivia]]></item>
<item><![CDATA[Bosnia And Herzegowina]]></item>
<item><![CDATA[Botswana]]></item>
<item><![CDATA[Bouvet Island]]></item>
<item><![CDATA[Brazil]]></item>
<item><![CDATA[British Indian Ocean Territory]]></item>
<item><![CDATA[Brunei Darussalam]]></item>
<item><![CDATA[Bulgaria]]></item>
<item><![CDATA[Burkina Faso]]></item>
<item><![CDATA[Burundi]]></item>
<item><![CDATA[Cambodia]]></item>
<item><![CDATA[Cameroon]]></item>
<item><![CDATA[Canada]]></item>
<item><![CDATA[Cape Verde]]></item>
<item><![CDATA[Cayman Islands]]></item>
<item><![CDATA[Central African Republic]]></item>
<item><![CDATA[Chad]]></item>
<item><![CDATA[Chile]]></item>
<item><![CDATA[China]]></item>
<item><![CDATA[Christmas Island]]></item>
<item><![CDATA[Cocos (Keeling) Islands]]></item>
<item><![CDATA[Colombia]]></item>
<item><![CDATA[Comoros]]></item>
<item><![CDATA[Congo]]></item>
<item><![CDATA[Congo, The Democratic Republic Of The]]></item>
<item><![CDATA[Cook Islands]]></item>
<item><![CDATA[Costa Rica]]></item>
<item><![CDATA[Cote D'ivoire]]></item>
<item><![CDATA[Croatia (Local Name: Hrvatska)]]></item>
<item><![CDATA[Cuba]]></item>
<item><![CDATA[Cyprus]]></item>
<item><![CDATA[Czech Republic]]></item>
<item><![CDATA[Denmark]]></item>
<item><![CDATA[Djibouti]]></item>
<item><![CDATA[Dominica]]></item>
<item><![CDATA[Dominican Republic]]></item>
<item><![CDATA[East Timor]]></item>
<item><![CDATA[Ecuador]]></item>
<item><![CDATA[Egypt]]></item>
<item><![CDATA[El Salvador]]></item>
<item><![CDATA[Equatorial Guinea]]></item>
<item><![CDATA[Eritrea]]></item>
<item><![CDATA[Estonia]]></item>
<item><![CDATA[Ethiopia]]></item>
<item><![CDATA[Falkland Islands (Malvinas)]]></item>
<item><![CDATA[Faroe Islands]]></item>
<item><![CDATA[Fiji]]></item>
<item><![CDATA[Finland]]></item>
<item><![CDATA[France]]></item>
<item><![CDATA[France, Metropolitan]]></item>
<item><![CDATA[French Guiana]]></item>
<item><![CDATA[French Polynesia]]></item>
<item><![CDATA[French Southern Territories]]></item>
<item><![CDATA[Gabon]]></item>
<item><![CDATA[Gambia]]></item>
<item><![CDATA[Georgia]]></item>
<item><![CDATA[Germany]]></item>
<item><![CDATA[Ghana]]></item>
<item><![CDATA[Gibraltar]]></item>
<item><![CDATA[Greece]]></item>
<item><![CDATA[Greenland]]></item>
<item><![CDATA[Grenada]]></item>
<item><![CDATA[Guadeloupe]]></item>
<item><![CDATA[Guam]]></item>
<item><![CDATA[Guatemala]]></item>
<item><![CDATA[Guinea]]></item>
<item><![CDATA[Guinea-Bissau]]></item>
<item><![CDATA[Guyana]]></item>
<item><![CDATA[Haiti]]></item>
<item><![CDATA[Heard And Mc Donald Islands]]></item>
<item><![CDATA[Holy See (Vatican City State)]]></item>
<item><![CDATA[Honduras]]></item>
<item><![CDATA[Hong Kong]]></item>
<item><![CDATA[Hungary]]></item>
<item><![CDATA[Iceland]]></item>
<item><![CDATA[India]]></item>
<item><![CDATA[Indonesia]]></item>
<item><![CDATA[Iran (Islamic Republic Of)]]></item>
<item><![CDATA[Iraq]]></item>
<item><![CDATA[Ireland]]></item>
<item><![CDATA[Israel]]></item>
<item><![CDATA[Italy]]></item>
<item><![CDATA[Jamaica]]></item>
<item><![CDATA[Japan]]></item>
<item><![CDATA[Jordan]]></item>
<item><![CDATA[Kazakhstan]]></item>
<item><![CDATA[Kenya]]></item>
<item><![CDATA[Kiribati]]></item>
<item><![CDATA[Korea, Democratic People's Republic Of]]></item>
<item><![CDATA[Korea, Republic Of]]></item>
<item><![CDATA[Kuwait]]></item>
<item><![CDATA[Kyrgyzstan]]></item>
<item><![CDATA[Lao People's Democratic Republic]]></item>
<item><![CDATA[Latvia]]></item>
<item><![CDATA[Lebanon]]></item>
<item><![CDATA[Lesotho]]></item>
<item><![CDATA[Liberia]]></item>
<item><![CDATA[Libyan Arab Jamahiriya]]></item>
<item><![CDATA[Liechtenstein]]></item>
<item><![CDATA[Lithuania]]></item>
<item><![CDATA[Luxembourg]]></item>
<item><![CDATA[Macau]]></item>
<item><![CDATA[Macedonia, The Former Yugoslav Republic Of]]></item>
<item><![CDATA[Madagascar]]></item>
<item><![CDATA[Malawi]]></item>
<item><![CDATA[Malaysia]]></item>
<item><![CDATA[Maldives]]></item>
<item><![CDATA[Mali]]></item>
<item><![CDATA[Malta]]></item>
<item><![CDATA[Marshall Islands]]></item>
<item><![CDATA[Martinique]]></item>
<item><![CDATA[Mauritania]]></item>
<item><![CDATA[Mauritius]]></item>
<item><![CDATA[Mayotte]]></item>
<item><![CDATA[Mexico]]></item>
<item><![CDATA[Micronesia, Federated States Of]]></item>
<item><![CDATA[Moldova, Republic Of]]></item>
<item><![CDATA[Monaco]]></item>
<item><![CDATA[Mongolia]]></item>
<item><![CDATA[Montserrat]]></item>
<item><![CDATA[Morocco]]></item>
<item><![CDATA[Mozambique]]></item>
<item><![CDATA[Myanmar]]></item>
<item><![CDATA[Namibia]]></item>
<item><![CDATA[Nauru]]></item>
<item><![CDATA[Nepal]]></item>
<item><![CDATA[Netherlands]]></item>
<item><![CDATA[Netherlands Antilles]]></item>
<item><![CDATA[New Caledonia]]></item>
<item><![CDATA[New Zealand]]></item>
<item><![CDATA[Nicaragua]]></item>
<item><![CDATA[Niger]]></item>
<item><![CDATA[Nigeria]]></item>
<item><![CDATA[Niue]]></item>
<item><![CDATA[Norfolk Island]]></item>
<item><![CDATA[Northern Mariana Islands]]></item>
<item><![CDATA[Norway]]></item>
<item><![CDATA[Oman]]></item>
<item><![CDATA[Pakistan]]></item>
<item><![CDATA[Palau]]></item>
<item><![CDATA[Panama]]></item>
<item><![CDATA[Papua New Guinea]]></item>
<item><![CDATA[Paraguay]]></item>
<item><![CDATA[Peru]]></item>
<item><![CDATA[Philippines]]></item>
<item><![CDATA[Pitcairn]]></item>
<item><![CDATA[Poland]]></item>
<item><![CDATA[Portugal]]></item>
<item><![CDATA[Puerto Rico]]></item>
<item><![CDATA[Qatar]]></item>
<item><![CDATA[Reunion]]></item>
<item><![CDATA[Romania]]></item>
<item><![CDATA[Russian Federation]]></item>
<item><![CDATA[Rwanda]]></item>
<item><![CDATA[Saint Kitts And Nevis]]></item>
<item><![CDATA[Saint Lucia]]></item>
<item><![CDATA[Saint Vincent And The Grenadines]]></item>
<item><![CDATA[Samoa]]></item>
<item><![CDATA[San Marino]]></item>
<item><![CDATA[Sao Tome And Principe]]></item>
<item><![CDATA[Saudi Arabia]]></item>
<item><![CDATA[Senegal]]></item>
<item><![CDATA[Seychelles]]></item>
<item><![CDATA[Sierra Leone]]></item>
<item><![CDATA[Singapore]]></item>
<item><![CDATA[Slovakia (Slovak Republic)]]></item>
<item><![CDATA[Slovenia]]></item>
<item><![CDATA[Solomon Islands]]></item>
<item><![CDATA[Somalia]]></item>
<item><![CDATA[South Africa]]></item>
<item><![CDATA[South Georgia And The South Sandwich Islands]]></item>
<item><![CDATA[Spain]]></item>
<item><![CDATA[Sri Lanka]]></item>
<item><![CDATA[St. Helena]]></item>
<item><![CDATA[St. Pierre And Miquelon]]></item>
<item><![CDATA[Sudan]]></item>
<item><![CDATA[Suriname]]></item>
<item><![CDATA[Svalbard And Jan Mayen Islands]]></item>
<item><![CDATA[Swaziland]]></item>
<item><![CDATA[Sweden]]></item>
<item><![CDATA[Switzerland]]></item>
<item><![CDATA[Syrian Arab Republic]]></item>
<item><![CDATA[Taiwan]]></item>
<item><![CDATA[Tajikistan]]></item>
<item><![CDATA[Tanzania, United Republic Of]]></item>
<item><![CDATA[Thailand]]></item>
<item><![CDATA[Togo]]></item>
<item><![CDATA[Tokelau]]></item>
<item><![CDATA[Tonga]]></item>
<item><![CDATA[Trinidad And Tobago]]></item>
<item><![CDATA[Tunisia]]></item>
<item><![CDATA[Turkey]]></item>
<item><![CDATA[Turkmenistan]]></item>
<item><![CDATA[Turks And Caicos Islands]]></item>
<item><![CDATA[Tuvalu]]></item>
<item><![CDATA[Uganda]]></item>
<item><![CDATA[Ukraine]]></item>
<item><![CDATA[United Arab Emirates]]></item>
<item><![CDATA[United Kingdom]]></item>
<item><![CDATA[United States]]></item>
<item><![CDATA[United States Minor Outlying Islands]]></item>
<item><![CDATA[Uruguay]]></item>
<item><![CDATA[Uzbekistan]]></item>
<item><![CDATA[Vanuatu]]></item>
<item><![CDATA[Venezuela]]></item>
<item><![CDATA[Viet Nam]]></item>
<item><![CDATA[Virgin Islands (British)]]></item>
<item><![CDATA[Virgin Islands (U.S.)]]></item>
<item><![CDATA[Wallis And Futuna Islands]]></item>
<item><![CDATA[Western Sahara]]></item>
<item><![CDATA[Yemen]]></item>
<item><![CDATA[Yugoslavia]]></item>
<item><![CDATA[Zambia]]></item>
<item><![CDATA[Zimbabwe]]></item>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Country]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileTel]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Telephone]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileFax]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Fax]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileWWW]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Homepage  http://]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileCV]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Biography (max 50 Words)]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profilePublic]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Publish profile]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[boolean]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[dlmtAuth]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Authentication]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileEmail]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[E-Mail]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profilePasswd]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Password]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[password]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[profileUniquekey]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Uniquekey (DocCheck)]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[dlmtCourses]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Courses]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"/>
<item key="default"/>
<item key="id"><![CDATA[userObjTracks]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Personal Tracks]]></item>
<item key="repetitive" type="int">1</item>
<item key="type"><![CDATA[userObjTrack]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO attr_dc_description //-->

 <dtml-return "'['+getObjProperty('profileRole',REQUEST)+']'">

<!--// EO attr_dc_description //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[attr_dc_description]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[DC.Description]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO initReq //-->

 <dtml-call "REQUEST.set('actionId','ACTION%s'%meta_id)">
 <dtml-call "REQUEST.set('templateUrl','%s/bodyContentZMSCustom_%s'%(absolute_url(),meta_id))">

<!--// EO initReq //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[initReq]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Init request]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO manageProfile //-->

<dtml-let valid_types="['boolean','string','text','password','select']">

<dtml-if "REQUEST.get('btn','')==getLangStr('BTN_CHANGE',lang)">
 <dtml-call "setObjStateModified(REQUEST)">
 <dtml-in "getMetaobjAttrIds(meta_id)">
  <dtml-let metaObjAttr="getMetaobjAttr(meta_id,_['sequence-item'])">
   <dtml-if "metaObjAttr['type'] in valid_types and not metaObjAttr['id'] in ['_title','_titlealt','profileRole','profileUniquekey']">
    <dtml-call "setReqProperty(metaObjAttr['id'],REQUEST)">
   </dtml-if>
  </dtml-let>
 </dtml-in>
 <dtml-call "onChangeObj(REQUEST)">
 <div style="border: solid 1px black; color: maroon; padding:5px">
  <dtml-var "getLangStr('MSG_CHANGED',lang)"> (<dtml-var "getLangFmtDate(ZopeTime(),lang,'DATETIME_FMT')">)
 </div>
 <br/><br/>
</dtml-if>

<form name="form0" action="<dtml-var URL>" method="post" encoding="multipart/form-data">
<input type="hidden" name="<dtml-var actionId>" value="<dtml-var "REQUEST[actionId]">">
<table cellspacing="0" cellpadding="1" border="1">
<dtml-in "getMetaobjAttrIds(meta_id)">
 <dtml-let metaObjAttr="getMetaobjAttr(meta_id,_['sequence-item'])">
  <dtml-if "metaObjAttr['type'] in valid_types and not metaObjAttr['id'] in ['_title','_titlealt','profileRole','profileUniquekey']">
   <tr>
    <td><dtml-var "getLangStr(metaObjAttr['id'],lang)"></td>
    <td><dtml-var "getObjInput(metaObjAttr['id'],REQUEST)">
   </tr>
  </dtml-if>
 </dtml-let>
</dtml-in>
<tr>
 <td>&nbsp;</td>
 <td><input type="submit" name="btn" value="<dtml-var "getLangStr('BTN_CHANGE',lang)">">
</tr>
</table>
</form>

</dtml-let>

<!--// EO manageProfile //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[manageProfile]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Manage profile]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO displayProfile //-->

<table>
<tr>
<td valign="top">
<dtml-if "getObjProperty('profileImage',REQUEST)">
<img src="<dtml-var "getObjProperty('profileImage',REQUEST).getHref(REQUEST)">">
</dtml-if>
</td>
<td>
<table>
<tr class="neutralColorLight0">
<td colspan="2"><strong>
  <dtml-var "getObjProperty('profileFirstname',REQUEST)">
  <dtml-var "getObjProperty('profileLastname',REQUEST)"></strong>
</td>
</tr>

<dtml-let valid_types="['string','text','select']">
<dtml-in "getMetaobjAttrIds(meta_id)">
 <dtml-let metaObjAttr="getMetaobjAttr(meta_id,_['sequence-item'])">
  <dtml-if "metaObjAttr['type'] in valid_types 
       and not metaObjAttr['id'] in ['_title','_titlealt','profileRole','profileUniquekey','profileLastname','profileFirstname','profileSalutation','profileWWW','profileEmail','profileCV']">
   <tr class="neutralColorLight0">
    <td ><dtml-var "getLangStr(metaObjAttr['id'],lang)">:</td>
    <td ><dtml-var "getObjProperty(metaObjAttr['id'],REQUEST)">
   </tr>
  </dtml-if>
 </dtml-let>
</dtml-in>
</dtml-let>

<tr valign="top" class="neutralColorLight0">
 <td><dtml-var "getLangStr('profileEmail',lang)">:</td>
 <td><a href="mailto:<dtml-var "getObjProperty('profileEmail',REQUEST)">"><dtml-var "getObjProperty('profileEmail',REQUEST)"></a></td>
</tr>
<tr valign="top" class="neutralColorLight0">
 <td><dtml-var "getLangStr('profileWWW',lang)">:</td>
 <td><a href="<dtml-var "getObjProperty('profileWWW',REQUEST)">"><dtml-var "getObjProperty('profileWWW',REQUEST)"></a></td>
</tr>
<tr valign="top" class="neutralColorLight0">
 <td><dtml-var "getLangStr('profileCV',lang)">:</td>
 <td><dtml-var "getObjProperty('profileCV',REQUEST)" newline_to_br html_quote></td>
</tr>
<tr valign="top" class="neutralColorLight0">
 <td><dtml-var "getLangStr('LMS_COURSES',lang)">:</td>
 <td><dtml-var "getObjProperty('displayCourses',REQUEST)"></td>
</tr>
</table>
</td>
</tr>
</table>

<!--// EO displayProfile //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[displayProfile]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Display profile]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO displayCourses //-->

 <ul>
 <dtml-in "getObjChildren('userObjTracks',REQUEST)">
  <dtml-let ob="getLinkObj(getObjProperty('attrRef',REQUEST),REQUEST)">
   <dtml-if ob>
    <dtml-with ob>
     <dtml-if "isMetaType('courseMembers')">
      <dtml-with "getParentNode()">
       <li><a href="<dtml-var "getHref2IndexHtml(REQUEST)">"><dtml-var "getTitle(REQUEST)"></a></li>
      </dtml-with>
     </dtml-if>
    </dtml-with>
   </dtml-if>
  </dtml-let>
 </dtml-in>
 </ul>

<!--// EO displayCourses //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[displayCourses]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Display courses]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO onChangeObjEvt //-->

 <dtml-call "REQUEST.set('rtn','')">

 <dtml-call "setObjProperty('_titlealt',getObjProperty('profileLastname',REQUEST)+', '+getObjProperty('profileFirstname',REQUEST)[0]+'.',lang)">
 <dtml-call "setObjProperty('_title',(getObjProperty('profileAcademic',REQUEST)+' '+getObjProperty('profileFirstname',REQUEST)+' '+getObjProperty('profileLastname',REQUEST)).strip(),lang)">

 <dtml-if "inObjStates(['STATE_NEW'],REQUEST)">
  <dtml-try>
  <dtml-call "REQUEST.set('newId',getObjProperty('profileEmail',REQUEST))">
  <dtml-call "REQUEST.set('newPassword',getObjProperty('profilePasswd',REQUEST))">
  <dtml-call "REQUEST.set('newRoles',[])">
  <dtml-call "REQUEST.set('newDomains',[])">
  <dtml-call "getUserFolder().userFolderAddUser(REQUEST['newId'],REQUEST['newPassword'],REQUEST['newRoles'],REQUEST['newDomains'])">
  <dtml-call "setUserAttr(REQUEST['newId'],'profile',getRefObjPath(this()))">
  <dtml-call "REQUEST.set('rtn',rtn+'%s %s...\n'%(getLangStr('LMS_MEMBER_CREATED',lang),REQUEST['newId']))">
  <dtml-except></dtml-try>
 </dtml-if>

 <dtml-if "inObjStates(['STATE_MODIFIED'],REQUEST)">
  <dtml-try>
  <dtml-let userObj="getUserFolder().getUser(getObjProperty('profileEmail',REQUEST))">
   <dtml-if userObj>
    <dtml-if "operator_getattr(userObj,'__')!=getObjProperty('profilePasswd',REQUEST)">
     <dtml-call "operator_setattr(userObj,'__',getObjProperty('profilePasswd',REQUEST))">
     <dtml-call "manage_zmi_logout(REQUEST,RESPONSE)">
     <dtml-call "REQUEST.set('rtn',rtn+'%s %s...\n'%(getLangStr('LMS_MEMBER_PW_MODIFIED',lang),userObj.getId()))">
    </dtml-if>
   </dtml-if>
  </dtml-let>
  <dtml-except></dtml-try>
 </dtml-if>

 <dtml-if "inObjStates(['STATE_DELETED'],REQUEST)">
  <dtml-try>
  <dtml-call "REQUEST.set('names',[getObjProperty('profileEmail',REQUEST)])">
  <dtml-call "getUserFolder().userFolderDelUsers(REQUEST['names'])">
  <dtml-call "REQUEST.set('rtn',rtn+'%s %s...\n'%(getLangStr('LMS_MEMBER_DELETED',lang),REQUEST['names'][0]))">
  <dtml-except></dtml-try>
 </dtml-if>

 <dtml-return "REQUEST.get('rtn')">

<!--// EO onChangeObjEvt //-->]]></item>
<item key="default"/>
<item key="id"><![CDATA[onChangeObjEvt]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Event: Change]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Personal-Profile]]></item>
<item key="package"><![CDATA[com.zms.elc.lms]]></item>
<item key="type"><![CDATA[ZMSDocument]]></item>
</dictionary>
</item>
</dictionary>
</item>
</list>
