<dtml-comment>
################################################################################
###  Authentic Browser Edition XML Editor
###  please refer to http://www.altova.com/manual2008/AuthenticBrowser/
################################################################################
</dtml-comment>

<dtml-unless "REQUEST.get('f_zmiRichtextOnSubmitEventHandler')">
<SCRIPT LANGUAGE="javascript">
<!--//

// enumeration SPYXMLDataKind
spyXMLDataXMLDocStruct = 0
spyXMLDataXMLEntityDocStruct = 1
spyXMLDataDTDDocStruct = 2
spyXMLDataXML = 3
spyXMLDataElement = 4
spyXMLDataAttr = 5
spyXMLDataText = 6
spyXMLDataCData = 7
spyXMLDataComment = 8
spyXMLDataP = 9
spyXMLDataDefDoctype = 10
spyXMLDataDefExternalID = 11
spyXMLDataDefElement = 12
spyXMLDataDefAttlist = 13
spyXMLDataDefEntity = 14
spyXMLDataDefNotation = 15
spyXMLDataKindsCount = 16

// get content from XMLData
function GetContent(objXMLData)
{
  var s = '';
  var missing_endelement = false;
  if ( objXMLData.Kind == spyXMLDataXML) {
    s += '<?xml';
    missing_endelement = true;
  }
  else if ( objXMLData.Kind == spyXMLDataAttr) {
    if ( objXMLData.Name != 'xmlns' || objXMLData.TextValue != '') {
      s += ' ' + objXMLData.Name + '="' + objXMLData.TextValue + '"';
    }
  }
  else if ( objXMLData.Kind == spyXMLDataP) {
    s += '<?' + objXMLData.Name + ' ' + objXMLData.TextValue + '?>';
  }
  else if ( objXMLData.Kind == spyXMLDataElement) {
    s += '<' + objXMLData.Name;
    missing_endelement = true;
  }
  else if ( objXMLData.Kind == spyXMLDataText) {
    s += objXMLData.TextValue;
  }
  if(objXMLData.HasChildren) {
    var objChild = objXMLData.GetFirstChild(-1);
    while(objChild) {
      try {
        if ( missing_endelement && objChild.Kind != spyXMLDataAttr) {
          if ( objXMLData.Kind == spyXMLDataXML) {
            s += '?';
          }
          s += '>';
          missing_endelement = false;
        }
        s += GetContent(objChild);
        objChild = objXMLData.GetNextChild();
      }
      catch(e) {
        objChild = null;
      }
    }
  }
  if ( missing_endelement) {
    if ( objXMLData.Kind == spyXMLDataXML) {
      s += '?';
    }
    s += '>';
    missing_endelement = false;
  }
  if ( objXMLData.Kind == spyXMLDataElement) {
    s += '</' + objXMLData.Name + '>';
  }
  return s;
}
// event handler for OnDocEditCommand
function OnCommand()
{
  // we are interested in the k_CommandSave button
  if(document.editor_<dtml-var "REQUEST.get('elName')">.event.srcElement.CommandID == 1)
  {
    // instead of the standard HTTP PUT we want to use a HTTP POST
    document.getElementById('<dtml-var "REQUEST.get('elName')">').value = GetContent(document.editor_<dtml-var "REQUEST.get('elName')">.XMLRoot);
    // no standard execution follows
    document.editor_<dtml-var "REQUEST.get('elName')">.event.cancelBubble = true;
  }
}

//-->
</SCRIPT>

<script type="text/javascript">
<!--//

 var zmiRichtextElNames = new Array();
 <dtml-call "REQUEST.set('count',0)"
 ><dtml-in "getObjAttrs(REQUEST.get('ZMS_INSERT',meta_id)).keys()"
  ><dtml-let key=sequence-item obj_attr="getObjAttr(key,REQUEST.get('ZMS_INSERT',meta_id))"
   ><dtml-if "obj_attr.get('type',_.None)=='richtext'"
    >zmiRichtextElNames[<dtml-var count>]='<dtml-var "getObjAttrName(obj_attr,lang)">';<dtml-call "REQUEST.set('count',count+1)"
    ></dtml-if>
   </dtml-let
 ></dtml-in
 ><dtml-if "count==0"
  >zmiRichtextElNames[<dtml-var count>]='<dtml-var "REQUEST.get('elName')">';<dtml-call "REQUEST.set('count',count+1)"
 ></dtml-if>
 
  function zmiStandardOnSubmitEventHandler() {
    for (e in zmiRichtextElNames) {
      var elName = zmiRichtextElNames[e];
      var el = document.getElementById('zmiStandardEditor'+elName);
      if ( el.style.display != 'none' && el.style.visibility != 'hidden') {
        try {
          document.getElementById('editor_'+elName).value = document.getElementById(elName).value;
        }
        catch(er) {
        }
      }
    }
  }

  <dtml-call "REQUEST.set('beforeSubmitBtnClick','zmiRichtextOnSubmitEventHandler(); ')">
  function zmiRichtextOnSubmitEventHandler() {
    for (e in zmiRichtextElNames) {
      var elName = zmiRichtextElNames[e];
      var el = document.getElementById('zmiRichtextEditor'+elName);
      if ( el.style.display != 'none' && el.style.visibility != 'hidden') {
        try {
          if(typeof(document.getElementById('editor_'+elName).XMLRoot) == 'undefined') {
            throw "Error"
          } else {
            document.getElementById(elName).value = GetContent(document.getElementById('editor_'+elName).XMLRoot);
          }
        }
        catch(er) {
          document.getElementById(elName).value = document.getElementById('alternate_'+elName).value;
        }
      }
    }
  }

//-->
</script>
<dtml-call "REQUEST.set('f_zmiRichtextOnSubmitEventHandler',_.True)">
</dtml-unless>

<script language="javascript" for=editor_<dtml-var "REQUEST.get('elName')"> event="ControlInitialized">
var xmlData = '<dtml-var "REQUEST.get('data').replace('\n','')">';
if (xmlData == '' || xmlData.indexOf('<?xml') < 0) {
  editor_<dtml-var "REQUEST.get('elName')">.XMLDataLoadObject.URL = "<dtml-if "_.getattr(REQUEST['ZMS_THIS'],'authentic.default.xml',_.None) is not _.None">authentic.default.xml<dtml-else><dtml-var "getDocumentElement().absolute_url()">/$ZMS_HOME/plugins/rte/authentic/OrgChart.default.xml</dtml-if>";;
}
else {
  editor_<dtml-var "REQUEST.get('elName')">.XMLDataLoadObject.String = xmlData;
}
editor_<dtml-var "REQUEST.get('elName')">.SchemaLoadObject.URL = "<dtml-if "_.getattr(REQUEST['ZMS_THIS'],'authentic.xsd',_.None) is not _.None">authentic.xsd<dtml-else><dtml-var "getDocumentElement().absolute_url()">/$ZMS_HOME/plugins/rte/authentic/OrgChart.xsd</dtml-if>";
editor_<dtml-var "REQUEST.get('elName')">.DesignDataLoadObject.URL = "<dtml-if "_.getattr(REQUEST['ZMS_THIS'],'authentic.sps',_.None) is not _.None">authentic.sps<dtml-else><dtml-var "getDocumentElement().absolute_url()">/$ZMS_HOME/plugins/rte/authentic/OrgChart.sps</dtml-if>";
editor_<dtml-var "REQUEST.get('elName')">.StartEditing()
editor_<dtml-var "REQUEST.get('elName')">.attachCallBack("OnDocEditCommand", OnCommand);
</SCRIPT>

<object id="editor_<dtml-var "REQUEST.get('elName')">"
   name="editor_<dtml-var "REQUEST.get('elName')">"
   style="WIDTH:800px; HEIGHT:500px"
   codebase="http://medvalue.net/pub/bscw.cgi/d299240/AuthenticBrowserEditionUntrusted_DE.CAB#Version=10,0,1,2"
   classid="clsid:28A640E8-EAEE-4B5D-BEBE-BFA956081E66">
  <param name="EntryHelpersEnabled" value="True" />
  <param name="EntryHelperWindows" value="3" />
  <param name="HideSaveButton" value="True" />
  <textarea name="alternate_<dtml-var "REQUEST.get('elName')">" id="alternate_<dtml-var "REQUEST.get('elName')">" cols="50" rows="15" style="width:100%"><dtml-var "REQUEST.get('data')" html_quote ></textarea>
</object>

