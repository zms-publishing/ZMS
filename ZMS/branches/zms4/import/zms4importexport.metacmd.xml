<?xml version="1.0" encoding="utf-8"?>

<list>
  <item type="dictionary">
    <dictionary>
      <item key="data"><![CDATA[import base64
import os
import shutil
import tempfile
import time
from Products.zms import _blobfields
from Products.zms import _fileutil
from Products.zms import standard
from Products.zms import zopeutil

def read_file(filepath):
		data = None
		if os.path.exists(filepath):
			f = open(filepath,'rb')
			data = f.read()
			f.close()
		return data

def manage_zms4import( self):
	request = self.REQUEST
	html = ''
	html += '<!DOCTYPE html>'
	html += '<html lang="en">'
	html += self.zmi_html_head(self,request)
	html += '<body class="%s">'%(' '.join(['zmi',request['lang'],'transition',self.meta_id]))
	html += self.zmi_body_header(self,request,options=[{'action':'#','label':'ZMS4 Export...'}])
	html += '<div id="zmi-tab">'
	html += self.zmi_breadcrumbs(self,request)
	html += '<form class="form-horizontal" method="post" enctype="multipart/form-data">'
	html += '<input type="hidden" name="form_id" value="manage_zms4import"/>'
	html += '<input type="hidden" name="lang" value="%s"/>'%request['lang']
	html += '<legend>ZMS4 Import...</legend>'

	# --- Import client.
	# ---------------------------------
	if request.form.get('btn')==self.getZMILangStr('BTN_IMPORT'):
		tempfolder = tempfile.mktemp()
		os.mkdir(tempfolder)
		filepath = os.path.join(tempfolder,'upload.zip')
		f = open(filepath,'wb')
		f.write(request['file'].read())
		f.close()
		_fileutil.extractZipArchive(filepath)
		os.remove(filepath)
		l = []
		filenames = os.listdir(tempfolder)

		filename = 'zope.xml'
		if filename in filenames:
			msg = ''
			try:
				if request.get('zope')==1:
					data = read_file(os.path.join(tempfolder,filename))
					o = self.parseXmlString(data)
					home = self.getHome()
					meta_types = ['DTML Document', 'DTML Method', 'External Method', 'Image', 'File', 'Folder', 'Page Template', 'Script (Python)']
					ids = home.objectIds(meta_types)
					home.manage_delObjects(ids=ids)
					for i in o:
						standard.writeBlock(self,'[manage_zms4import]: add %s (%s)'%(str(i['id']),str(i['type'])))
						try:
							container = home
							ids = i['id'].split('/')
							for id in ids[:-1]:
								container = getattr(container,id)
							if i['type'] in meta_types:
								data = base64.b64decode(i.get('data',''))
								zopeutil.addObject(container,i['type'],ids[-1],i['name'],data)
						except:
							standard.writeError(self,'[manage_zms4import]: can\'t add %s (%s)'%(str(i['id']),str(i['type'])))
					msg = 'OK'
			except:
				msg = self.writeError('can\'t import')
			l.append('%s (%s)'%(filename,msg))

		for filename in filenames:
			msg = ''
			try:
				t0 = time.time()
				data = read_file(os.path.join(tempfolder,filename))
				if request.get('system')==1 and filename.endswith('system.xml'):
					d = self.parseXmlString(data)
					for k in d.keys():
						self.setConfProperty(k,d[k])
					msg = 'OK'
				if request.get('languages')==1 and filename.endswith('langs.xml'):
					d = self.parseXmlString(data)
					prim_lang = [x for x in d if d[x]['parent']==''][0]
					self.setPrimaryLanguage(prim_lang)
					self.setLangs(d)
					msg = 'OK'
				if request.get('languages')==1 and filename.endswith('langdict.xml'):
					d = self.parseXmlString(data)
					self.set_lang_dict(d)
					msg = 'OK'
				if request.get('metadata')==1 and filename.endswith('metadict.xml'):
					self.getMetaobjManager().importMetadictXml(data)
					msg = 'OK'
				if request.get('metaobj')==1 and filename.endswith('metaobj.xml'):
					self.getMetaobjManager().importMetaobjXml(data)
					msg = 'OK'
				if request.get('metacmd')==1 and filename.endswith('metacmd.xml'):
					self.getMetacmdManager().importXml(data)
					msg = 'OK'
				if request.get('textformats')==1 and filename.endswith('textfmt.xml'):
					self.getFormatManager().importTextformatXml(data)
					msg = 'OK'
				if request.get('charformats')==1 and filename.endswith('charfmt.xml'):
					self.getFormatManager().importCharformatXml(data)
					msg = 'OK'
			except:
				msg = self.writeError('can\'t import')
			l.append('%s (%s)'%(filename,msg))

		self.synchronizeObjAttrs()

		filename = 'content.zip'
		if filename in filenames:
			msg = ''
			try:
				if request.get('content')==1:
					data = read_file(os.path.join(tempfolder,filename))
					class File:
						def __init__(self, filename, data):
							self.name = filename
							self.data = data
						def __str__(self):
							return self.data
					self.manage_import(File(filename,data),self.getPrimaryLanguage(),request)
					msg = 'OK'
			except:
				msg = self.writeError('can\'t import')
			l.append('%s (%s)'%(filename,msg))

		shutil.rmtree(tempfolder)
		html += '<div class="alert alert-success">%s</div>'%self.getZMILangStr('MSG_IMPORTED')%'<em>%s (%s)</em>'%(request['file'].filename,str(l))

	# --- Display form.
	# ---------------------------------
	else:
		html += '<div class="form-group">'
		html += '<label for="id" class="col-sm-3 control-label">%s</label>'%(self.getZMILangStr('ATTR_FILE'))
		html += '<div class="col-sm-9"><input class="btn btn-file" name="file" type="file" /></div>'
		html += '</div><!-- .form-group -->'
		html += '<div class="form-group">'
		html += '<label for="id" class="col-sm-3 control-label">%s</label>'%(self.getZMILangStr('Content'))
		html += '<div class="col-sm-9"><input name="content:int" type="checkbox" value="1" checked="checked"> %s</div>'%self.getZMILangStr('BTN_IMPORT')
		html += '</div><!-- .form-group -->'
		html += '<div class="form-group">'
		html += '<label for="id" class="col-sm-3 control-label">%s</label>'%(self.getZMILangStr('TAB_SYSTEM'))
		html += '<div class="col-sm-9"><input name="system:int" type="checkbox" value="1" checked="checked"> %s</div>'%self.getZMILangStr('BTN_IMPORT')
		html += '</div><!-- .form-group -->'
		html += '<div class="form-group">'
		html += '<label for="id" class="col-sm-3 control-label">%s</label>'%(self.getZMILangStr('TAB_LANGUAGES'))
		html += '<div class="col-sm-9"><input name="languages:int" type="checkbox" value="1" checked="checked"> %s</div>'%self.getZMILangStr('BTN_IMPORT')
		html += '</div><!-- .form-group -->'
		html += '<div class="form-group">'
		html += '<label for="id" class="col-sm-3 control-label">%s</label>'%(self.getZMILangStr('TAB_METADATA'))
		html += '<div class="col-sm-9"><input name="metadata:int" type="checkbox" value="1" checked="checked"> %s</div>'%self.getZMILangStr('BTN_IMPORT')
		html += '</div><!-- .form-group -->'
		html += '<div class="form-group">'
		html += '<label for="id" class="col-sm-3 control-label">%s</label>'%(self.getZMILangStr('TAB_METAOBJ'))
		html += '<div class="col-sm-9"><input name="metaobj:int" type="checkbox" value="1" checked="checked"> %s</div>'%self.getZMILangStr('BTN_IMPORT')
		html += '</div><!-- .form-group -->'
		html += '<div class="form-group">'
		html += '<label for="id" class="col-sm-3 control-label">%s</label>'%(self.getZMILangStr('TAB_METACMD'))
		html += '<div class="col-sm-9"><input name="metacmd:int" type="checkbox" value="1" checked="checked"> %s</div>'%self.getZMILangStr('BTN_IMPORT')
		html += '</div><!-- .form-group -->'
		html += '<div class="form-group">'
		html += '<label for="id" class="col-sm-3 control-label">%s</label>'%(self.getZMILangStr('TAB_TEXTFORMATS'))
		html += '<div class="col-sm-9"><input name="textformats:int" type="checkbox" value="1" checked="checked"> %s</div>'%self.getZMILangStr('BTN_IMPORT')
		html += '</div><!-- .form-group -->'
		html += '<div class="form-group">'
		html += '<label for="id" class="col-sm-3 control-label">%s</label>'%(self.getZMILangStr('TAB_CHARFORMATS'))
		html += '<div class="col-sm-9"><input name="charformats:int" type="checkbox" value="1" checked="checked"> %s</div>'%self.getZMILangStr('BTN_IMPORT')
		html += '</div><!-- .form-group -->'
		html += '<div class="form-group">'
		html += '<label for="id" class="col-sm-3 control-label">Zope</label>'
		html += '<div class="col-sm-9"><input name="zope:int" type="checkbox" value="1" checked="checked"> %s</div>'%self.getZMILangStr('BTN_IMPORT')
		html += '</div><!-- .form-group -->'
		html += '<div class="form-group">'
		html += '<div class="controls save">'
		html += '<button type="submit" name="btn" class="btn btn-primary" value="%s">%s</button>'%(self.getZMILangStr('BTN_IMPORT'),self.getZMILangStr('BTN_IMPORT'))
		html += '<button type="submit" name="btn" class="btn btn-default" value="%s">%s</button>'%(self.getZMILangStr('BTN_CANCEL'),self.getZMILangStr('BTN_CANCEL'))
		html += '</div>'
		html += '</div><!-- .form-group -->'

	# ---------------------------------

	html += '</form><!-- .form-horizontal -->'
	html += '<div style="clear:both;">&nbsp;</div>'
	html += '</div><!-- #zmi-tab -->'
	html += self.zmi_body_footer(self,request)
	html += '</body>'
	html += '</html>'

	return html]]>
      </item>
      <item key="description"></item>
      <item key="exec" type="int">0</item>
      <item key="icon_clazz">icon-upload-alt</item>
      <item key="id">manage_zms4import</item>
      <item key="meta_type"><![CDATA[External Method]]></item>
      <item key="meta_types" type="list">
        <list>
          <item>ZMS</item>
        </list>
      </item>
      <item key="name"><![CDATA[ZMS4 Import...]]></item>
      <item key="revision">0.0.29</item>
      <item key="roles" type="list">
        <list>
          <item>ZMSAdministrator</item>
        </list>
      </item>
      <item key="title"><![CDATA[ZMS4 Import...]]></item>
    </dictionary>
  </item>
</list>