<tal:block tal:define="
	dummy0 python:here.zmi_page_request(here,request); 
	standard modules/Products.zms/standard; 
	zopeutil modules/Products.zms/zopeutil;
	session python:standard.get_session(here);"
><tal:block tal:condition="python:standard.get_session_value(here,'zmi-manage-system',0)==1"
	><tal:block tal:content="structure python:here.manage_system(here,request)"></tal:block
></tal:block
><tal:block tal:condition="not:python:standard.get_session_value(here,'zmi-manage-system',0)==1"
><!DOCTYPE html>
<html lang="en" tal:define="zmscontext python:here.getSelf(); standard modules/Products.zms/standard">
<head tal:replace="structure python:here.zmi_html_head(here,request)">zmi_html_head</head>
<body tal:attributes="class python:here.zmi_body_class(id='zcatalog config')">
<header tal:replace="structure python:here.zmi_body_header(here,request,options=here.customize_manage_options())">zmi_body_header</header>
<div id="zmi-tab">
<tal:block tal:content="structure python:here.zmi_breadcrumbs(here,request,extra=[{'action':'manage_main','label':here.getZMILangStr('TAB_SEARCH')}])">zmi_breadcrumbs</tal:block>

<div class="help d-none" data-for="catalog_awareness_active">
	<div class="well">On every change the content is automatically indexed in the catalog.</div>
</div>

<div class="help d-none" data-for="custom_filter_function">
	<div class="well">
		<p>
			The indexing filter consists of python code that works with two parameters: <br/>
			1. <code>context</code> is the currently iterated object to be indexed<br/>
			2. <code>meta_ids</code> is the list of content-classes that should be indexed. <br/>
			<br/>
			The applied code can define rules based on the context's attributes values whether 
			indexing shall happen or not. The returning value of the filter rules must be 
			<code>True</code> or <code>False</code>.
			A simple example will illustrate how it can be applied; the intention would be 
			"<i>Do not index any inactive node, it's descendants and nodes having type-attribute 
			set to 'Resource'</i>".
			<div class="zmi-code card p-2 highlight text-nowrap" style="overflow-x: scroll;">
				##<br/>
				return (context.meta_id in meta_ids) \<br/>
				&nbsp;&nbsp;and not [ob for ob in context.breadcrumbs_obj_path() if not ob.isActive(context.REQUEST)] \<br/>
				&nbsp;&nbsp;and not context.attr('attr_dc_type')=='Resource'<br/>
			</div>
			<br/>
			<p class="small">
				HINT: The introducing ##-comments marks the code as Python for the editor gui.
				Actually only Python code will work here. 
			</p>
		</p>
	</div>
</div>


<div class="help d-none" data-for="catalog_model">
	<div class="well">
		<p>
			Select objects and their attributes from the model to be indexed automatically.
			Custom indexing can be achieved by adding <code>catalog_index</code> py-attributes
			to your objects returning a map with the selected attributes:
		</p>
		<div class="zmi-code card p-2 highlight">
			## Script (Python) "LgFoo.catalog_index"<br/>
			##bind container=container<br/>
			##bind context=context<br/>
			##bind namespace=<br/>
			##bind script=script<br/>
			##bind subpath=traverse_subpath<br/>
			##parameters=zmscontext<br/>
			##title=py: Catalog-Index<br/>
			##<br/>
			<br/>
			return [{<br/>
			<code tal:repeat="attr_id python:here.getAttrIds()" tal:content="structure python:'&nbsp;&nbsp;\'%s\':\'...\',<br/>'%(attr_id)" />
			}]
		</div>
	</div>
</div>

<form class="form-horizontal card" action="manage_changeProperties" method="post" tal:define="zcatalogs python:here.getDocumentElement().objectValues(['ZCatalog'])">
	<input type="hidden" name="lang" tal:attributes="value python:request['lang']" />
	<input type="hidden" name="tab" value="" />
	<input type="hidden" id="getIds" tal:attributes="value python:','.join(here.getIds())" />
	<span class="d-none" id="getAttrs" tal:content="python:here.str_json(here.getAttrs())"></span>

	<tal:block tal:condition="python:here.breadcrumbs_obj_path().index(here.getDocumentElement())==0">
	<legend>Connectors</legend>
	<div class="card-body" tal:define="
		connectors python:here.get_connectors();
		available python:here.get_available_connector_ids();
		exists python:[x.id for x in connectors];
		addable python:[x for x in available if x['id'] not in exists];">
		<div class="alert alert-warning mx-0" tal:condition="python:len(connectors)==0 and len(available)==0">
			No connectors available. Please check whether a catalog-connector ZMSLibrary is installed in the 
			master client of a multi-site. If not, please install the catalog-connector of your choice via 
			<a href="../metaobj_manager/manage_main">import</a> of the corresponding ZMSLibrary.
		</div>
		<div class="col form-group mb-4" tal:condition="addable">
			<div class="input-group justify-content-start">
				<div class="input-group-prepend">
					<span class="input-group-text" 
						style="padding:.375rem .65rem;color:#354f67a6">
						<i class="fas fa-plus"></i>
					</span>
				</div>
				<select class="form-control" name="api">
					<option value="" tal:content="python:'----- %s -----'%here.getZMILangStr('ACTION_SELECT')%'API'">Select</option>
					<tal:block tal:repeat="metaObj addable">
						<option tal:attributes="value metaObj/id" tal:content="python:'%s.%s'%(metaObj['package'],metaObj['id'])">the conf</option>
					</tal:block>
				</select>
				<div class="input-group-append">
					<button name="btn" type="submit" class="btn btn-secondary" value="BTN_ADD" 
						tal:content="structure python:here.getZMILangStr('BTN_ADD')">Add
					</button>
				</div>
			</div>
		</div><!-- .form-group -->
		<tal:block tal:repeat="si connectors">
			<div class="form-group col">
				<span class="btn btn-secondary mr-2" title="Delete"
					tal:attributes="
						disabled python:si.id=='zmsindex' and 'disabled' or None; 
						title python:here.getZMILangStr('BTN_DELETE');
						value python:si.id;
						onclick python:'javascript:zmiDeleteObjBtnClick(this,{btn:\'BTN_DELETE\',\'objectIds:list\':\'%s\'})'%si.id">
					<i class="fas fa-times text-danger"></i>
				</span>
				<input type="hidden" name="objectIds:list" tal:attributes="value python:si.id;" />
				<div class="btn-group">
					<a class="btn btn-secondary text-truncate text-left" data-turbolinks="false" style="width:14rem"
						title="Configure search-engine connection, define the schema and index the content"
						tal:attributes="href python:'%s/manage_main'%(si.id)">
						<i class="fas fa-ban text-danger mr-2" tal:condition="python:si.id not in [x['id'] for x in available]"></i>
						<i class="fas fa-exchange-alt mr-2" tal:condition="python:si.id in [x['id'] for x in available]"></i>
						<span tal:content="python:si.id">id</span>
					</a>
					<a class="btn btn-secondary" data-turbolinks="false" title="Customize ZMSLibrary" target="_blank"
						tal:attributes="
							href python:'%s/metaobj_manager/manage_main?id=%s'%(here.getDocumentElement().absolute_url(), si.id); 
							title python:'Customize ZMSLibrary %s'%(si.id)">
						<i class="fas fa-wrench"></i>
					</a>
				</div>
			</div><!-- .form-group -->
		</tal:block>
	</div><!-- .card-body -->
	</tal:block>

	<legend>Schema</legend>
	<div class="card-body">
		<div class="form-group row">
			<label class="col-sm-2 control-label" for="catalog_awareness_active"><span>Awareness</span></label>
			<div class="col-sm-10">
				<input type="checkbox" value="1" id="catalog_awareness_active" name="catalog_awareness_active:int" tal:attributes="checked python:['','checked'][int(here.getConfProperty('ZMS.CatalogAwareness.active',1)==1)]"/>
			</div><!-- .col-sm-10 -->
		</div><!-- .form-group -->
		<div class="form-group row align-items-start">
			<label class="col-sm-2 control-label" for="custom_filter_function"><span>Custom Filter-Function</span></label>
			<div class="col-sm-10">
				<textarea tal:replace="structure python:here.zmi_ace_editor(here,request,name='custom_filter_function',id='custom_filter_function',text=here.getCustomFilterFunction())">ACE Editor</textarea>
			</div>
		</div>
		<div class="form-group row align-items-baseline">
			<label class="col-sm-2 control-label" for="catalog_model"><span>Model</span></label>
			<div class="col-sm-10"
				tal:define="metaObjIds python:here.getMetaobjIds();
					metaObjs python:[x for x in [here.getMetaobj(y) for y in metaObjIds] if x['id'] not in ['X_ZMS'] and x['type'] in ['ZMSPackage','ZMSDocument','ZMSObject','ZMSRecordSet']];
					metaObjPackages python:here.sort_list(['']+[x['id'] for x in metaObjs if x['type']=='ZMSPackage']);
					metaObjPackages2 python:[x.get('package') for x in metaObjs if x.get('package') not in metaObjPackages]">

					<table class="table table-sm">
						<colgroup>
							<col width="50%"/>
							<col width="50%"/>
						</colgroup>
						<thead>
							<tr>
								<th tal:content="python:here.getZMILangStr('ATTR_OBJECTS')">the objects</th>
								<th tal:content="python:here.getZMILangStr('ATTR_ATTRS')">the attributes</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td class="p-0">
									<table class="table table-sm table-borderless" id="meta_types">
										<tbody>
											<tal:block tal:repeat="metaObjPackage python:here.sort_list(metaObjPackages+metaObjPackages2)">
												<tal:block tal:condition="python:metaObjPackage in metaObjPackages">
													<tr tal:condition="python:len([x for x in metaObjs if x.get('package')==metaObjPackage])>0" tal:define="global metaObj python:here.getMetaobj(metaObjPackage)">
														<td colspan="2">
															<tal:block tal:condition="python:metaObjPackage">
																<a href="#" class="mr-1" target="_blank" title="Show Content Class Package Details (Big Picture)"
																	tal:attributes="href python:'../metaobj_manager/manage_bigpicture?lang=%s&id=%s'%(request.get('lang','ger'),metaObjPackage)"
																><i class="fas fa-briefcase"></i></a>
																<strong tal:content="metaObjPackage">the id</strong>
															</tal:block>
															<tal:block tal:condition="python:not metaObjPackage">
																<i class="fas fa-briefcase mr-1"></i>
																<strong>[default package]</strong>
															</tal:block>
														</td>
													</tr>
												</tal:block>
												<tal:block tal:condition="not:python:metaObjPackage in metaObjPackages">
													<tr>
														<td colspan="2" style="text-decoration:line-through">
															<i class="fas fa-briefcase"></i>
															<strong tal:content="metaObjPackage">the id</strong>
														</td>
													</tr>
												</tal:block>
												<tr tal:condition="not:metaObjPackage" tal:repeat="value python:['type(ZMSDocument)','type(ZMSObject)']">
													<td><input type="checkbox" name="ids:list" tal:attributes="value value"></td>
													<td><tal:block tal:content="value"></tal:block></td>
												</tr>
												<tal:block tal:repeat="metaObj metaObjs">
													<tr tal:condition="python:metaObj['type']!='ZMSPackage' and metaObj.get('package')==metaObjPackage">
														<td style="text-align:center;">
															<input type="checkbox" name="ids:list" tal:attributes="value metaObj/id;
																data-attrs python:','.join(
																	['%s(%s)'%(xx['id'],xx['type']) for xx in
																		[here.getMetaobjAttr(metaObj['id'],x['id']) for x in metaObj['attrs'] if x['type'] not in ['*','constant','delimiter','file','hint','image','interface']]]);
																checked python:['','checked'][int('catalog_index' in [x['id'] for x in metaObj['attrs']])];
																disabled python:['','disabled'][int('catalog_index' in [x['id'] for x in metaObj['attrs']])]" onclick="toggleMetaobj()"/>
														</td>
														<td>
															<a href="#" class="mr-1" target="_blank" title="Show Content Class Details (Big Picture)"
																tal:attributes="href python:'../metaobj_manager/manage_bigpicture?lang=%s&id=%s'%(request.get('lang','ger'),metaObj['id'])"
															><i tal:on-error="string:ERROR icon" tal:attributes="class python:zmscontext.zmi_icon(metaObj['id'])"></i></a>&nbsp;
															<span tal:on-error="string:ERROR" tal:content="metaObj/name">the name</span>
															<span>(<tal:block tal:content="python:here.getZMILangStr('SOTYPE_%s'%metaObj['type'].upper())">the type</tal:block>)</span>
														</td>
													</tr>
												</tal:block>
											</tal:block>
										</tbody>
									</table>
								</td>
								<td class="p-0">
									<table class="table table-sm table-borderless" id="indexes">
										<!-- filled by script -->
									</table>
								</td>
							</tr>
						</tbody>
					</table>
			</div><!-- .col-sm-10 -->
		</div><!-- .form-group -->
		<div class="form-group row">
			<div class="controls save">
				<button type="submit" name="btn" class="btn btn-primary" value="BTN_SAVE" tal:content="structure python:here.getZMILangStr('BTN_SAVE')">Save</button> 
				<button type="submit" name="btn" class="btn btn-secondary" value="BTN_CANCEL" tal:content="structure python:here.getZMILangStr('BTN_CANCEL')">Cancel</button>
			</div><!-- .controls.save -->
		</div><!-- .form-group.row -->
	</div><!-- .card-body -->
</form>

</div><!-- #zmi-tab -->

<script>

function toggleMetaobj() {
	var selected = {};
	$("table#indexes input:checked").each(function() {
		var k = $(this).val();
		selected[k] = {
			type:$('input[name="type_'+k+'"]').val(),
			boost:$('input[name="boost_'+k+'"]').val()};
	});
	var metaObjAttrs = {};
	$("form input[name='ids:list']:checked").each(function() {
		if(!$(this).prop("disabled") && $(this).attr("data-attrs")) {
			var dataAttrs = $(this).attr("data-attrs").split(",");
			for (var i = 0; i < dataAttrs.length; i++) {
				var dataAttr = dataAttrs[i];
				var metaObjAttr = {
					id:dataAttr.substring(0,dataAttr.indexOf("(")),
					type:dataAttr.substring(dataAttr.indexOf("(")+1,dataAttr.indexOf(")"))
				};
				if (!metaObjAttr.id.indexOf("_") == 0 && typeof metaObjAttrs[metaObjAttr.id] == 'undefined') {
					metaObjAttrs[metaObjAttr.id] = metaObjAttr;
				}
			}
		}
	});
	$("table#indexes tr").remove();
	var metaObjAttrIds = [];
	for (var metaObjAttrId in metaObjAttrs) {
		metaObjAttrIds.push(metaObjAttrId);
	}
	metaObjAttrIds.sort();
	for (var i=0; i < metaObjAttrIds.length; i++) {
		var metaObjAttrId = metaObjAttrIds[i];
		var preselected = typeof selected[metaObjAttrId] != 'undefined'
		var type = metaObjAttrs[metaObjAttrId].type;
		var boost = 1.0;
		if (preselected) {
			type = selected[metaObjAttrId].type;
			boost = parseFloat(selected[metaObjAttrId].boost);
		}
		$("table#indexes").append(''
			+ '<'+'tr>'
				+ '<'+'td style="text-align:center;">'
					+ '<'+'input type="checkbox" name="attr_ids:list" '+(preselected?' checked="checked"':'')+'value="'+metaObjAttrId+'" onclick="toggleMetaobj()"/>'
				+ '<'+'/td>'
				+ '<'+'td>'
					+ '<'+'span>'+metaObjAttrId+' ('+type+')<'+'/span> '
					+ '<'+'input type="hidden" name="type_'+metaObjAttrId+'" value="'+type+'"/> '
				+ '<'+'/td>'
				+ '<'+'td>'
					+ '<'+'input class="form-control form-control-sm" type="number" step="0.1" title="Boost" name="boost_'+metaObjAttrId+'" value="'+boost.toFixed(1)+'"/> '
				+ '<'+'/td>'
			+ '<'+'/tr>');
	}
	$("table#meta_types *.bg-info").removeClass("bg-info");
	$("table#meta_types *.alert-success,table#indexes *.alert-success").removeClass("alert-success");
	$("table#meta_types input:checked,table#indexes input:checked").each(function() {
		var clazz = "alert-success";
		if ($(this).prop("disabled")) {
			clazz = "bg-info";
		}
		$("td,span",$(this).parents("tr")[0]).addClass(clazz);
	});
}

function zmiExecuteCatalog(url) {
	$(".zmi-sitemap .response").remove();
	var $inputs = $(".card.active .zmi-sitemap input:checked");
	var i = 0;
	var fn = function() {
		if (i < $inputs.length) {
			var $input = $($inputs[i]);
			var uid = $input.val();
			var data = {uid:uid};
			var $a = $input.next("a");
			var response_element = `
				<span class="response alert zmi-code text-truncate"
					title="Double-click for expanding and copying text to clipboard." 
					ondblclick="$(this).toggleClass('full');$ZMI.CopyToClipboard($(this).text().substring($(this).text().indexOf('//SCHEMA') + 9))" >
					<i class="fas fa-spinner fa-spin"></i>
				</span>`;
			$a.after(response_element);
			$.ajax({
				url:url,
				data:data,
				error: function (xhr, ajaxOptions, thrownError) {
					$a.next('.response').addClass('alert-danger').html(thrownError);
					i++;
					fn();
				},
				success:function(response, textStatus, xhr) {
					// console.log('STATUS: ' + xhr.status);
					if ( xhr.status == 200 ) {
						$a.next('.response').addClass('alert-success').html(response);
					} else {
						$a.next('.response').addClass('alert-danger').html(response);
					}
					i++;
					fn();
				}
			});
		}
	}
	fn();
	return false;
}

function zmiSelectObject() {
	return false;
}

function zmiExpandObjectTree(max) {
	var fn = function() {
		var done = false;
		$(".zmi-sitemap .toggle[title='+']").each(function() {
			var $toggle = $(this);
			var $parents = $toggle.parentsUntil(".zmi-sitemap","ul");
			var $container = $($toggle.parents("li")[0]);
			var level = $parents.length - 1;
			if (level < max || -1 == max) {
				$ZMI.objectTree.toggleClick($toggle,fn);
				done = true;
			}
		});
	}
	fn();
	return false;
}

$(function() {
	var ids = $('#getIds').val().split(",");
	for (var i = 0; i < ids.length; i++) {
		$('input[name="ids:list"][value="'+ids[i]+'"]').prop("checked",true);
	}
	toggleMetaobj();
	var attrs = eval("("+$("#getAttrs").html()+")");
	for (var k in attrs) {
		$('input[name="attr_ids:list"][value="'+k+'"]').prop("checked",true);
		$('input[name="type_'+k+'"]').val(attrs[k].type);
		$('input[name="boost_'+k+'"]').val(attrs[k].boost);
	}
	toggleMetaobj();
});

/* Delete object.
 */
function zmiDeleteObjBtnClick(sender,d) {
	if (confirm(getZMILangStr('MSG_CONFIRM_DELOBJ'))) {
		zmiFormSubmit(sender,d);
	}
}

/**
 * Submit form with given parameters.
 */
function zmiFormSubmit(sender,d) {
	var $fm = $(sender).closest("form");
	var html = '';
	for (var i in d) {
		$('input[name="' + i + '"]',$fm).remove();
		html += '<input type="hidden" name="' + i + '" value="' + d[i] +'"/>';
	}
	$fm
		.append(html)
		.submit();
}

//-->
</script>

<footer tal:replace="structure python:here.zmi_body_footer(here,request)">zmi_body_footer</footer>
</body>
</html>
</tal:block>
</tal:block>