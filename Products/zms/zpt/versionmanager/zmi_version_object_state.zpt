<tal:block tal:replace="nothing">
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
+- Links
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
</tal:block>
<i class="zmi-state text-primary fas fa-link" 
		tal:define="refByObjs python:here.getRefByObjs()"
		tal:condition="refByObjs" 
		tal:attributes="
			title python:here.getZMILangStr('MSG_REFERENCEDBY')%''+' %i %s'%(len(refByObjs),here.getZMILangStr('ATTR_OBJECTS'));
			onclick python:'document.location.href=\042%s/manage_RefForm?lang=%s\042'%(here.absolute_url(),request['lang'])"
></i>
<tal:block tal:replace="nothing">
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
+- Language
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
</tal:block>
<tal:block tal:condition="python:len(here.getLangIds())>1"
	><tal:block tal:condition="python:here.attr('change_uid')" 
		tal:define="coverage python:here.getDCCoverage(request);
			seq_lang python:coverage[coverage.find('.')+1:];
			seq_desc_langs python:here.getDescendantLanguages(seq_lang)"
		><tal:block tal:condition="python:len(seq_desc_langs)>1 and coverage.find('global')>=0"
			><tal:block tal:condition="python:seq_lang!=request['lang']"
				><i class="zmi-state fas fa-globe" 
					tal:condition="python:here.isModifiedInParentLanguage(request['lang'],request)" 
					tal:attributes="title python:'local: %s: %s (%s)'%(here.getZMILangStr('ATTR_LANG'),seq_lang,here.getZMILangStr('STATE_MODIFIED'))"></i
				><i class="zmi-state fas fa-globe" 
					tal:condition="not:python:here.isModifiedInParentLanguage(request['lang'],request)" 
					tal:attributes="title python:'local: %s: %s'%(here.getZMILangStr('ATTR_LANG'),seq_lang)"></i
			></tal:block
			><i class="zmi-state fas fa-globe" 
				tal:condition="not:python:seq_lang!=request['lang']" 
				tal:attributes="title python:'global: %s: %s'%(here.getZMILangStr('ATTR_LANG'),', '.join(seq_desc_langs))"></i
		></tal:block
	></tal:block
	><i class="zmi-state text-warning fas fa-globe" 
		tal:condition="not:python:here.attr('change_uid')" 
		tal:attributes="title python:here.getZMILangStr('STATE_TRANSLATE')"></i
></tal:block
><tal:block tal:replace="nothing">
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
+- Workflow
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
</tal:block
><tal:block tal:condition="python:not here.getAutocommit() and not request.get('ZMS_VERSION')"
	><tal:block tal:define="wfStates python:here.getWfStates(request); work_uid python:here.attr('work_uid'); work_dt python:here.attr('work_dt'); objStates python:here.filteredObjStates(request)"
		><tal:block tal:condition="python:work_uid and work_dt" 
			tal:repeat="wfState wfStates"
			><span class="zmi-state" 
				tal:define="
					wfActivity python:here.getWfActivity(wfState);
					clazz python:wfActivity.get('icon_clazz','');
					title python:'%s %s %s (%s)'%(wfActivity['name'],here.getZMILangStr('BY'),work_uid,here.getLangFmtDate(work_dt))"
				tal:attributes="class python:'zmi-state %s'%(clazz); title title"></span
		></tal:block>
		<span tal:condition="python:'STATE_NEW' in objStates" class="zmi-state zmi-state-new fas fa-plus-square" tal:attributes="title python:here.getZMILangStr('STATE_NEW')"></span>
		<span tal:condition="python:( 'STATE_MODIFIED' in objStates ) or ( len(wfStates)>0 and here.isVersionContainer() and here.hasObjModifiedChildren(request) )" class="zmi-state zmi-state-modified fas fa-edit mr-0" tal:attributes="title python:here.getZMILangStr('STATE_MODIFIED')"></span>
		<span tal:condition="python:'STATE_DELETED' in objStates" class="zmi-state zmi-state-deleted fas fa-trash" tal:attributes="title python:here.getZMILangStr('STATE_DELETED')"></span>
	</tal:block
></tal:block
><tal:block tal:replace="nothing">
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
+- Version Info
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
</tal:block
><span class="zmi-state zmi-history" tal:condition="python:here.getHistory()"
	><tal:block tal:content="python:here.getVersionNr()">v.#.#.#</tal:block
	><tal:block tal:condition="python:request.get('ZMS_VERSION_%s'%id,'').find(str(here.version_live_id))>=0" tal:content="python:'- %s'%here.getZMILangStr('TAB_LIVE')"></tal:block
	><tal:block tal:condition="python:request.get('ZMS_VERSION_%s'%id,'').find(str(here.version_work_id))>=0" tal:content="python:'- %s'%here.getZMILangStr('TAB_PREVIEW')"></tal:block
></span
><tal:block tal:replace="nothing">
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
+- Custom
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
</tal:block>
<span class="zmi-state zmi-version-state" tal:condition="python:here.attr('version_object_state')" 
	tal:content="structure python:here.attr('version_object_state')"
	tal:on-error="nothing">
	attr(version_object_state)
</span>
<span data-readme="This hook expects a Zope object named my_version_object_state"  
	class="zmi-state zmi-my-version-state"
	tal:define="standard modules/Products/zms/standard"
	tal:condition="python:standard.operator_getattr(here,'my_version_object_state')" 
	tal:content="structure python:here.my_version_object_state(here,request)">
	my_version_object_state
</span>