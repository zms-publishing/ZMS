<dtml-comment>
###############################################################################
###
###   A C T I O N S
###
###   @explicit-param qindex[int]
###   @implicit-param res[list]
###   @implicit-param res_abs[list]
###   @implicit-param REQUEST[HttpRequest]
###
###############################################################################
</dtml-comment>

<dtml-call "REQUEST.set('manage_tabs_message','')">

<dtml-comment> ***** Move row up ***** </dtml-comment>
 <dtml-if "REQUEST.form.get('action','')=='move_up'">
  <dtml-call "REQUEST.set('res_abs',copy_list(res_abs))">
  <dtml-let sort_id="res[qindex]['sort_id']">
   <dtml-in "filter_list(res,'sort_id',sort_id-1,'=')">
    <dtml-let row=sequence-item>
     <dtml-call "operator_setitem(row,'sort_id',sort_id)">
    </dtml-let>
   </dtml-in>
   <dtml-in "filter_list(res_abs,'sort_id',sort_id-1,'=')">
    <dtml-let row=sequence-item>
     <dtml-call "operator_setitem(row,'sort_id',sort_id)">
    </dtml-let>
   </dtml-in>
   <dtml-call "operator_setitem(res[qindex],'sort_id',sort_id-1)">
   <dtml-call "operator_setitem(res_abs[qindex_abs],'sort_id',sort_id-1)">
   <dtml-comment> --- Normalize sort-ids --- </dtml-comment>
   <dtml-call "REQUEST.set('res_abs',sort_list(res_abs,'sort_id','asc'))">
   <dtml-in res_abs>
    <dtml-let row=sequence-item normalized_sort_id=sequence-index>
     <dtml-call "operator_setitem(row,'sort_id',normalized_sort_id+1)">
    </dtml-let>
   </dtml-in>
   <dtml-call "setObjStateModified(REQUEST)">
   <dtml-call "setObjProperty(res_id,res_abs,lang)">
   <dtml-call "onChangeObj(REQUEST)">
   <dtml-call "REQUEST.set('qindex',qindex-1)">
   <dtml-call "REQUEST.set('qindex_abs',qindex_abs-1)">
  </dtml-let>
  <dtml-call "REQUEST.set('manage_tabs_message',manage_tabs_message+getZMILangStr('MSG_MOVEDOBJUP')%getZMILangStr('ATTR_RECORD'))">

<dtml-comment> ***** Move row down ***** </dtml-comment>
 <dtml-elif "REQUEST.form.get('action','')=='move_down'">
  <dtml-call "REQUEST.set('res_abs',copy_list(res_abs))">
  <dtml-let sort_id="res[qindex]['sort_id']">
   <dtml-in "filter_list(res,'sort_id',sort_id+1,'=')">
    <dtml-let row=sequence-item>
     <dtml-call "operator_setitem(row,'sort_id',sort_id)">
    </dtml-let>
   </dtml-in>
   <dtml-in "filter_list(res_abs,'sort_id',sort_id+1,'=')">
    <dtml-let row=sequence-item>
     <dtml-call "operator_setitem(row,'sort_id',sort_id)">
    </dtml-let>
   </dtml-in>
   <dtml-call "operator_setitem(res[qindex],'sort_id',sort_id+1)">
   <dtml-call "operator_setitem(res_abs[qindex_abs],'sort_id',sort_id+1)">
   <dtml-comment> --- Normalize sort-ids --- </dtml-comment>
   <dtml-call "REQUEST.set('res_abs',sort_list(res_abs,'sort_id','asc'))">
   <dtml-in res_abs>
    <dtml-let row=sequence-item normalized_sort_id=sequence-index>
     <dtml-call "operator_setitem(row,'sort_id',normalized_sort_id+1)">
    </dtml-let>
   </dtml-in>
   <dtml-call "setObjStateModified(REQUEST)">
   <dtml-call "setObjProperty(res_id,res_abs,lang)">
   <dtml-call "onChangeObj(REQUEST)">
   <dtml-call "REQUEST.set('qindex',qindex+1)">
   <dtml-call "REQUEST.set('qindex_abs',qindex_abs+1)">
  </dtml-let>
  <dtml-call "REQUEST.set('manage_tabs_message',manage_tabs_message+getZMILangStr('MSG_MOVEDOBJDOWN')%getZMILangStr('ATTR_RECORD'))">

<dtml-comment> ***** Delete row ***** </dtml-comment>
 <dtml-elif "REQUEST.form.get('action','')=='delete'">
  <dtml-call "REQUEST.set('res_abs',copy_list(res_abs))">
  <dtml-if "_.len(REQUEST.form.get('qindices',[]))>0">
   <dtml-let iqindices="[]">
   <dtml-in "REQUEST.form.get('qindices',[])">
    <dtml-let seqitem=sequence-item>
     <dtml-call "iqindices.append(_.int(seqitem))">
    </dtml-let>
   </dtml-in>
   <dtml-in iqindices sort reverse>
    <dtml-let sindex=sequence-item>
     <dtml-call "REQUEST.set('sindex_abs',res_abs.index(res[sindex]))">
     <dtml-call "res.remove(res[sindex])">
     <dtml-call "res_abs.remove(res_abs[sindex_abs])">
    </dtml-let>
   </dtml-in>
   </dtml-let>
  <dtml-elif "qindex>=0">
   <dtml-call "res.remove(res[qindex])">
   <dtml-call "res_abs.remove(res_abs[qindex_abs])">
  </dtml-if>
  <dtml-unless pk>
   <dtml-call "REQUEST.set('qindex',_.min(qindex,_.len(res)-1))">
  </dtml-unless>
  <dtml-call "setObjStateModified(REQUEST)">
  <dtml-call "setObjProperty(res_id,res_abs,lang)">
  <dtml-call "onChangeObj(REQUEST)">
  <dtml-call "REQUEST.set('manage_tabs_message',manage_tabs_message+getZMILangStr('MSG_CHANGED'))">

<dtml-comment> ***** Insert row ***** </dtml-comment>
 <dtml-elif "REQUEST.form.get('action','')=='insert' and REQUEST.get('btn','')!=''">
  <dtml-if "REQUEST.get('btn','') not in [ getZMILangStr('BTN_CANCEL'), getZMILangStr('BTN_BACK')]">
  <dtml-call "REQUEST.set('res_abs',copy_list(res_abs))">
  <dtml-call "REQUEST.set('new_row',[])">
  <dtml-in "metaObj['attrs'][1:]" mapping>
   <dtml-let obj_attr="getObjAttr(id)" obj_attrName="getObjAttrName(obj_attr,lang)">
    <dtml-unless "type in ['constant','delimiter','hint','interface','resource','method','DTML Method','DTML Document']">
     <dtml-call "REQUEST.set('value',formatObjAttrValue(obj_attr,REQUEST.form.get(obj_attrName),lang))">
     <dtml-try><dtml-call "operator_delattr(value,'aq_parent')"><dtml-except></dtml-try>
     <dtml-call "new_row.append(id)">
     <dtml-call "new_row.append(value)">
    </dtml-unless>
   </dtml-let>
  </dtml-in>
  <dtml-let new_row="dict_list(new_row)">
   <dtml-call "res.append(new_row)">
   <dtml-call "REQUEST.set('res',sort_list(res,qorder,qorderdir))">
   <dtml-unless pk>
    <dtml-call "REQUEST.set('qindex',res.index(new_row))">
   </dtml-unless>
   <dtml-call "res_abs.append(new_row)">
   <dtml-call "setObjStateModified(REQUEST)">
   <dtml-call "setObjProperty(res_id,res_abs,lang)">
   <dtml-call "onChangeObj(REQUEST)">
  </dtml-let>
  <dtml-call "REQUEST.set('manage_tabs_message',manage_tabs_message+getZMILangStr('MSG_CHANGED'))">
  </dtml-if>
 
<dtml-comment> ***** Update row ***** </dtml-comment>
 <dtml-elif "REQUEST.form.get('action','')=='update' and REQUEST.get('btn','')!=''">
  <dtml-if "REQUEST.get('btn','') not in [ getZMILangStr('BTN_CANCEL'), getZMILangStr('BTN_BACK')]">
  <dtml-call "REQUEST.set('res_abs',copy_list(res_abs))">
  <dtml-call "REQUEST.set('row',res[qindex])">
  <dtml-call "REQUEST.set('new_row',[])">
  <dtml-in "metaObj['attrs'][1:]" mapping>
   <dtml-let obj_attr="getObjAttr(id)" obj_attrName="getObjAttrName(obj_attr,lang)">
    <dtml-unless "type in ['constant','delimiter','hint','interface','resource','method','DTML Method','DTML Document']">
     <dtml-call "REQUEST.set('value',formatObjAttrValue(obj_attr,REQUEST.form.get(obj_attrName),lang))">
     <dtml-var "writeBlock('[actions.update]: %s=%s(%s)'%(_.str(id),_.str(value),_.str(REQUEST.form.get(obj_attrName))))">
     <dtml-if "value is _.None and type in ['image','file'] and not REQUEST.get('del_%s'%obj_attrName,'0')=='1'">
      <dtml-call "REQUEST.set('value',formatObjAttrValue(obj_attr,row.get(id,_.None),lang))">
     </dtml-if>
     <dtml-try><dtml-call "operator_delattr(value,'aq_parent')"><dtml-except></dtml-try>
     <dtml-call "new_row.append(id)">
     <dtml-call "new_row.append(value)">
    </dtml-unless>
   </dtml-let>
  </dtml-in>
  <dtml-in "row.keys()">
   <dtml-let id=sequence-item value="row[id]">
    <dtml-unless "id in new_row">
     <dtml-call "new_row.append(id)">
     <dtml-call "new_row.append(value)">
    </dtml-unless>
   </dtml-let>
  </dtml-in>
  <dtml-let new_row="dict_list(new_row)">
   <dtml-call "res.remove(res[qindex])">
   <dtml-call "res.insert(qindex,new_row)">
   <dtml-call "REQUEST.set('res',sort_list(res,qorder,qorderdir))">
   <dtml-unless pk>
    <dtml-call "REQUEST.set('qindex',res.index(new_row))">
   </dtml-unless>
   <dtml-call "res_abs.remove(res_abs[qindex_abs])">
   <dtml-call "res_abs.insert(qindex_abs,new_row)">
   <dtml-call "setObjStateModified(REQUEST)">
   <dtml-call "setObjProperty(res_id,res_abs,lang)">
   <dtml-call "onChangeObj(REQUEST)">
  </dtml-let>
  <dtml-call "REQUEST.set('manage_tabs_message',manage_tabs_message+getZMILangStr('MSG_CHANGED'))">
  </dtml-if>

 </dtml-if>
