<!DOCTYPE html>
<html lang="en" tal:define="standard modules/Products.zms/standard">
<head tal:replace="structure python:here.zmi_html_head(here,request)">zmi_html_head</head>
<body tal:attributes="class python:here.zmi_body_class(id='undo')" hx-push-url="true">
<header tal:replace="structure python:here.zmi_body_header(here,request)">zmi_body_header</header>
<div id="zmi-tab">
<tal:block tal:content="structure python:here.zmi_breadcrumbs(here,request)">zmi_breadcrumbs</tal:block>

<form class="form-horizontal card pt-4" 
	tal:define="
		level python:here.getLevel();
		obj_versions python:here.getObjVersions();">

<div class="diff-container container center">
	<div class="row">
		<div id="original" class="col-sm-6 col-original">
			<div class="input-group mb-3" title="original">
				<div class="input-group-prepend">
					<span class="form-control input-group-text alert-danger">Version</span>
				</div>
				<select class="form-control version-nr"></select>
			</div>
			<div class="original preview d-none"></div>
			<pre class="original json d-none"></pre>
		</div>
		<div id="changed" class="col-sm-6 col-changed">
			<div class="input-group mb-3" title="changed">
				<div class="input-group-prepend">
					<span class="form-control input-group-text alert-success">Version</span>
				</div>
				<select class="form-control version-nr"></select>
				<div class="input-group-append">
					<button id="toggle_splitview" class="btn btn-secondary" 
						title="Show/Hide Splitted Preview"
						onclick="toggle_view(this,'toggle_splitview');return false;">
						<i class="fas fa-columns"></i>
					</button>
					<button id="toggle_datatype" class="btn btn-primary" 
						title="Switch Datatype of Preview (JSON vs HTML)"
						onclick="toggle_view(this,'toggle_datatype');return false;">
						<i class="fas fa-file-alt"></i>
					</button>
				</div>
			</div>
			<div class="changed preview d-none"></div>
			<pre class="changed json d-none"></pre>
		</div>
		<div class="col-sm-12">
			<div class="diff preview my-5"></div>
			<pre class="diff json my-5 d-none"></pre>
		</div>
	</div>
</div><!-- .container -->

<script>
//<!--

function toggle_view(btn,btn_func) {
	// Hide Views
	$('.col-sm-6 .original, .col-sm-6 .changed, .col-sm-12 > .diff','.diff-container').addClass('d-none');
	// Set datatype to be shown
	let datatype = $('#toggle_datatype i').hasClass('fa-code')? 'json': 'preview';
	let splitview = $('#toggle_splitview').hasClass('btn-primary')? true: false;

	// Conditionally Show Splitview
	// A. On Button-Click #toggle_splitview
	if ( btn_func=='toggle_splitview' ) {
		// Hide Splitview
		if ($(btn).hasClass('btn-primary')) {
			$(btn).removeClass('btn-primary').addClass('btn-secondary');
		} else {
			// Show Splitview for current Datatype
			$(btn).removeClass('btn-secondary').addClass('btn-primary');
			if (datatype=='json') {
				$('.diff-container .col-sm-6 .json').removeClass('d-none');
			} else {
				$('.diff-container .col-sm-6 .preview').removeClass('d-none');
			}
		}
		if (datatype=='json') {
			$('.diff-container .col-sm-12 .json').removeClass('d-none');
		} else {
			$('.diff-container .col-sm-12 .preview').removeClass('d-none');
		}
	}
	// B. On Button-Click #toggle_datatype
	if ( btn_func=='toggle_datatype' ) {
		if (datatype=='json') {
			// Switch to html preview
			$('i',$(btn)).removeClass('fa-code').addClass('fa-file-alt');
			$('.diff-container .col-sm-12 > .diff.preview').removeClass('d-none');
			if (splitview) {
				$('.diff-container .col-sm-6 .preview').removeClass('d-none');
			}
		} else {
			// Switch to JSON view
			$('i',$(btn)).removeClass('fa-file-alt').addClass('fa-code');
			$('.diff-container .col-sm-12 > .diff.json').removeClass('d-none');
			if (splitview) {
				$('.diff-container .col-sm-6 .json').removeClass('d-none');
			}
		}
	}
}

function remove_curly_braces(str) {
	if (typeof str !== 'string') {
		return str
	} else {
		return str.replace(/[\{\}]/g,'');
	}
}

function show_old_src_images() {
	$('.diff-container .diff img.tagdiff_replaced[data-old-src]').each(function() {
		let $this = $(this);
		let img = new Image();
		img.src = $this.attr('data-old-src');
		img.classList.add('old-src');
		$this.before(img);
	});
}

function get_htmldiff(container, qualifier) {
	let originalContainer = qualifier + '.original';
	let changedContainer = qualifier + '.changed';
	let diffContainer = qualifier + '.diff';
	let original = $(originalContainer).html();
	let changed = $(changedContainer).html();
	original = remove_curly_braces(original);
	changed = remove_curly_braces(changed);
	let data = {
		'lang':getZMILang(),
		'original':original,
		'changed':changed,
	};
	$.ajax({
		type: "POST",
		url: $ZMI.get_rest_api_url($ZMI.getPhysicalPath())+'/get_htmldiff',
		data: data,
		success: function(html) {
			$('.diff.preview').html(html);
			show_old_src_images()
		}
	});
}

// ############################################################################################################
// DEPRECATED: diff() is now done server-side
// ############################################################################################################
function diff(container, qualifier) {
	var diffContainer = qualifier+".diff";
	$(container).prettyTextDiff({
		cleanup:true,
		originalContainer:qualifier+".original",
		changedContainer:qualifier+".changed",
		diffContainer:diffContainer
	});
	var $diffContainer = $(diffContainer,container);
	if ($diffContainer === undefined) {
		return;
	}
	var lines = $diffContainer.html().replace(/<span>/gi,'').replace(/<\/span>/gi,'').split("<br>");
	var show = [];
	var changed = false;
	for (var i = 0; i < lines.length; i++) {
		var line = lines[i];
		changed |= line.indexOf("<del>")>=0 || line.indexOf("<ins>")>=0;
		if (changed) {
			show.push(i);
		}
		changed &= !(line.indexOf("</del>")>=0 || line.indexOf("</ins>")>=0);
	}
	var html = [];
	changed = false;
	for (var i = 0; i < lines.length; i++) {
		var line = lines[i];
		changed |= line.indexOf("<del>")>=0 || line.indexOf("<ins>")>=0;
		line = '<span class="line-number'+(changed?' line-changed':'')+'">'+(i+1)+'</span> '+lines[i];
		if (!(show.contains(i-1) || show.contains(i) || show.contains(i+1))) {
			line = '<span class="diff-unchanged d-none">'+line+'</span>';
		}
		else {
			line = line+'<'+'br/>';
		}
		html.push(line);
		changed &= !(line.indexOf("</del>")>=0 || line.indexOf("</ins>")>=0);
	}
	$diffContainer.html(html.join(""));
}
// ############################################################################################################


$(function() {
	var href = $ZMI.getPhysicalPath();
	$.get($ZMI.get_rest_api_url(href)+"/get_tags", {lang:getZMILang()}, function(tags) {
		$(tags).each(x => $("select.version-nr").append(`<option value="${tags[x]}">${tags[x]}</option>`));

		// Change event for select.version-nr
		$("select.version-nr").attr("data-loaded",false).change(function() {
			let $select = $(this);
			let $this_col = $select.parent().parent();
			let id = $this_col.attr("id");
			let tag = $select.val();
			let $html = $(".preview",$this_col);
			let $json = $(".json",$this_col);
			$html.text("Loading " + tag + " for " + id + "...");
			console.log("Loading " + tag + " for " + id + "...");
			$.get($ZMI.get_rest_api_url(href)+"/body_content", {tag:tag,lang:getZMILang()}, function(html) {
				html = remove_curly_braces(html);
				$html.html(html);
				$.get($ZMI.get_rest_api_url(href)+"/get_tag",{tag:tag,lang:getZMILang()},function(json) {
					let str = JSON.stringify(json, null, 4)
					$json.text(str);
					console.log("Loaded " + tag + " for " + id);
					$select.attr("data-loaded",true);
					let versions_loaded = $("select.version-nr[data-loaded=false]").length == 0;
					if (versions_loaded) {
						console.log('generate diff');
						get_htmldiff($('.diff-container'),'.preview');
						diff($('.diff-container'),'.json');
					} else {
						console.log('cannot diff yet');
					}
				});
			});
		});

		// Initially select former version of original and latest version of changed
		$('.col-original select.version-nr option:eq(1)').prop('selected', true).change();
		$('.col-changed select.version-nr option:eq(0)').prop('selected', true).change();

	});
});
//-->
</script>


</form><!-- .form-horizontal -->
<!-- #zmi-tab -->


<style>
	del {
		color:#777!important;
		background-color:#F2DEDE!important;
		text-decoration:line-through;
	}
	ins {
		color: #3C763D!important;
		background-color: #DFF0D8!important;
		text-decoration:none;
	}
	table.diff > tbody > tr > th:first-child {
		min-width:10em;
	}
	tr.diff .original, 
	tr.diff .changed {
		display:none;
	}
	table.diff td, 
	table.diff th {
		vertical-align:top;
		padding:.5em;
	}
	table.diff .diff th {
		background-color: #F9F9F9;
	}
	hr {
		border-color:transparent;
	}
	.center .contentEditable {
		max-height:260px;
		overflow-y: scroll !important;
	}
	li.even.zmi-item .center {
		background: #EDF5FE !important;
	}
	button#toggle_splitview,
	button#toggle_datatype {
		width: 2.5rem;
	}
	button#toggle_splitview.btn-secondary i.fas.fa-columns {
		opacity: .5;
	}
	.diff {
		background-color: unset;
	}
	.diff span.d-none {
		display:block !important;
	}
	.diff span.d-none.diff-unchanged {
		display:none !important;
	}

	/* Manage Links */
	.diff-container div.preview div > a:has(small) {
		display:block;
		font-family:monospace;
		border-bottom:1px dotted #ccc;
		margin:1.5rem 0 0 0;
		color:#999;
		text-align:left
	}
	.diff-container div.preview div > a:has(small):hover {
		color:#008ac7;
		text-decoration:none;
		border-bottom:1px dotted #008ac7;
	}
	.diff-container .diff a.tagdiff_replaced {
		background-color:#fea;
	}
	.diff-container .diff img.old-src {
		max-width:80px;
		max-height:80px;
		position:absolute;
		margin:-.3rem 0 0 -.3rem;
		border:1px solid red;
		box-shadow: 0 0 .25rem white;
	}
	.diff-container .diff img.tagdiff_replaced {
		border: 1px solid #155724;
		box-shadow: 0 0 0 .25rem #d4edda;
	}
</style>

<footer tal:replace="structure python:here.zmi_body_footer(here,request)">zmi_body_footer</footer>
<script type="text/javascript" charset="UTF-8" src="/++resource++zms_/jquery/diff/diff_match_patch.js"></script>
<script type="text/javascript" charset="UTF-8" src="/++resource++zms_/jquery/diff/jquery.pretty-text-diff.min.js"></script>
</body>
</html>
