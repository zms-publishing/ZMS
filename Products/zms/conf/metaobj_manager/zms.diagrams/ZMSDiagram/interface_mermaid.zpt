<tal:block
	tal:define="zmscontext options/zmscontext;"
	tal:condition="not:python:request.get('ZMS_INSERT')">
<script type="text/javascript" defer charset="UTF-8" src="/++resource++zms_/common/zmi_ace_editor.js"></script>
<div class="form-group row" id="interface_mermaid">
	<label class="col-sm-2 control-label"></label>
	<div class="col-sm-10">
		<small>
			Copy &amp; Paste <strong>Mermaid.js</strong> code from <a href="https://mermaid.live/" target="_blank">Live Editor</a>
			| <a href="https://mermaid.js.org/intro/syntax-reference.html" target="_blank" id="reference_mermaid_href">Diagram Syntax</a>
		</small>

		<div id="diagram_code_preview">
			<pre class="mermaid" id="diagram_code_rendered"
				tal:condition="python:len(zmscontext.attr('diagram_code'))>0"
				tal:content="python:zmscontext.attr('diagram_code')"
				>Preview Mermaid Diagram Code</pre>
			<pre class="alert alert-warning mx-0"
				tal:condition="python:len(zmscontext.attr('diagram_code'))==0"
				>No Preview: Mermaid Diagram Code Missing</pre>
		</div>

		<script type="module">
		//<!--
			import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs';
			$(document).on('ready turbolinks:load', async function() {
				$('body').attr('data-turbolinks','false');
				let $textarea = $('textarea[id^="diagram_code"]');
				let $preview = $('#diagram_code_preview')
				$textarea
					.addClass('zmi-code')
					.attr('data-content_type','dtml')
					.attr('title','Doubleclick for ACE-Editor');
				$textarea.dblclick(function() {
					show_ace_editor($(this),true);
				});
                mermaid.initialize({ startOnLoad: false });
                await mermaid.run();
				$textarea.on('keydown change', async function(){
					let dgrm_code = $textarea.prop('value').trim();
					let dgrm_html = `<pre class="mermaid" id="diagram_code_rendered">${dgrm_code}</pre>`;
					$preview.html(dgrm_html);
					// debugger;
					let test = false;
					try {
						test = await mermaid.parse(dgrm_code);
					} catch(error) {
						console.log(error);
					}
					if (test && dgrm_code.length > 0) {
						let { svg } = await mermaid.render("diagram_code_rendered", dgrm_code);
						$preview.html(svg);
					} else {
						if (dgrm_code.length > 0) {
							$preview.html('<pre class="alert alert-danger mx-0">Mermaid Parsing Error: Please Check Syntax on Live Editor</pre>');
						} else {
							$preview.html('<pre class="alert alert-warning mx-0">No Preview: Mermaid Diagram Code Missing</pre>');
						}
					}
				});
				// show_ace_editor($dgrm_code, true);
			});
		//-->
		</script>
		<style>
		/*<!--*/
			#diagram_code_preview { width:100%; background:aliceblue}
			#diagram_code_rendered { margin-top:1em; width:100%; min-height:20rem;}
			.ace_editor {border:1px solid #e4e4e4;border-radius:4px;}
		/*-->*/
		</style>
	</div>
</div>
</tal:block>