<?xml version="1.0" encoding="utf-8"?>
<list>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_SCORMexQFlashMX -->

<dtml-let actionId="'ACTION%s'%meta_id"
          templateUrl="'%s/bodyContentZMSCustom_%s'%(absolute_url(),meta_id)">

<dtml-call f_standard_html_request>

<dtml-if "REQUEST.get(actionId,'')=='start_exam'">
 <dtml-var "getObjProperty('xqHtmlPage',REQUEST).getData()">
<dtml-else>
 <dtml-call "RESPONSE.redirect(templateUrl+'?'+actionId+'=start_exam')">
</dtml-if>

</dtml-let>

<!-- EO bodyContentZMSCustom_SCORMexQFlashMX -->]]></item>
<item key="enabled" type="int">1</item>
<item key="key"><![CDATA[SCORMexQFlashMX]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[titlealt]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Title.Alt]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[title]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Title]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="exam.gif" type="file">47494638396112001000f700000432bc7c828cc4c2c44c4e4c0c46bce4e2e46c8acc3c66bc94aad4c4f2fc94cafc2456bc346ad4bccae44c8afc7ca6f41c56ccd4e2f4acaeacf4f2ecccd6e46c6e6c849acccceafcfcfeecacb6cc547ed4547ac43c6ed4ccdaf4bcc6dc144ac42c5ec4245ecc6c86c4648edc3466cc94aadcb4b2b47c7e7ce4eaf4fcfafc9c9a9cc4cacc5c5a5c144eb4acd6fc1c56c484aeece4e6f4ecf2fc6c727c749ae43472e4ccdefc3c6ecc0c4abca4b2cc2c66e4c4d2e46c9af41456d4dce6f494a6c4ecf2f4d4deec747674fcfaf4a4bae4d4def42c62cc7492dc346acce4eefc949aa4245ac474b2fcfc02fcbcc2cc545254dce2ec5c86dc9caed49ccefc346adcc4cee44c8efc245accdce2f4acaeb4d4daec7472747c9ed4dceafcb4bacc5c7ec44472d4d4daf4c4cadc144ec43462c42c5ecc6c8edc9caedcbcbabceceef4fcfefccccacc646264acdefc2456c494aeec7c9ee43c72e4144abcf4f2f4fcfef43c6acc9c9ea47700002000f80000620000150000002000000000000000140000000c10850000f40e00f4000077a40000c30000d60000770000180000c200001200140000000000850000f40000f400007700f0a100c2f40012f40000770200087f0006000014000000283c08c2f9001212b200000000c601004300001800007e00788701c44300121800007e008d20784ad0c4d11b12777e00a44896c34939d614e577007702ed9e7f3a390018e5007e7760840cc4930012d1b20077000d601c09c339ded6e50c77772a3800048c00926c000000002371f804836200d11500770000ec0800d20000d1b2007700acd0010a04000059000000004000480000c4000012000000904f3cdb00f9140012000000002a3c1404f916921200000000c80900c3480012e70000770700380000300000e6000077a800ff0100ff1400ff0000fff8009e1300391600e5000077002ae20004e700924100000000c8b800c3ed00121400000000d0d90004570059e500007790b81c5ec3394412e5000077345dafc2a179d6d1d177777790002a5e000444009200000006820000000000000000000021f9040100004d002c00000000120010000708fb009b081c58248c968241062a248822859a872962145948f06182365314b8785864c5c2226a2e308101650296070e6ca829b246a18c2e0ea260484144cd90383564c4505291870e11693400e0a266440f1a6ac448105824091506655e401853450d982b375204a9c0b4430806248cbcc8a0860b04232080047922104b911724485c11a106c607232140cc29c2b64991216442900861c0c78d2b245e6c48516500d31425e4183152c74c19b438c4a050c286209d2f04c6fc5073640c010b6ab0b050319042173a165a1c38b3608194d433b62c74822545811c083c4c0012e144053414b3548910010b96085e586c314151a0800a4f06687f72626140003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[attr_dc_description]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[DC.Description]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Interaction_Set]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[SCORM Interaction-Set]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqHtmlPage]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Html]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[file]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqFlashMX]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[FlashMX]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[file]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[dSCORMseq]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Sequencing-Rules]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORMseq]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[SCORM-Preconditions]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[SCORMseq]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Exam (FlashMX Upload)]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSDocument]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_examQTrueFalse -->

 <dtml-call "REQUEST.set('cmiQuestionNo',REQUEST.get('cmiQuestionNo',0)+1)">
 <h3><dtml-var "REQUEST.get('cmiQuestionNo')">. <dtml-var "getLangStr('LMS_CMI_QUESTION',lang)"></h3>
 <table cellspacing="0" cellpadding="1" border="0">
 <tr>
  <td class="form-label" colspan="3"><dtml-var "getObjProperty('xqText',REQUEST)"></td>
 </tr>
 <tr>
  <td class="form-label">&nbsp;</td>
  <td class="form-label" width="50" align="center">Falsch</td>
  <td class="form-label" width="50" align="center">Richtig</td>
 </tr>
 <dtml-in "getObjChildren('xqItems',REQUEST)">
 <dtml-let ch="_.chr(65+_['sequence-index']).upper()">
 <tr>
  <td class="form-text"><dtml-var "getObjProperty('xqiText',REQUEST)"></td>
  <td class="form-element" width="50" align="right">
   <script language="JavaScript">
   <!--
    var sType = "radio";
    var sClass = "form-element";
    var sName = "inp_<dtml-var id>:int";
    var sValue = "0";
    var sInput = "<input type='" + sType + "' class='"+sClass+"' name='"+sName+"' value='"+sValue+"'>";
    var sResult = "";
    try { 
      var success_status = doGetValue("cmi.success_status");
      var completion_status = doGetValue("cmi.completion_status");
      if ( completion_status == "completed") 
      {
        sInput = "";
        var learner_response = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response");
        var correct_responses = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.correct_responses.0.pattern");
        var b = ((learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")>=0) ||
                 (learner_response.indexOf("<dtml-var ch>")<0 && correct_responses.indexOf("<dtml-var ch>")<0));
        if (learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")<0)
          sResult += "<font style='color:green'>&raquo;</font> ";
        else if (learner_response.indexOf("<dtml-var ch>")<0 && correct_responses.indexOf("<dtml-var ch>")<0)
          sResult += "<font style='color:green'><b>&raquo;</b></font> ";
        else if (learner_response.indexOf("<dtml-var ch>")<0 && correct_responses.indexOf("<dtml-var ch>")>=0)
          sResult += "<font style='color:red'>f</font> ";
        else 
          sResult += "&nbsp;";
      }
    } catch (e) { }
    document.write(sResult);
    document.write(sInput);
   -->
   </script>
   &nbsp;
  </td>
  <td class="form-element" width="50" align="right">
   <script language="JavaScript">
   <!--
    var sType = "radio";
    var sClass = "form-element";
    var sName = "inp_<dtml-var id>:int";
    var sValue = "1";
    var sInput = "<input type='" + sType + "' class='"+sClass+"' name='"+sName+"' value='"+sValue+"'>";
    var sResult = "";
    try { 
      var success_status = doGetValue("cmi.success_status");
      var completion_status = doGetValue("cmi.completion_status");
      if ( completion_status == "completed") 
      {
        sInput = "";
        var learner_response = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response");
        var correct_responses = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.correct_responses.0.pattern");
        var b = ((learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")>=0) ||
                 (learner_response.indexOf("<dtml-var ch>")<0 && correct_responses.indexOf("<dtml-var ch>")<0));
        if (learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")>=0) 
          sResult += "<font style='color:green'><b>&raquo;</b></font> ";
        else if (learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")<0)
          sResult += "<font style='color:red'>f</font> ";
        else if (learner_response.indexOf("<dtml-var ch>")<0 && correct_responses.indexOf("<dtml-var ch>")>=0)
          sResult += "<font style='color:green'>&raquo;</font> ";
        else
          sResult += "&nbsp;"
      }
    } catch (e) { }
    document.write(sResult);
    document.write(sInput);
   -->
   </script>
   &nbsp;
  </td>
 </tr>
 </dtml-let>
 </dtml-in>
 </table>
 <dtml-call "REQUEST.set('cmiInteractionNo',REQUEST.get('cmiInteractionNo',0)+1)">

<!-- EO bodyContentZMSCustom_examQTrueFalse -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[examQTrueFalse]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="truefalsel.gif" type="file">47494638396114001400b300004c4e4c848284c4c6c4b4b6b4fcfefcfc02fcccceccbcbebc270000070000d30000000000b01c98e5c3021412f000000021f90401000005002c0000000014001400030448b0c849abbd38ebcdbbff93210a95689025a1126861ac2cf506001010870babb9f4d6359c6ed7d30101c217712220d06c8441a1b9933261d629d672e86625ddc317442e9bcfe84c04003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqText]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Text]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqItems]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Items]]></item>
<item key="repetitive" type="int">1</item>
<item key="type"><![CDATA[examQTrueFalseItem]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[cmi_interactions]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[CMI Interactions]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"><![CDATA[1.0]]></item>
<item key="id"><![CDATA[cmi_interactions_weighting]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Weighting]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[float]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[true_false]]></item>
<item key="default"></item>
<item key="id"><![CDATA[cmi_interactions_type]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Type]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[constant]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[//-- BO examQTrueFalse::js_calcRawScore --

<dtml-let cmiInteractionType="getObjProperty('cmi_interactions_type',REQUEST)"
          cmiInteractionWeighting="getObjProperty('cmi_interactions_weighting',REQUEST)">

  // ############################################################
  // True/False #<dtml-var "REQUEST.get('cmiInteractionNo',0)">
  // ############################################################
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.id","<dtml-var id>");
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.type","<dtml-var cmiInteractionType>");
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.weighting","<dtml-var cmiInteractionWeighting>");

  // Get correct_responses.
  // ----------------------
  var questions = new Array();
  <dtml-in "getObjChildren('xqItems',REQUEST)">
   <dtml-if "getObjProperty('xqiValue',REQUEST)">
    questions[questions.length] = "<dtml-var "_.chr(65+_['sequence-index'])">";
   </dtml-if>
  </dtml-in>
  question = "{";
  for (i=0; i<questions.length; i++)
  {
    if (i>0)
      question += ",";
    question += questions[i];
  }
  question += "}";
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.correct_responses.0.pattern",question);
  
  // Get learner_response.
  // ---------------------
  var keys = new Array();
  var fm = document.examForm;
  for (i=0; i<fm.elements.length; i++) 
  {
    var el = fm.elements[i];
    <dtml-in "getObjChildren('xqItems',REQUEST)">
     if (el.name=="inp_<dtml-var id>:int")
       if (el.checked && el.value=='1')
         keys[keys.length] = "<dtml-var "_.chr(65+_['sequence-index'])">";
    </dtml-in>
  }
  key = "{";
  for (i=0; i<keys.length; i++)
  {
    if (i>0)
      key += ",";
    key += keys[i];
  }
  key += "}";
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response",key);
  
  // Compare correct_responses with learner_responses.
  // -------------------------------------------------
  var b = true;
  for (i=0; i<questions.length; i++)
  {
    var found = false;
    for (j=0; j<keys.length; j++)
      found |= questions[i]==keys[j];
    b &= found;
  }
  for (j=0; j<keys.length; j++)
  {
    var found = false;
    for (i=0; i<questions.length; i++)
      found |= questions[i]==keys[j];
    b &= found;
  }
  if (b)
  {
    doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.result","correct");
    rawScore++;
  }
  else
  {
    doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.result","incorrect");
  }
  
 <dtml-call "REQUEST.set('cmiInteractionNo',REQUEST.get('cmiInteractionNo',0)+1)">
 
</dtml-let>

//-- BO examQTrueFalse::js_calcRawScore --]]></item>
<item key="default"></item>
<item key="id"><![CDATA[js_calcRawScore]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[JavaScript: calcRawScore]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[//-- BO examQTrueFalse::js_formSubmit --//

<dtml-let thisId="id"
          thisXqType="getObjProperty('xqType',REQUEST)">
 <dtml-call "REQUEST.set('cmiQuestionNo',REQUEST.get('cmiQuestionNo',0)+1)">
</dtml-let>

//-- EO examQTrueFalse::js_formSubmit --//
]]></item>
<item key="default"></item>
<item key="id"><![CDATA[js_formSubmit]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[JavaScript: formSubmit]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Interaction (true-false)]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSObject]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_examQFillBlankItem -->

<div class="form-text">
 <dtml-var "getObjProperty('xqiTextPre',REQUEST)">
 <em><dtml-var "getObjProperty('xqiValue',REQUEST)"></em>
 <dtml-if "getObjProperty('xqiHint',REQUEST)">
  <i>(<dtml-var "getObjProperty('xqiHint',REQUEST)">)</i>
 </dtml-if>
 <dtml-var "getObjProperty('xqiTextPost',REQUEST)">
</div>

<!-- EO bodyContentZMSCustom_examQFillBlankItem -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[examQFillBlankItem]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="fillinl.gif" type="file">47494638396114001400b300004c4e4cb4b6b4fc02fcc4c6c4060a7f5303a1d1c9d1770177270000070000d30000000000501c68e3c30114124500000121f90401000002002c000000001400140003043950c849abbdb8829de50613d77920399ae8280a6bb7b6d95b0e8340db752a0e81ddf3a1124be812c230b2d330a84c9e9c2ae35133555aafca08003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiTextPre]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Text (Pre)]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiValue]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Value]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiHint]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Hint]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiTextPost]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Text (Post)]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiFeedback]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Feedback zur Aussage]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Fill-in-Blank Item]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSObject]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_SCORMmetaset -->

<dtml-in "getMetaobjAttrIds(meta_id)">
<dtml-let metaObjAttr="getMetaobjAttr(meta_id,_['sequence-item'])">
<dtml-if "getObjProperty(metaObjAttr['id'],REQUEST)">
<meta name="<dtml-var "metaObjAttr['id']">" value="<dtml-var "getObjProperty(metaObjAttr['id'],REQUEST)">">
</dtml-if>
</dtml-let>
</dtml-in>

<!-- EO bodyContentZMSCustom_SCORMmetaset -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[SCORMmetaset]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_General]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[General]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_General_Title]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Title]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_General_Description]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Description]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_General_Keyword]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Keyword]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_General_Identifier_Catalog]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[ID-Catalog]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_General_Identifier_Entry]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[ID-Entry]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Lifecycle]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Lifecyle]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Lifecycle_Version]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Version]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Lifecycle_Status]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Status]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Metametadata]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Metametadata]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Metametadata_Identifier_Catalog]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[ID-Catalog]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Metametadata_Identifier_Entry]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[ID-Entry]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Metametadata_Scheme]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Scheme]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Technical_Format]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Format]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Technical_Location]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Location/DOI]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Rights]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Rights]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Rights_Cost]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[no]]></item>
<item><![CDATA[yes]]></item>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Cost]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Rights_Copyright]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[no]]></item>
<item><![CDATA[yes]]></item>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Copyright]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Classification]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Classification]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Classification_Purpose]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[discipline]]></item>
<item><![CDATA[idea]]></item>
<item><![CDATA[prerequisite]]></item>
<item><![CDATA[educational objective]]></item>
<item><![CDATA[accessibility]]></item>
<item><![CDATA[restrictions]]></item>
<item><![CDATA[educational level]]></item>
<item><![CDATA[skill level]]></item>
<item><![CDATA[security level]]></item>
<item><![CDATA[competency]]></item>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Purpose]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Classification_Description]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Description]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Classification_Keyword]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Keyword]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO imsmanifest.xml ( DTML Method )  //-->

<dtml-call "RESPONSE.setHeader('Content-Type','text/xml')">
<dtml-call "RESPONSE.setHeader('Content-Disposition','inline;filename=imsmanifest.xml')">
<dtml-return "getIMSManifest(REQUEST)">

<!--// EO imsmanifest.xml ( DTML Method )  //-->]]></item>
<item key="default"></item>
<item key="id"><![CDATA[imsmanifest.xml]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Template: SCORM IMS Manifest XML]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<?xml version = "1.0"?>
<xs:schema targetNamespace = "http://www.adlnet.org/xsd/adlcp_v1p3"
           xmlns:xs = "http://www.w3.org/2001/XMLSchema"
           xmlns = "http://www.adlnet.org/xsd/adlcp_v1p3"
           elementFormDefault = "qualified"
           version = "1.0">

   <xs:annotation>
      <xs:documentation>
          This file represents the W3C XML Schema Language Binding of the ADL namespaced elements for content packaging extensions.
      </xs:documentation>
   </xs:annotation>

   <!-- *********************** -->
   <!-- ** Change History ** -->
   <!-- *********************** -->
   <xs:annotation>
      <xs:documentation>
      *************************************************************************
      *                           Change History                              *
      *************************************************************************
      2003-18-09  Initial creation.
      2003-19-09  Removed the restriction of the 255 character maximum length
                  on the dataFromLMS
      2004-01-06  Added completionThreshold to the ADL CP namespace
      2004-23-01  Final edits in preparation for release
      *************************************************************************
      </xs:documentation>
   </xs:annotation>

   <xs:element name = "location" type = "locationType"/>
   <xs:element name = "dataFromLMS" type = "dataFromLMSType"/>
   <xs:element name = "timeLimitAction" type = "timeLimitActionType"/>
   <xs:element name = "completionThreshold" type = "completionThresholdType" />

   <!-- ADL Extension to the IMS Content Packaging XSD -->
   <xs:attribute name = "scormType">
      <xs:simpleType>
         <xs:restriction base = "xs:string">
            <xs:enumeration value = "sco"/>
            <xs:enumeration value = "asset"/>
         </xs:restriction>
      </xs:simpleType>
   </xs:attribute>

   <xs:attribute name = "persistState" default = "false" type = "xs:boolean" />

   <xs:simpleType name = "locationType">
      <xs:restriction base = "xs:string"/>
   </xs:simpleType>

   <xs:simpleType name = "dataFromLMSType">
      <xs:restriction base = "xs:string"/>
   </xs:simpleType>

   <xs:simpleType name = "timeLimitActionType">
      <xs:restriction base = "xs:string">
         <xs:enumeration value = "exit,message"/>
         <xs:enumeration value = "exit,no message"/>
         <xs:enumeration value = "continue,message"/>
         <xs:enumeration value = "continue,no message"/>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType name = "completionThresholdType">
       <xs:restriction base = "xs:decimal">
          <xs:minInclusive value = "0.0"/>
          <xs:maxInclusive value = "1.0"/>
       </xs:restriction>
   </xs:simpleType>

</xs:schema>]]></item>
<item key="default"></item>
<item key="id"><![CDATA[adlcp_v1p3.xsd]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Template: SCORM Schema]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.1.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<xsd:schema xmlns = "http://www.imsglobal.org/xsd/imscp_v1p1"
	 targetNamespace = "http://www.imsglobal.org/xsd/imscp_v1p1"
	 xmlns:xsd = "http://www.w3.org/2001/XMLSchema"
	 version = "IMS CP 1.1.3"
	 elementFormDefault = "unqualified">
	<xsd:import namespace = "http://www.w3.org/XML/1998/namespace" schemaLocation = "http://www.w3.org/2001/03/xml.xsd"/>
	<xsd:annotation>
		<xsd:documentation xml:lang = "en">DRAFT XSD for IMS Content Packaging version 1.1 DRAFT                </xsd:documentation>
		<xsd:documentation> Copyright (c) 2001 IMS GLC, Inc.                                                    </xsd:documentation>
		<xsd:documentation>2000-04-21, Adjustments by T.D. Wason from CP 1.0.                                   </xsd:documentation>
		<xsd:documentation>2001-02-22, T.D.Wason: Modify for 2000-10-24 XML-Schema version.                     </xsd:documentation>
		<xsd:documentation> Modified to support extension.                                                      </xsd:documentation>
		<xsd:documentation>2001-03-12, T.D.Wason: Change filename, target and meta-data namespaces              </xsd:documentation>
		<xsd:documentation> and meta-data filename.                                                             </xsd:documentation>
		<xsd:documentation> Add meta-data to itemType, fileType and organizationType.                           </xsd:documentation>
		<xsd:documentation> Do not define namespaces for xml in XML instances generated from this xsd.          </xsd:documentation>
		<xsd:documentation> Imports IMS meta-data xsd, lower case element names.                                </xsd:documentation>
		<xsd:documentation> This XSD provides a reference to the IMS meta-data root element as imsmd:record     </xsd:documentation>
		<xsd:documentation> If the IMS meta-data is to be used in the XML instance then the instance            </xsd:documentation>
		<xsd:documentation> must definean IMS meta-data prefix with a namespace.                                </xsd:documentation>
		<xsd:documentation> The meta-data targetNamespace should be used.                                       </xsd:documentation>
		<xsd:documentation>2001-03-20, Thor Anderson: Remove manifestref, change resourceref back to            </xsd:documentation>
		<xsd:documentation> identifierref, change manifest back to contained by manifest.                       </xsd:documentation>
		<xsd:documentation> --Tom Wason: manifest may contain _none_ or more manifests.                         </xsd:documentation>
		<xsd:documentation>2001-04-13 Tom Wason: corrected attirbute name structure.  Was misnamed type.        </xsd:documentation>
		<xsd:documentation>2001-05-14 Schawn Thropp: Made all complexType extensible with the group.any         </xsd:documentation>
		<xsd:documentation> Added the anyAttribute to all complexTypes.                                         </xsd:documentation>
		<xsd:documentation> Changed the href attribute on the fileType and resourceType to xsd:string           </xsd:documentation>
		<xsd:documentation> Changed the maxLength of the href, identifierref, parameters, structure             </xsd:documentation>
		<xsd:documentation> attributes to match the Information model.                                          </xsd:documentation>
		<xsd:documentation>2001-07-25 Schawn Thropp: Changed the namespace for the Schema of Schemas to         </xsd:documentation>
		<xsd:documentation> the 5/2/2001 W3C XML Schema Recommendation.                                         </xsd:documentation>
		<xsd:documentation> attributeGroup attr.imsmd deleted, was not used anywhere.                           </xsd:documentation>
		<xsd:documentation> Any attribute declarations that have use = "default"                                </xsd:documentation>
		<xsd:documentation> changed to use="optional" - attr.structure.req.                                     </xsd:documentation>
		<xsd:documentation> Any attribute declarations that have value="somevalue" changed to                   </xsd:documentation>
		<xsd:documentation> default="somevalue" - attr.structure.req (hierarchical).                            </xsd:documentation>
		<xsd:documentation> Removed references to IMS MD Version 1.1.                                           </xsd:documentation>
		<xsd:documentation> Modified attribute group "attr.resourcetype.req" to change use from optional        </xsd:documentation>
		<xsd:documentation> to required to match the information model.  As a result the default value          </xsd:documentation>
		<xsd:documentation> also needed to be removed                                                           </xsd:documentation>
		<xsd:documentation> Name change for XSD.  Changed to match version of CP Spec                           </xsd:documentation>
		<xsd:documentation> 2001-11-04 Chris Moffatt:                                                           </xsd:documentation>
		<xsd:documentation>  1. Refer to the xml namespace using the "x" abbreviation instead of "xml".         </xsd:documentation>
		<xsd:documentation>     This changes enables the schema to work with commercial XML Tools               </xsd:documentation>
		<xsd:documentation>  2. Revert to original IMS CP version 1.1 namespace.                                </xsd:documentation>
		<xsd:documentation>     i.e. "http://www.imsglobal.org/xsd/imscp_v1p1"                                  </xsd:documentation>
		<xsd:documentation>     This change done to support the decision to only change the XML namespace with  </xsd:documentation>
		<xsd:documentation>     major revisions of the specification i.e. where the information model or binding</xsd:documentation>
		<xsd:documentation>     changes (as opposed to addressing bugs or omissions). A stable namespace is     </xsd:documentation>
		<xsd:documentation>     necessary to the increasing number of implementors.                             </xsd:documentation>
		<xsd:documentation>  3. Changed name of schema file to "imscp_v1p1p3.xsd" and                           </xsd:documentation>
		<xsd:documentation>     version attribute to "IMS CP 1.1.3" to reflect minor version change             </xsd:documentation>
		<xsd:documentation>Inclusions and Imports                                                               </xsd:documentation>
		<xsd:documentation>Attribute Declarations                                                               </xsd:documentation>
		<xsd:documentation>element groups                                                                       </xsd:documentation>
		<xsd:documentation>                                                                                     
		
		</xsd:documentation>
		<xsd:documentation>2003-03-21 Schawn Thropp                                                             </xsd:documentation>
		<xsd:documentation>The following updates were made to the Version 1.1.3 "Public Draft" version:         </xsd:documentation>
		<xsd:documentation>  1. Updated name of schema file (imscp_v1p1.xsd) to match to IMS naming guideance   </xsd:documentation>
		<xsd:documentation>  2. Updated the import statement to reference the xml.xsd found at                  </xsd:documentation>
		<xsd:documentation>       "http://www.w3.org/2001/03/xml.xsd".  This is the current W3C schema          </xsd:documentation>
		<xsd:documentation>        recommended by the W3C to reference.                                         </xsd:documentation>
		<xsd:documentation>  3. Removed all maxLength's facets.  The maxLength facets was an incorrect binding  </xsd:documentation>
		<xsd:documentation>     implementation.  These lengths were supposed, according to the information      </xsd:documentation>
		<xsd:documentation>     model, to be treated as smallest permitted maximums.                            </xsd:documentation>
		<xsd:documentation>  4. Added the variations content model to support the addition in the information   </xsd:documentation>
		<xsd:documentation>     model.                                                                          </xsd:documentation>
	</xsd:annotation>
	<xsd:group name = "grp.any">
		<xsd:annotation>
			<xsd:documentation>Any namespaced element from any namespace may be included within an "any" element.  The namespace for the imported element must be defined in the instance, and the schema must be imported.  </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:any namespace = "##other" processContents = "strict" minOccurs = "0" maxOccurs = "unbounded"/>
		</xsd:sequence>
	</xsd:group>
	<xsd:attributeGroup name = "attr.version">
		<xsd:attribute name = "version" type = "xsd:string"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.structure.req">
		<xsd:attribute name = "structure" default = "hierarchical" type = "xsd:string"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.resourcetype.req">
		<xsd:attribute name = "type" use = "required" type = "xsd:string"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.identifierref.req">
		<xsd:attribute name = "identifierref" use = "required" type = "xsd:string"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.identifierref">
		<xsd:attribute name = "identifierref" type = "xsd:string"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.parameters">
		<xsd:attribute name = "parameters" type = "xsd:string"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.isvisible">
		<xsd:attribute name = "isvisible" type = "xsd:boolean"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.identifier">
		<xsd:attribute name = "identifier" type = "xsd:ID"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.identifier.req">
		<xsd:attribute name = "identifier" use = "required" type = "xsd:ID"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.href.req">
		<xsd:attribute name = "href" use = "required" type = "xsd:anyURI"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.href">
		<xsd:attribute name = "href" type = "xsd:anyURI"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.default">
		<xsd:attribute name = "default" type = "xsd:IDREF"/>
	</xsd:attributeGroup>
	<xsd:attributeGroup name = "attr.base">
		<xsd:attribute ref = "xml:base"/>
	</xsd:attributeGroup>
	
	<!-- Copyright (2) 2003 IMS Global Learning Consortium, Inc. -->
	
	
	<!-- ******************** -->
	
	
	<!-- ** Change History ** -->
	
	
	<!-- ******************** -->
	
	
	<!-- **************************** -->
	
	
	<!-- ** Attribute Declarations ** -->
	
	
	<!-- **************************** -->
	
	
	<!-- ************************** -->
	
	
	<!-- ** Element Declarations ** -->
	
	
	<!-- ************************** -->
	
	<xsd:element name = "dependency" type = "dependencyType"/>
	<xsd:element name = "file" type = "fileType"/>
	<xsd:element name = "item" type = "itemType"/>
	<xsd:element name = "manifest" type = "manifestType"/>
	<xsd:element name = "metadata" type = "metadataType"/>
	<xsd:element name = "organization" type = "organizationType"/>
	<xsd:element name = "organizations" type = "organizationsType"/>
	<xsd:element name = "resource" type = "resourceType"/>
	<xsd:element name = "resources" type = "resourcesType"/>
	<xsd:element name = "schema" type = "schemaType"/>
	<xsd:element name = "schemaversion" type = "schemaversionType"/>
	<xsd:element name = "title" type = "titleType"/>
	
	<!-- ******************* -->
	
	
	<!-- ** Complex Types ** -->
	
	
	<!-- ******************* -->
	
	
	<!-- **************** -->
	
	
	<!-- ** dependency ** -->
	
	
	<!-- **************** -->
	
	<xsd:complexType name = "dependencyType">
		<xsd:sequence>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.identifierref.req"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>
	
	<!-- ********** -->
	
	
	<!-- ** file ** -->
	
	
	<!-- ********** -->
	
	<xsd:complexType name = "fileType">
		<xsd:sequence>
			<xsd:element ref = "metadata" minOccurs = "0"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.href.req"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>
	
	<!-- ********** -->
	
	
	<!-- ** item ** -->
	
	
	<!-- ********** -->
	
	<xsd:complexType name = "itemType">
		<xsd:sequence>
			<xsd:element ref = "title" minOccurs = "0"/>
			<xsd:element ref = "item" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:element ref = "metadata" minOccurs = "0"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.identifier.req"/>
		<xsd:attributeGroup ref = "attr.identifierref"/>
		<xsd:attributeGroup ref = "attr.isvisible"/>
		<xsd:attributeGroup ref = "attr.parameters"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>
	
	<!-- ************** -->
	
	
	<!-- ** manifest ** -->
	
	
	<!-- ************** -->
	
	<xsd:complexType name = "manifestType">
		<xsd:sequence>
			<xsd:element ref = "metadata" minOccurs = "0"/>
			<xsd:element ref = "organizations"/>
			<xsd:element ref = "resources"/>
			<xsd:element ref = "manifest" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.identifier.req"/>
		<xsd:attributeGroup ref = "attr.version"/>
		<xsd:attribute ref = "xml:base"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>
	
	<!-- ************** -->
	
	
	<!-- ** metadata ** -->
	
	
	<!-- ************** -->
	
	<xsd:complexType name = "metadataType">
		<xsd:sequence>
			<xsd:element ref = "schema" minOccurs = "0"/>
			<xsd:element ref = "schemaversion" minOccurs = "0"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<!-- ******************* -->
	
	
	<!-- ** organizations ** -->
	
	
	<!-- ******************* -->
	
	<xsd:complexType name = "organizationsType">
		<xsd:sequence>
			<xsd:element ref = "organization" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.default"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>
	
	<!-- ****************** -->
	
	
	<!-- ** organization ** -->
	
	
	<!-- ****************** -->
	
	<xsd:complexType name = "organizationType">
		<xsd:sequence>
			<xsd:element ref = "title" minOccurs = "0"/>
			<xsd:element ref = "item" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:element ref = "metadata" minOccurs = "0"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.identifier.req"/>
		<xsd:attributeGroup ref = "attr.structure.req"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>
	
	<!-- *************** -->
	
	
	<!-- ** resources ** -->
	
	
	<!-- *************** -->
	
	<xsd:complexType name = "resourcesType">
		<xsd:sequence>
			<xsd:element ref = "resource" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.base"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>
	
	<!-- ************** -->
	
	
	<!-- ** resource ** -->
	
	
	<!-- ************** -->
	
	<xsd:complexType name = "resourceType">
		<xsd:sequence>
			<xsd:element ref = "metadata" minOccurs = "0"/>
			<xsd:element ref = "file" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:element ref = "dependency" minOccurs = "0" maxOccurs = "unbounded"/>
			<xsd:group ref = "grp.any"/>
		</xsd:sequence>
		<xsd:attributeGroup ref = "attr.identifier.req"/>
		<xsd:attributeGroup ref = "attr.resourcetype.req"/>
		<xsd:attributeGroup ref = "attr.base"/>
		<xsd:attributeGroup ref = "attr.href"/>
		<xsd:anyAttribute namespace = "##other" processContents = "strict"/>
	</xsd:complexType>
	
	<!-- *************** -->
	
	
	<!-- ** variation ** -->
	
	
	<!-- *************** -->
	
	
	<!-- ****************** -->
	
	
	<!-- ** Simple Types ** -->
	
	
	<!-- ****************** -->
	
	<xsd:simpleType name = "schemaType">
		<xsd:restriction base = "xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name = "schemaversionType">
		<xsd:restriction base = "xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name = "titleType">
		<xsd:restriction base = "xsd:string"/>
	</xsd:simpleType>
</xsd:schema>]]></item>
<item key="default"></item>
<item key="id"><![CDATA[imscp_v1p1.xsd]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Template: SCORM Schema]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.1.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<xs:schema xmlns = "http://www.imsglobal.org/xsd/imsss"
	 targetNamespace = "http://www.imsglobal.org/xsd/imsss"
	 xmlns:xs = "http://www.w3.org/2001/XMLSchema"
	 elementFormDefault = "qualified"
	 attributeFormDefault = "unqualified">
	<xs:include schemaLocation = "imsss_v1p0seqrule.xsd"/>
	<xs:include schemaLocation = "imsss_v1p0objective.xsd"/>
	<xs:include schemaLocation = "imsss_v1p0delivery.xsd"/>
	<xs:include schemaLocation = "imsss_v1p0random.xsd"/>
	<xs:include schemaLocation = "imsss_v1p0rollup.xsd"/>
	<xs:include schemaLocation = "imsss_v1p0control.xsd"/>
	<xs:include schemaLocation = "imsss_v1p0limit.xsd"/>
	<xs:include schemaLocation = "imsss_v1p0auxresource.xsd"/>
	<xs:element name = "sequencing" type = "sequencingType"
		 block = "#all">
		<xs:annotation>
			<xs:documentation>The root element for all sequencing tags.  This tag will usually appear as a child element to an IMS CP item tag.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name = "sequencingType">
		<xs:annotation>
			<xs:documentation>The type associated with any top-level sequencing tag</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name = "controlMode" type = "controlModeType"
				 block = "#all" minOccurs = "0">
				<xs:annotation>
					<xs:documentation>non-exclusive definition of acceptable control-modes</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name = "sequencingRules" type = "sequencingRulesType"
				 block = "#all" minOccurs = "0"/>
			<xs:element name = "limitConditions" type = "limitConditionsType"
				 block = "#all" minOccurs = "0"/>
			<xs:element name = "auxiliaryResources" type = "auxiliaryResourcesType"
				 block = "#all" minOccurs = "0"/>
			<xs:element name = "rollupRules" type = "rollupRulesType"
				 block = "#all" minOccurs = "0"/>
			<xs:element name = "objectives" type = "objectivesType"
				 block = "#all" minOccurs = "0">
<!--
				<xs:unique name = "uniqueGlobalObjective">
					<xs:selector xpath = ".//imsss:mapInfo[@writeSatisfiedStatus = 'true' or @writeNormalizedMeasure = 'true']"/>
					<xs:field xpath = "@targetObjectiveID"/>
				</xs:unique>
-->
			</xs:element>
			<xs:element name = "randomizationControls" type = "randomizationType"
				 block = "#all" minOccurs = "0"/>
			<xs:element name = "deliveryControls" type = "deliveryControlsType"
				 block = "#all" minOccurs = "0"/>
			<xs:any namespace = "##other" processContents = "strict" minOccurs = "0" maxOccurs = "unbounded"/>
		</xs:sequence>
		<xs:attribute name = "ID" type = "xs:ID"/>
		<xs:attribute name = "IDRef" type = "xs:IDREF"/>
	</xs:complexType>
	<xs:element name = "sequencingCollection"
		 block = "#all">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref = "sequencing" maxOccurs = "unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>]]></item>
<item key="default"></item>
<item key="id"><![CDATA[imsss_v1p0.xsd]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Template: SCORM Schema]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[DTML Method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[SCORM Metaset]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSResource]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_com.zms.elc.lcms -->


<!-- EO bodyContentZMSCustom_com.zms.elc.lcms -->]]></item>
<item key="enabled" type="int">1</item>
<item key="key"><![CDATA[com.zms.elc.lcms]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
</list>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSPackage]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_examQImageHotspot -->

 <script language="JavaScript">
 <!--//
  <dtml-call "REQUEST.set('cmiQuestionNo',REQUEST.get('cmiQuestionNo',0)+1)">
  document.write( "<h3><dtml-var "REQUEST.get('cmiQuestionNo')">. <dtml-var "getLangStr('LMS_CMI_QUESTION',lang)"></h3>");
  function map_<dtml-var id>_Click(id) {
    var learner_response = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response");
    if(learner_response=='')
    {
        fm = document.examForm;
        el = fm.elements['inp_'+id+':int'];
        el.value = 1;
        confirm("<dtml-var "getLangStr('LMS_CMI_CLICK_REGISTERED',lang)">!");
    }
    else
    {
        confirm("<dtml-var "getLangStr('LMS_CMI_QUESTION_ALREADY_ANSWERED',lang)">.");
    }
    return;
  }
 //-->
 </script>
 <div class="form-label">
  <dtml-var "getObjProperty('xqText',REQUEST)">
 </div>
 <div class="form-element">
  <dtml-in "getObjChildren('xqItems',REQUEST)">
   <dtml-let ch="_.chr(65+_['sequence-index']).upper()">
    <script language="JavaScript">
    <!--
     var sType = "hidden";
     var sName = "inp_<dtml-var id>:int";
     var sValue = "0";
     var sResult = "";
     try { 
       var learner_response = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response");
       var correct_responses = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.correct_responses.0.pattern");
       if (learner_response.indexOf("<dtml-var ch>")>=0)
         sValue = "1";
       var b = ((learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")>=0) ||
                (learner_response.indexOf("<dtml-var ch>")<0 && correct_responses.indexOf("<dtml-var ch>")<0));
       if (learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")>=0) {
         sResult += "<font style='color:green'><b>"+"<dtml-var ch>"+"</b></font> ";
       }
       else if (learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")<0) {
         sResult += "<font style='color:red'><s>"+"<dtml-var ch>"+"</s></font> ";
       }
       else if (correct_responses.indexOf("<dtml-var ch>")>=0) {
         sResult += "<font style='color:green'>"+"<dtml-var ch>"+"</font> ";
       }
     } catch (e) { }
     var sInput = "<input type='" + sType + "' name='"+sName+"' value='"+sValue+"'>";
     document.write(sInput);
     document.write(sResult);
    -->
    </script>
   </dtml-let>
  </dtml-in>
  <map name="map_<dtml-var id>">
   <dtml-in "getObjChildren('xqItems',REQUEST)">
    <area shape=rect coords="<dtml-var "getObjProperty('xqiCoords',REQUEST)">" href="javascript:map_<dtml-var "aq_parent.id">_Click('<dtml-var id>');">
   </dtml-in>
  </map>
  <dtml-let xqImage="getObjProperty('xqImage',REQUEST)">
   <br/><img src="<dtml-var "xqImage.getHref(REQUEST)">" usemap="#map_<dtml-var id>" title="" border="0"><br/>
  </dtml-let>
 </div>
 <dtml-call "REQUEST.set('cmiInteractionNo',REQUEST.get('cmiInteractionNo',0)+1)">

<!-- EO bodyContentZMSCustom_examQImageHotspot -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[examQImageHotspot]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="hotspotl.gif" type="file">47494638396114001400b300008c0204fcae94b4dafcdceefcfc02fc7c8abcf7fbfc8ca6d4fc32047c7aace45e64849acce4e2fcc4e2fc8caedceceefc21f90401000004002c000000001400140003046f90c849abbd38ebecbaefc7e17046691acf736487192025bc62ad8904068c20b48d283bc422b3789880a5d7ee522c290000a782382801140128e087291807b8ac4251e05a0a833418da080408bc3383d16800020201039029d0eb0d797a0519097387880985098c8d8e1b9091929311003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqText]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Text]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqImage]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Image]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[image]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqItems]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Items]]></item>
<item key="repetitive" type="int">1</item>
<item key="type"><![CDATA[examQImageHotspotItem]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[cmi_interactions]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[CMI Interactions]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"><![CDATA[1.0]]></item>
<item key="id"><![CDATA[cmi_interactions_weighting]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Weighting]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[float]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[choice]]></item>
<item key="default"></item>
<item key="id"><![CDATA[cmi_interactions_type]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Type]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[constant]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[//-- BO examQImageHotspot::js_calcRawScore --

<dtml-let cmiInteractionType="getObjProperty('cmi_interactions_type',REQUEST)"
          cmiInteractionWeighting="getObjProperty('cmi_interactions_weighting',REQUEST)">

  // ############################################################
  // Image-Hotspot #<dtml-var "REQUEST.get('cmiInteractionNo',0)">
  // ############################################################
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.id","<dtml-var id>");
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.type","<dtml-var cmiInteractionType>");
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.weighting","<dtml-var cmiInteractionWeighting>");
  
  // Get correct_responses.
  // ----------------------
  var questions = new Array();
  <dtml-in "getObjChildren('xqItems',REQUEST)">
   <dtml-if "getObjProperty('xqiValue',REQUEST)">
    questions[questions.length] = "<dtml-var "_.chr(65+_['sequence-index'])">";
   </dtml-if>
  </dtml-in>
  question = "{";
  for (i=0; i<questions.length; i++)
  {
    if (i>0)
      question += ",";
    question += questions[i];
  }
  question += "}";
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.correct_responses.0.pattern",question);
  
  // Get learner_response.
  // ---------------------
  var keys = new Array();
  var fm = document.examForm;
  for (i=0; i<fm.elements.length; i++) 
  {
    var el = fm.elements[i];
    <dtml-in "getObjChildren('xqItems',REQUEST)">
     if (el.name=="inp_<dtml-var id>:int")
       if (el.value=='1')
         keys[keys.length] = "<dtml-var "_.chr(65+_['sequence-index'])">";
    </dtml-in>
  }
  key = "{";
  for (i=0; i<keys.length; i++)
  {
    if (i>0)
      key += ",";
    key += keys[i];
  }
  key += "}";
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response",key);
  
  // Compare correct_responses with learner_responses.
  // -------------------------------------------------
  var b = true;
  for (i=0; i<questions.length; i++)
  {
    var found = false;
    for (j=0; j<keys.length; j++)
      found |= questions[i]==keys[j];
    b &= found;
  }
  for (j=0; j<keys.length; j++)
  {
    var found = false;
    for (i=0; i<questions.length; i++)
      found |= questions[i]==keys[j];
    b &= found;
  }
  if (b)
  {
    doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.result","correct");
    rawScore++;
  }
  else
  {
    doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.result","incorrect");
  }
  
 <dtml-call "REQUEST.set('cmiInteractionNo',REQUEST.get('cmiInteractionNo',0)+1)">
 
</dtml-let>

//-- EO examQImageHotspot::js_calcRawScore --]]></item>
<item key="default"></item>
<item key="id"><![CDATA[js_calcRawScore]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[JavaScript: calcRawScore]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Interaction (hot-spot)]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSObject]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_examQTrueFalseItem -->

<div class="form-text">
 <img src="<dtml-var MISC_ZMS>checkbox_disabled<dtml-var "getObjProperty('xqiValue',REQUEST)">.gif" title="" border="0" align="absmiddle">
 <dtml-var "getObjProperty('xqiText',REQUEST)">
</div>

<!-- EO bodyContentZMSCustom_examQTrueFalseItem -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[examQTrueFalseItem]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="truefalsel.gif" type="file">47494638396114001400b300004c4e4c848284c4c6c4b4b6b4fcfefcfc02fcccceccbcbebc270000070000d30000000000b01c98e5c3021412f000000021f90401000005002c0000000014001400030448b0c849abbd38ebcdbbff93210a95689025a1126861ac2cf506001010870babb9f4d6359c6ed7d30101c217712220d06c8441a1b9933261d629d672e86625ddc317442e9bcfe84c04003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiText]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Aussage]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiValue]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[True?]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[boolean]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiFeedback]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Feedback zur Aussage]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[True/False Item]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSObject]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_examQExplanation -->

  <h1><dtml-var "getObjProperty('xqTitle',REQUEST)"></h1>
  <dtml-in "getObjChildren('xqItems',REQUEST)">
   <dtml-var "getBodyContent(REQUEST)">
  </dtml-in>
  <dtml-call "REQUEST.set('cmiInteractionNo',REQUEST.get('cmiInteractionNo',0)+1)">

<!-- EO bodyContentZMSCustom_examQExplanation -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[examQExplanation]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="explanation.gif" type="file">47494638396112001000b30000fc02fc7c88b8c4cedcdcedfc88a7d6f7fbfcc4e2fceeeefbb2b9c67c7bac8498c8b1d9fcd8e0eed0d8ece4e3fc8daedc21f90401000000002c000000001200100003045e10c849ab7d38634b5ff91f533c080710e0d7140ec9a1a9580cc49b168c8020b5a51ca901a3d150707e1fe0607930fa06a025d3590928670383e110e004a44b87d6d1b5041c62ad61b1207bd35a76bb5c49a0eff80427c1effbf526811411003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqItems]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[ZMSGraphic]]></item>
<item><![CDATA[ZMSTable]]></item>
<item><![CDATA[ZMSTextarea]]></item>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Items]]></item>
<item key="repetitive" type="int">1</item>
<item key="type"><![CDATA[*]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[//-- BO examQExplanation::js_calcRawScore --

  // ############################################################
  // Explanation #<dtml-var "REQUEST.get('cmiInteractionNo',0)">
  // ############################################################
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.id","<dtml-var id>");

  // Get correct_responses.
  // ----------------------
  question = "";
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.correct_responses.0.pattern",question);

  // Get learner_response.
  // ---------------------
  key = "";
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response",key);

  // Compare correct_responses with learner_responses.
  // -------------------------------------------------
  var b = question.toLowerCase()==key.toLowerCase();
  if (b)
  {
    doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.result","correct");
    rawScore++;
  }
  else
  {
    doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.result","incorrect");
  }

  <dtml-call "REQUEST.set('cmiInteractionNo',REQUEST.get('cmiInteractionNo',0)+1)">

//-- EO examQExplanation::js_calcRawScore --]]></item>
<item key="default"></item>
<item key="id"><![CDATA[js_calcRawScore]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[JavaScript: calcRawScore]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Explanation]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSObject]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_examQFillBlank -->

 <dtml-call "REQUEST.set('cmiQuestionNo',REQUEST.get('cmiQuestionNo',0)+1)">
 <h3><dtml-var "REQUEST.get('cmiQuestionNo')">. <dtml-var "getLangStr('LMS_CMI_QUESTION',lang)"></h3>
 <div class="form-label">
  <i><dtml-var "getObjProperty('xqText',REQUEST)"></i>
 </div>
 <br/>
 <div class="form-text">
 <dtml-in "getObjChildren('xqItems',REQUEST)">
  <dtml-var "getObjProperty('xqiTextPre',REQUEST)">
  <script language="JavaScript">
  <!--
   var sResult = "";
   var sType = "text";
   var sClass = "form-element";
   var sName = "inp_<dtml-var id>";
   var sTitle = "<dtml-var "getObjProperty('xqiHint',REQUEST)">";
   var sValue = "";
   try { 
     var learner_response = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response");
     var correct_responses = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.correct_responses.0.pattern");
     sValue = learner_response;
     var b = (learner_response.toLowerCase()==correct_responses.toLowerCase());
     if (b) {
       sResult += "<font style='color:green'><b>"+correct_responses+"</b></font> ";
     }
     else {
       sResult += "<font style='color:red'><s>"+learner_response+"</s></font> ";
       sResult += "<font style='color:green'>"+correct_responses+"</font> ";
     }
   } catch (e) { }
    
   var sInput = "";
   if (sValue.length==0)
     sInput = "<input class='"+sClass+"' name='"+sName+"' value='"+sValue+"' size='8' title='"+sTitle+"'>";
   document.write(sInput);
   document.write(sResult);
  -->
  </script>
  <dtml-var "getObjProperty('xqiTextPost',REQUEST)">
  <dtml-call "REQUEST.set('cmiInteractionNo',REQUEST.get('cmiInteractionNo',0)+1)">
 </dtml-in>
 </div>

<!-- EO bodyContentZMSCustom_examQFillBlank -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[examQFillBlank]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="fillinl.gif" type="file">47494638396114001400b300004c4e4cb4b6b4fc02fcc4c6c4060a7f5303a1d1c9d1770177270000070000d30000000000501c68e3c30114124500000121f90401000002002c000000001400140003043950c849abbdb8829de50613d77920399ae8280a6bb7b6d95b0e8340db752a0e81ddf3a1124be812c230b2d330a84c9e9c2ae35133555aafca08003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqText]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Text]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqItems]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Items]]></item>
<item key="repetitive" type="int">1</item>
<item key="type"><![CDATA[examQFillBlankItem]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[cmi_interactions]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[CMI Interactions]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"><![CDATA[1.0]]></item>
<item key="id"><![CDATA[cmi_interactions_weighting]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Weighting]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[float]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[fill_in]]></item>
<item key="default"></item>
<item key="id"><![CDATA[cmi_interactions_type]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Type]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[constant]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[//-- BO examQFillBlank::js_calcRawScore --

<dtml-let cmiInteractionType="getObjProperty('cmi_interactions_type',REQUEST)"
          cmiInteractionWeighting="getObjProperty('cmi_interactions_weighting',REQUEST)">
 <dtml-in "getObjChildren('xqItems',REQUEST)">

  // ############################################################
  // Fill-In-Blank #<dtml-var "REQUEST.get('cmiInteractionNo',0)">
  // ############################################################
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.id","<dtml-var id>");
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.type","<dtml-var cmiInteractionType>");
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.weighting","<dtml-var cmiInteractionWeighting>");

  // Get correct_responses.
  // ----------------------
  question = "<dtml-var "getObjProperty('xqiValue',REQUEST)">";
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.correct_responses.0.pattern",question);

  // Get learner_response.
  // ---------------------
  key = document.examForm.elements['inp_<dtml-var id>'].value;
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response",key);

  // Compare correct_responses with learner_responses.
  // -------------------------------------------------
  var b = question.toLowerCase()==key.toLowerCase();
  if (b)
  {
    doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.result","correct");
    rawScore++;
  }
  else
  {
    doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.result","incorrect");
  }
  
  <dtml-call "REQUEST.set('cmiInteractionNo',REQUEST.get('cmiInteractionNo',0)+1)">
  
 </dtml-in>
</dtml-let>

//-- EO examQFillBlank::js_calcRawScore --]]></item>
<item key="default"></item>
<item key="id"><![CDATA[js_calcRawScore]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[JavaScript: calcRawScore]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[//-- BO examQFillBlank::js_formSubmit --//

<dtml-let thisId="id"
          thisXqType="getObjProperty('xqType',REQUEST)">
 <dtml-call "REQUEST.set('cmiQuestionNo',REQUEST.get('cmiQuestionNo',0)+1)">
</dtml-let>

//-- EO examQFillBlank::js_formSubmit --//
]]></item>
<item key="default"></item>
<item key="id"><![CDATA[js_formSubmit]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[JavaScript: formSubmit]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Interaction (fill-in)]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSObject]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_examQImageHotspotItem -->

<div class="form-text">
 <code>(<dtml-var "getObjProperty('xqiCoords',REQUEST)">)</code>
</div>

<!-- EO bodyContentZMSCustom_examQImageHotspotItem -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[examQImageHotspotItem]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="hotspotl.gif" type="file">47494638396114001400b300008c0204fcae94fc02fcfc3204f4fafce45e64d11ad1770277270000070000d30000000000501c8ee3c3011412d200000021f90401000002002c000000001400140003043e50c849abbd38ebcdbb9fc12089df1008e2406a6aa1ae9c4b10a1ba15003017450714811c60d0db9c823c5451130408022718067092383fd8ac76cbdd4600003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiCoords]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Koordinaten (x1,y1,x2,y2)]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiValue]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[True?]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[boolean]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiFeedback]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Feedback für Koordinaten]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Image-Hotspot Item]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSObject]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_examQMultipleChoice -->

<dtml-let thisId="id"
          thisXqType="getObjProperty('xqType',REQUEST)">
 <script language="JavaScript">
 <!--
  <dtml-call "REQUEST.set('cmiQuestionNo',REQUEST.get('cmiQuestionNo',0)+1)">
  document.write( "<h3><dtml-var "REQUEST.get('cmiQuestionNo')">. <dtml-var "getLangStr('LMS_CMI_QUESTION',lang)"></h3>");
  document.write( "<table cellspacing=0 cellpadding=1 border=1>\n");
  document.write( "<tr>\n");
  document.write( "<td class=\"form-label\" colspan=\"2\"><b><dtml-var "getObjProperty('xqText',REQUEST)" html_quote></b></td>\n");
  document.write( "</tr>\n");
 <dtml-in "getObjChildren('xqItems',REQUEST)">
  <dtml-let ch="_.chr(65+_['sequence-index']).upper()">
     var sPre = '<tr>';
     sPre += "<td class=\"form-text\"><dtml-var "getObjProperty('xqiText',REQUEST)" html_quote></td>";
     sPre += "<td class=\"form-element\">";
     var sPost = '</td></tr>';
     <dtml-if "thisXqType=='single'">
      var sType = "radio";
      var sClass = "form-element";
      var sName = "inp_<dtml-var thisId>";
      var sValue = "<dtml-var id>";
      var sInput = "<input type='" + sType + "' class='"+sClass+"' name='"+sName+"' value='"+sValue+"'>";
      var sResult = "";
      try { 
        var success_status = doGetValue("cmi.success_status");
        var completion_status = doGetValue("cmi.completion_status");
        if ( completion_status == "completed") 
        {
          sInput = "";
          var learner_response = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response");
          var correct_responses = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.correct_responses.0.pattern");
          var b = ((learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")>=0) ||
                   (learner_response.indexOf("<dtml-var ch>")<0 && correct_responses.indexOf("<dtml-var ch>")<0));
          if (learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")>=0) 
            sResult += "<font style='color:green'><b>&#8730;</b></font> ";
          else if (learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")<0)
            sResult += "<font style='color:red'>f</font> ";
          // else if (learner_response.indexOf("<dtml-var ch>")<0 && correct_responses.indexOf("<dtml-var ch>")>=0)
          //   sResult += "&#9679; ";
          else {
            sPre    = "";
            sResult = "";
            sPost   = "";
          }
          if ( sResult.length > 0) {
            sResult += "<dtml-var "getObjProperty('xqiFeedback',REQUEST)">";
          }
        }
      } catch (e) { }
     <dtml-else>
      var sType = "checkbox";
      var sClass = "form-element";
      var sName = "inp_<dtml-var thisId>:list";
      var sValue = "<dtml-var id>";
      var sChecked = "";
      var sResult = "";
      try { 
        var learner_response = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response");
        var correct_responses = doGetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.correct_responses.0.pattern");
        if (learner_response.indexOf("<dtml-var ch>")>=0)
          sChecked = " checked";
        var b = ((learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")>=0) ||
                 (learner_response.indexOf("<dtml-var ch>")<0 && correct_responses.indexOf("<dtml-var ch>")<0));
        if (learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")>=0) 
          sResult += "<font style='color:green'><b>&#8730;</b></font> ";
        else if (learner_response.indexOf("<dtml-var ch>")>=0 && correct_responses.indexOf("<dtml-var ch>")<0)
          sResult += "<font style='color:red'>f</font> ";
        // else if (learner_response.indexOf("<dtml-var ch>")<0 && correct_responses.indexOf("<dtml-var ch>")>=0)
        //   sResult += "&#9679; ";
        else
          sResult += ""
      } catch (e) { }
      if ( sResult.length > 0) {
        sResult += "<dtml-var "getObjProperty('xqiFeedback',REQUEST)">";
      }
      var sInput = "<input type='"+sType+"' class='"+sClass+"' name='"+sName+"' value='"+sValue+"'"+sChecked+">";
     </dtml-if>
     document.write( sPre);
     document.write( sResult);
     document.write( sInput);
     document.write( sPost);
  </dtml-let>
 </dtml-in>
  document.write( "</table>\n");
 -->
 </script>
 <dtml-call "REQUEST.set('cmiInteractionNo',REQUEST.get('cmiInteractionNo',0)+1)">
</dtml-let>

<!-- EO bodyContentZMSCustom_examQMultipleChoice -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[examQMultipleChoice]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="multiplechoicel.gif" type="file">47494638396114001400b300004c4e4cb4b6b4fcfefcc4c6c4fc02fcbcbebccccecc770077270000070000d30000000000081ce0ebc30614126500000021f90401000004002c000000001400140003044c90c849abbd38ebcdf530a0318c9c219c68e185e228a899899ec58bb1a201bcf625a3805d2d70db9d824201d11714208781a545874c4a2f03675319f51c5157cca0402e44c39db47acdc64400003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqText]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Text]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqType]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[single]]></item>
<item><![CDATA[multiple]]></item>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Type]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqItems]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Items]]></item>
<item key="repetitive" type="int">1</item>
<item key="type"><![CDATA[examQMultipleChoiceItem]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[cmi_interactions]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[CMI Interactions]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"><![CDATA[1.0]]></item>
<item key="id"><![CDATA[cmi_interactions_weighting]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Weighting]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[float]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[multiple_choice]]></item>
<item key="default"></item>
<item key="id"><![CDATA[cmi_interactions_type]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Type]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[constant]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[//-- BO examQMultipleChoice::js_calcRawScore --

<dtml-let cmiInteractionType="getObjProperty('cmi_interactions_type',REQUEST)"
          cmiInteractionWeighting="getObjProperty('cmi_interactions_weighting',REQUEST)"
          thisId="id"
          thisXqType="getObjProperty('xqType',REQUEST)">

  // ############################################################
  // Multiple-Choice #<dtml-var "REQUEST.get('cmiInteractionNo',0)">
  // ############################################################
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.id","<dtml-var id>");
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.type","<dtml-var cmiInteractionType>");
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.weighting","<dtml-var cmiInteractionWeighting>");

  // Get correct_responses.
  // ----------------------
  var questions = new Array();
  <dtml-in "getObjChildren('xqItems',REQUEST)">
   <dtml-if "getObjProperty('xqiValue',REQUEST)">
    questions[questions.length] = "<dtml-var "_.chr(65+_['sequence-index'])">";
   </dtml-if>
  </dtml-in>
  question = "";
  <dtml-if "thisXqType=='single'">
   if (questions.length==1) question += questions[0];
  <dtml-else>
   question += "{";
   for (i=0; i<questions.length; i++)
   {
     if (i>0)
       question += ",";
     question += questions[i];
   }
   question += "}";
  </dtml-if>
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.correct_responses.0.pattern",question);
  
  // Get learner_response.
  // ---------------------
  var keys = new Array();
  var fm = document.examForm;
  for (i=0; i<fm.elements.length; i++) 
  {
    var el = fm.elements[i];
    <dtml-in "getObjChildren('xqItems',REQUEST)">
     <dtml-if "thisXqType=='single'">
      if (el.name=="inp_<dtml-var thisId>")
        if (el.checked && el.value=='<dtml-var id>')
          keys[keys.length] = "<dtml-var "_.chr(65+_['sequence-index'])">";
     <dtml-else>
      if (el.name=="inp_<dtml-var thisId>:list")
        if (el.checked && el.value=='<dtml-var id>')
          keys[keys.length] = "<dtml-var "_.chr(65+_['sequence-index'])">";
     </dtml-if>
    </dtml-in>
  }
  key = "";
  <dtml-if "thisXqType=='single'">
   if (keys.length==1) key += keys[0];
  <dtml-else>
   key += "{";
   for (i=0; i<keys.length; i++)
   {
     if (i>0)
       key += ",";
     key += keys[i];
   }
   key += "}";
  </dtml-if>
  doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.learner_response",key);
  
  // Compare correct_responses with learner_responses.
  // -------------------------------------------------
  var b = true;
  for (i=0; i<questions.length; i++)
  {
    var found = false;
    for (j=0; j<keys.length; j++)
      found |= questions[i]==keys[j];
    b &= found;
  }
  for (j=0; j<keys.length; j++)
  {
    var found = false;
    for (i=0; i<questions.length; i++)
      found |= questions[i]==keys[j];
    b &= found;
  }
  if (b)
  {
    doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.result","correct");
    rawScore++;
  }
  else
  {
    doSetValue("cmi.interactions.<dtml-var "REQUEST.get('cmiInteractionNo',0)">.result","incorrect");
  }
  
 <dtml-call "REQUEST.set('cmiInteractionNo',REQUEST.get('cmiInteractionNo',0)+1)">
 
</dtml-let>

//-- EO examQMultipleChoice::js_calcRawScore --]]></item>
<item key="default"></item>
<item key="id"><![CDATA[js_calcRawScore]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[JavaScript: calcRawScore]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[//-- BO examQMultipleChoice::js_formSubmit --//

<dtml-let thisId="id"
          thisXqType="getObjProperty('xqType',REQUEST)">
 <dtml-call "REQUEST.set('cmiQuestionNo',REQUEST.get('cmiQuestionNo',0)+1)">
 <dtml-if "thisXqType=='single'">
  obj = document.forms[fmName].elements["inp_<dtml-var id>"];
  msg = "<dtml-var "getZMILangStr('MSG_REQUIRED')%'%i. %s'%(REQUEST.get('cmiQuestionNo'),getLangStr('LMS_CMI_QUESTION',lang))">";
  dofocus = true;
  if ( disallowBlank(obj,msg,dofocus)) return false;
 </dtml-if>
</dtml-let>

//-- EO examQMultipleChoice::js_formSubmit --//
]]></item>
<item key="default"></item>
<item key="id"><![CDATA[js_formSubmit]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[JavaScript: formSubmit]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Interaction (multiple-choice)]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSObject]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_examQMultipleChoiceItem -->

<div class="form-text">
 <img src="<dtml-var MISC_ZMS>checkbox_disabled<dtml-var "getObjProperty('xqiValue',REQUEST)">.gif" title="" border="0" align="absmiddle">
 <dtml-var "getObjProperty('xqiText',REQUEST)">
</div>

<!-- EO bodyContentZMSCustom_examQMultipleChoiceItem -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[examQMultipleChoiceItem]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="multiplechoicel.gif" type="file">47494638396114001400b300004c4e4cb4b6b4fcfefcc4c6c4fc02fcbcbebccccecc770077270000070000d30000000000081ce0ebc30614126500000021f90401000004002c000000001400140003044c90c849abbd38ebcdf530a0318c9c219c68e185e228a899899ec58bb1a201bcf625a3805d2d70db9d824201d11714208781a545874c4a2f03675319f51c5157cca0402e44c39db47acdc64400003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiText]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Aussage]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiValue]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[True?]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[boolean]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[xqiFeedback]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Feedback zur Aussage]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Multiple Choice Item]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSObject]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_SCORMexQExternal -->
<!-- EO bodyContentZMSCustom_SCORMexQExternal -->]]></item>
<item key="enabled" type="int">1</item>
<item key="key"><![CDATA[SCORMexQExternal]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[titlealt]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Title.Alt]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[title]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Title]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="exam.gif" type="file">47494638396112001000f700000432bc7c828cc4c2c44c4e4c0c46bce4e2e46c8acc3c66bc94aad4c4f2fc94cafc2456bc346ad4bccae44c8afc7ca6f41c56ccd4e2f4acaeacf4f2ecccd6e46c6e6c849acccceafcfcfeecacb6cc547ed4547ac43c6ed4ccdaf4bcc6dc144ac42c5ec4245ecc6c86c4648edc3466cc94aadcb4b2b47c7e7ce4eaf4fcfafc9c9a9cc4cacc5c5a5c144eb4acd6fc1c56c484aeece4e6f4ecf2fc6c727c749ae43472e4ccdefc3c6ecc0c4abca4b2cc2c66e4c4d2e46c9af41456d4dce6f494a6c4ecf2f4d4deec747674fcfaf4a4bae4d4def42c62cc7492dc346acce4eefc949aa4245ac474b2fcfc02fcbcc2cc545254dce2ec5c86dc9caed49ccefc346adcc4cee44c8efc245accdce2f4acaeb4d4daec7472747c9ed4dceafcb4bacc5c7ec44472d4d4daf4c4cadc144ec43462c42c5ecc6c8edc9caedcbcbabceceef4fcfefccccacc646264acdefc2456c494aeec7c9ee43c72e4144abcf4f2f4fcfef43c6acc9c9ea47700002000f80000620000150000002000000000000000140000000c10850000f40e00f4000077a40000c30000d60000770000180000c200001200140000000000850000f40000f400007700f0a100c2f40012f40000770200087f0006000014000000283c08c2f9001212b200000000c601004300001800007e00788701c44300121800007e008d20784ad0c4d11b12777e00a44896c34939d614e577007702ed9e7f3a390018e5007e7760840cc4930012d1b20077000d601c09c339ded6e50c77772a3800048c00926c000000002371f804836200d11500770000ec0800d20000d1b2007700acd0010a04000059000000004000480000c4000012000000904f3cdb00f9140012000000002a3c1404f916921200000000c80900c3480012e70000770700380000300000e6000077a800ff0100ff1400ff0000fff8009e1300391600e5000077002ae20004e700924100000000c8b800c3ed00121400000000d0d90004570059e500007790b81c5ec3394412e5000077345dafc2a179d6d1d177777790002a5e000444009200000006820000000000000000000021f9040100004d002c00000000120010000708fb009b081c58248c968241062a248822859a872962145948f06182365314b8785864c5c2226a2e308101650296070e6ca829b246a18c2e0ea260484144cd90383564c4505291870e11693400e0a266440f1a6ac448105824091506655e401853450d982b375204a9c0b4430806248cbcc8a0860b04232080047922104b911724485c11a106c607232140cc29c2b64991216442900861c0c78d2b245e6c48516500d31425e4183152c74c19b438c4a050c286209d2f04c6fc5073640c010b6ab0b050319042173a165a1c38b3608194d433b62c74822545811c083c4c0012e144053414b3548910010b96085e586c314151a0800a4f06687f72626140003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[attr_dc_description]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[DC.Description]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Interaction_Set]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[SCORM Interaction-Set]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[url]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[URL]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[url]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[dSCORMseq]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Sequencing-Rules]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORMseq]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[SCORM-Preconditions]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[SCORMseq]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Exam (External Link)]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSDocument]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_SCORMseq -->

 <div class="form-text" style="padding:8px">
 <dtml-let recordAttrId="getMetaobj(meta_id)['attrs'][0]['id']" recordAttr="getObjProperty(recordAttrId,REQUEST)">
  <dtml-if recordAttr>
   <table cellspacing="1" cellpadding="1" border="0" class="neutralColorStrong0">
   <tr>
    <td class="form-small"><b>#</b></td>
    <td class="form-small"><b>Condition</b></td>
    <td class="form-small"><b>Referenced Objective</b></td>
   </tr>
   <dtml-in recordAttr mapping>
    <dtml-let ob="getLinkObj(seqReferencedObjective,REQUEST)">
     <dtml-if ob>
      <tr class="<dtml-if sequence-odd>zmiTableRowOdd<dtml-else>zmiTableRowEven</dtml-if>">
       <td class="neutralColorStrong0" align="right"><div class="form-small"><dtml-var "_['sequence-index']+1">.</div></td>
       <td class="form-small">
        <i>
         <dtml-unless "seqOperator == '-'"><dtml-var seqOperator></dtml-unless>
         <dtml-var seqCondition>
        </i>
       </td>
       <td class="form-small">
        <a href="<dtml-var "ob.absolute_url()">/manage_main?lang=<dtml-var lang>" target="_blank" class="zmi"><img src="<dtml-var "ob.display_icon(REQUEST)">" title="<dtml-var "ob.display_type(REQUEST)">" border="0" align="absmiddle"/></a>
        <a href="<dtml-var "ob.absolute_url()">/manage_main?lang=<dtml-var lang>" target="_blank" class="zmi"><dtml-var "ob.getTitlealt(REQUEST)"></a>
       </td>
      </tr>
     </dtml-if>
    </dtml-let>
   </dtml-in>
   </table>
  <dtml-else>
   <dtml-var "getZMILangStr('ATTR_NONE')">
  </dtml-if>
 </dtml-let>
 </div>

<!-- EO bodyContentZMSCustom_SCORMseq -->]]></item>
<item key="enabled" type="int">0</item>
<item key="key"><![CDATA[SCORMseq]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom" type="int">0</item>
<item key="default"></item>
<item key="id"><![CDATA[records]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Datensätze]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[list]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="int">1</item>
<item key="default"></item>
<item key="id"><![CDATA[seqCondition]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[attempted]]></item>
<item><![CDATA[satisfied]]></item>
<item><![CDATA[completed]]></item>
<item><![CDATA[always]]></item>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Condition]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="int">1</item>
<item key="default"></item>
<item key="id"><![CDATA[seqOperator]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[-]]></item>
<item><![CDATA[not]]></item>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Operator]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="int">1</item>
<item key="default"></item>
<item key="id"><![CDATA[seqReferencedObjective]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Referenced Objective]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[url]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO imsmanifest //-->

<dtml-call "REQUEST.set('s_xml',[])">
<dtml-call "REQUEST.set('i_count',0)">

<dtml-in "getObjProperty('records',REQUEST)" mapping>
 <dtml-let ob="getLinkObj(seqReferencedObjective)">
  <dtml-if ob>
   <dtml-unless i_count>
    <dtml-call "s_xml.append('<imsss:sequencing>\n')">
    <dtml-call "s_xml.append('<imsss:sequencingRules>\n')">
   </dtml-unless>
   <dtml-call "s_xml.append('<imsss:preConditionRule>\n')">
   <dtml-call "s_xml.append('<imsss:ruleConditions>\n')">
   <dtml-call "s_xml.append('<imsss:ruleCondition')">
   <dtml-call "REQUEST.set( 'lCondition' ,seqCondition)">
   <dtml-call "REQUEST.set( 'lOperator' ,seqOperator)">
   <dtml-if "lCondition.lower() == 'completed' and lOperator.lower() == '-'">
    <dtml-call "REQUEST.set( 'lCondition' ,'satisfied')">
    <dtml-call "REQUEST.set( 'lOperator' ,'-')">
   <dtml-elif "lCondition.lower() == 'failed' and lOperator.lower() == '-'">
    <dtml-call "REQUEST.set( 'lCondition' ,'satisfied')">
    <dtml-call "REQUEST.set( 'lOperator' ,'not')">
   </dtml-if>
   <dtml-call "s_xml.append(' condition='+QUOT+lCondition.lower()+QUOT)">
   <dtml-if "lOperator != '-'">
    <dtml-call "s_xml.append(' operator='+QUOT+lOperator.lower()+QUOT)">
   </dtml-if>
   <dtml-call "s_xml.append(' referencedObjective='+QUOT+ob.id+QUOT)">
   <dtml-call "s_xml.append('>')">
   <dtml-call "s_xml.append('</imsss:ruleCondition>\n')">
   <dtml-call "s_xml.append('</imsss:ruleConditions>\n')">
   <dtml-call "s_xml.append('<imsss:ruleAction action='+QUOT+'skip'+QUOT+'>')">
   <dtml-call "s_xml.append('</imsss:ruleAction>\n')">
   <dtml-call "s_xml.append('</imsss:preConditionRule>\n')">
   <dtml-call "REQUEST.set('i_count',i_count+1)">
  </dtml-if>
 </dtml-let>
</dtml-in>
<dtml-if i_count>
 <dtml-call "s_xml.append('</imsss:sequencingRules>\n')">
 <dtml-call "s_xml.append('</imsss:sequencing>\n')">
</dtml-if>

<dtml-call "REQUEST.set('s_xml',''.join(s_xml))">
<dtml-return s_xml>

<!--// EO imsmanifest //-->]]></item>
<item key="default"></item>
<item key="id"><![CDATA[imsmanifest]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[imsmanifest.xml]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[SCORM-Preconditions]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSRecordSet]]></item>
</dictionary>
</item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="dtml"><![CDATA[<!-- BO bodyContentZMSCustom_SCORMexQZMS -->

<dtml-call "REQUEST.set('templateUrl','%s/bodyContentZMSCustom_%s'%(absolute_url(),meta_id))">
<dtml-call "REQUEST.set('actionId','ACTION%s'%meta_id)">

<!-- ### Display each Interaction on single page -->
<dtml-if "getObjProperty('layout_sco_single_page', REQUEST)">
 <dtml-if "REQUEST.get(actionId,'')==''">
  <dtml-call "RESPONSE.redirect(url_append_params(templateUrl,{actionId:'scoSingleFrameset'}))">
 <dtml-else>
  <dtml-var "getObjProperty(REQUEST.get(actionId),REQUEST)">
 </dtml-if>

<!-- ### Display all Interactions on one page -->
<dtml-else>

<script language="JavaScript">
<!--//

   <dtml-call "REQUEST.set('cmiQuestionNo',0)">
   <dtml-call "REQUEST.set('examFormSubmit',[])">
   <dtml-in "getObjChildren('exQuestions',REQUEST)">
    <dtml-let js_formSubmit="getObjProperty('js_formSubmit',REQUEST)">
     <dtml-if js_formSubmit>
      <dtml-call "examFormSubmit.append(js_formSubmit+'\n')">
     </dtml-if>
    </dtml-let>
   </dtml-in>
   <dtml-call "REQUEST.set('cmiQuestionNo',0)">
   <dtml-call "REQUEST.set('calcRawScore',[])">
   <dtml-in "getObjChildren('exQuestions',REQUEST)">
    <dtml-let js_calcRawScore="getObjProperty('js_calcRawScore',REQUEST)">
     <dtml-if js_calcRawScore>
      <dtml-call "calcRawScore.append(js_calcRawScore+'\n')">
     </dtml-if>
    </dtml-let>
   </dtml-in>

   /**********************************************************************
    * function examFormSubmit():
    **********************************************************************/
   function examFormSubmit()
   {
      // Include function formSubmit for every question of the exam.
      var fmName = 'examForm';
      var obj;
      var msg;
      <dtml-call "REQUEST.set('cmiInteractionNo',0)">
      <dtml-var "''.join(examFormSubmit)">
      return true;
   }

   var numQuestions = <dtml-var "_.len(calcRawScore)">;
   var currQuestion = <dtml-if "REQUEST.get('cmiCurrInteractionNo')"><dtml-var "_.int(REQUEST.get('cmiCurrInteractionNo'))"><dtml-else>0</dtml-if>;
   var rawScore = 0;
   var actualScore = 0;

   /**********************************************************************
    * function calcRawScore():
    *
    * Gets the students answer to each of the questions. and checks if the 
    * students answers are correct and increments the rawScore value
    **********************************************************************/
   function calcRawScore()
   {
      // Include function calcRawScore for every question of the exam.
      <dtml-call "REQUEST.set('cmiInteractionNo',0)">
      <dtml-var "''.join(calcRawScore)">
   }

   /**********************************************************************
    * calcScore():
    **********************************************************************/
   function calcScore()
   {
        exitPageStatus = true;
        computeTime();  // the student has stopped here.
        calcRawScore();
        actualScore = ( rawScore / numQuestions ) * 100;
        doSetValue( "cmi.score.raw", rawScore );
        var mode = doGetValue( "cmi.mode" );
        if ( mode != "review"  &&  mode != "browse" )
        {
          if ( actualScore < <dtml-var "getObjProperty('score',REQUEST)"> )
          {
            doSetValue( "cmi.success_status", "failed" );
          }
          else 
          {
            doSetValue( "cmi.success_status", "passed" );
          }
          doSetValue( "cmi.completion_status", "completed" );
          doSetValue( "cmi.exit", "" );
        } 
        doCommit();
        doTerminate();
   }

//-->
</script>
<h1 class="title"><dtml-var "getObjProperty('title',REQUEST)"></h1>

  <script language="JavaScript">
  <!--//
    var mode = doGetValue("cmi.mode");
    if (mode=="normal")
    {
<dtml-comment> 
<!-- Fox: JavaScript zur Anzeige feedback_text falls cmi.Mode==normal -->
<!-- Bei Kombi DTML innerhalb von JavaScript muss Textattribut zeilenweise herausgelesen und geschrieben werden. -->
<!-- Und: Bei Verwendung von HTML duerfen nur 'Single Quotes' benutzt werden! -->
</dtml-comment>
    	<dtml-if "getObjProperty('attr_dc_description',REQUEST)">
    		document.write("<p class=\"description\">");
				<dtml-in "string_list(getObjProperty('attr_dc_description',REQUEST))">
					document.write("<dtml-var sequence-item><br />\n");
				</dtml-in>
    		document.write("</p>");
    	</dtml-if>
    }
    else
    {
			<dtml-if "getObjProperty('feedback_text',REQUEST)">
        document.write("<p>");
				<dtml-in "string_list(getObjProperty('feedback_text',REQUEST))">
					document.write("<dtml-var sequence-item><br />\n");
				</dtml-in>
    		document.write("</p>");
    	</dtml-if>
    }
  //-->
  </script>
<form name="examForm">
<table cellspacing="8" cellpadding="0" border="0">
<dtml-call "REQUEST.set('cmiInteractionNo',0)">
<dtml-in "getObjChildren('exQuestions',REQUEST)">
 <tr>
  <td>
   <dtml-var "getBodyContent(REQUEST)"><br/>
  </td>
 </tr>
</dtml-in>
<tr>
 <td>
  <script language="JavaScript">
  <!--//
    document.write("<hr size=\"1\"/>");
    var mode = doGetValue("cmi.mode");
    if (mode=="normal") {
      document.write("<input type=\"button\" class=\"buttonScorm\" value=\" <dtml-var "getLangStr('BTN_SUBMIT_ANSWERS',lang)"> \" onclick=\"if (examFormSubmit()) calcScore()\">");
    }
    else {
      document.write("<input type=\"button\" class=\"buttonScorm\" value=\"  <dtml-var "getLangStr('BTN_CONTINUE',lang)">  \" onclick=\"doContinue('completed')\">");
    }
  //-->
  </script>
 </td>
</tr>
</table>
</form>

</dtml-if>

<!-- EO bodyContentZMSCustom_SCORMexQZMS -->]]></item>
<item key="enabled" type="int">1</item>
<item key="key"><![CDATA[SCORMexQZMS]]></item>
<item key="value" type="dictionary"><dictionary>
<item key="__obj_attrs__" type="list"><list>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[titlealt]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Title.Alt]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[title]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Title]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[string]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom" type="file">
<data content_type="image/gif" filename="exam.gif" type="file">47494638396112001000f700000432bc7c828cc4c2c44c4e4c0c46bce4e2e46c8acc3c66bc94aad4c4f2fc94cafc2456bc346ad4bccae44c8afc7ca6f41c56ccd4e2f4acaeacf4f2ecccd6e46c6e6c849acccceafcfcfeecacb6cc547ed4547ac43c6ed4ccdaf4bcc6dc144ac42c5ec4245ecc6c86c4648edc3466cc94aadcb4b2b47c7e7ce4eaf4fcfafc9c9a9cc4cacc5c5a5c144eb4acd6fc1c56c484aeece4e6f4ecf2fc6c727c749ae43472e4ccdefc3c6ecc0c4abca4b2cc2c66e4c4d2e46c9af41456d4dce6f494a6c4ecf2f4d4deec747674fcfaf4a4bae4d4def42c62cc7492dc346acce4eefc949aa4245ac474b2fcfc02fcbcc2cc545254dce2ec5c86dc9caed49ccefc346adcc4cee44c8efc245accdce2f4acaeb4d4daec7472747c9ed4dceafcb4bacc5c7ec44472d4d4daf4c4cadc144ec43462c42c5ecc6c8edc9caedcbcbabceceef4fcfefccccacc646264acdefc2456c494aeec7c9ee43c72e4144abcf4f2f4fcfef43c6acc9c9ea47700002000f80000620000150000002000000000000000140000000c10850000f40e00f4000077a40000c30000d60000770000180000c200001200140000000000850000f40000f400007700f0a100c2f40012f40000770200087f0006000014000000283c08c2f9001212b200000000c601004300001800007e00788701c44300121800007e008d20784ad0c4d11b12777e00a44896c34939d614e577007702ed9e7f3a390018e5007e7760840cc4930012d1b20077000d601c09c339ded6e50c77772a3800048c00926c000000002371f804836200d11500770000ec0800d20000d1b2007700acd0010a04000059000000004000480000c4000012000000904f3cdb00f9140012000000002a3c1404f916921200000000c80900c3480012e70000770700380000300000e6000077a800ff0100ff1400ff0000fff8009e1300391600e5000077002ae20004e700924100000000c8b800c3ed00121400000000d0d90004570059e500007790b81c5ec3394412e5000077345dafc2a179d6d1d177777790002a5e000444009200000006820000000000000000000021f9040100004d002c00000000120010000708fb009b081c58248c968241062a248822859a872962145948f06182365314b8785864c5c2226a2e308101650296070e6ca829b246a18c2e0ea260484144cd90383564c4505291870e11693400e0a266440f1a6ac448105824091506655e401853450d982b375204a9c0b4430806248cbcc8a0860b04232080047922104b911724485c11a106c607232140cc29c2b64991216442900861c0c78d2b245e6c48516500d31425e4183152c74c19b438c4a050c286209d2f04c6fc5073640c010b6ab0b050319042173a165a1c38b3608194d433b62c74822545811c083c4c0012e144053414b3548910010b96085e586c314151a0800a4f06687f72626140003b</data></item>
<item key="default"></item>
<item key="id"><![CDATA[icon]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Icon]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[resource]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[attr_dc_description]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[DC.Description]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[text]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[learningresourcetype]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[Exam]]></item>
<item><![CDATA[Self Assessment]]></item>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Type]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[select]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"><![CDATA[70]]></item>
<item key="id"><![CDATA[score]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">1</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Score to pass [%]]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[int]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORM_Interaction_Set]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[SCORM Interaction-Set]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[exQuestions]]></item>
<item key="keys" type="list"><list>
<item><![CDATA[examQFillBlank]]></item>
<item><![CDATA[examQImageHotspot]]></item>
<item><![CDATA[examQMultipleChoice]]></item>
<item><![CDATA[examQTrueFalse]]></item>
<item><![CDATA[examQExplanation]]></item>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Questions]]></item>
<item key="repetitive" type="int">1</item>
<item key="type"><![CDATA[*]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[Layout]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Layout properties]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[layout_sco_single_page]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">1</item>
<item key="name"><![CDATA[Display each SCO on single page]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[boolean]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[dSCORMseq]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Sequencing-Rules]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[delimiter]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"></item>
<item key="default"></item>
<item key="id"><![CDATA[SCORMseq]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[SCORM-Preconditions]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[SCORMseq]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO scoSingleFrameset //-->
<dtml-var f_standard_html_request>
<html>
 <head>
  <script language="JavaScript">
  <!--//
    var rawScore = 0;
  //-->
  </script>
  <title><dtml-var "getTitle(REQUEST)"></title>
 </head>
 <frameset rows="100,*" border="0" frameborder="0" framespacing="0">
  <frame id="scoSingleFrameTop" name="scoSingleFrameTop" src="<dtml-var "REQUEST['templateUrl']">?<dtml-var actionId>=scoSingleFrameTop" scrolling="no">
  <frame id="scoSingleFrameBottom" name="scoSingleFrameBottom" src="<dtml-var "REQUEST['templateUrl']">?<dtml-var actionId>=scoSingleFrameBottom" scrolling="yes">
 </frameset>
</html>
<!--// EO scoSingleFrameset //-->]]></item>
<item key="default"></item>
<item key="id"><![CDATA[scoSingleFrameset]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Frameset]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO scoSingleFrameTop //-->

<dtml-var f_standard_html_request>
<head>
<dtml-var headCSS>
<dtml-var headMeta>
<dtml-var headScript>
<dtml-var headScript_SCORM>
</head>
<dtml-var bodyTag>
<dtml-var bodyTop>
 <h1>
  <dtml-var "getObjProperty('title',REQUEST)">
 </h1>
 <p>
  Fragen:
  <dtml-in "getObjChildren('exQuestions',REQUEST)">
   [<a href="<dtml-var "url_append_params(REQUEST['URL'],{actionId:'scoSingleFrameBottom','cmiCurrInteractionNo:int':_['sequence-index']})">" target="scoSingleFrameBottom" class="navMicro"><dtml-var "_['sequence-index']+1"></a>]
  </dtml-in>
 </p>
</body>
</html>

<!--// EO scoSingleFrameTop //-->]]></item>
<item key="default"></item>
<item key="id"><![CDATA[scoSingleFrameTop]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Frame (Top)]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO scoSingleFrameBottom //-->

<dtml-var f_standard_html_request>
<head>
<dtml-var headCSS>
<dtml-var headMeta>
<dtml-var headScript>
<dtml-var headScript_SCORM>

<script language="JavaScript">
<!--//

   var numQuestions = <dtml-var "_.len(getObjChildren('exQuestions',REQUEST))">;
   var currQuestion = <dtml-var "REQUEST.get('cmiCurrInteractionNo',0)">;
   var rawScore = window.parent.rawScore;
   var actualScore = 0;

   /**********************************************************************
    * function calcRawScore():
    *
    * Gets the students answer to each of the questions. and checks if the 
    * students answers are correct and increments the rawScore value
    **********************************************************************/
   function calcRawScore()
   {
      <dtml-call "REQUEST.set('cmiInteractionNo',0)">
      <dtml-in "getObjChildren('exQuestions',REQUEST)">
       <dtml-if "_['sequence-index']==REQUEST.get('cmiCurrInteractionNo',0)">
        <dtml-var "getObjProperty('js_calcRawScore',REQUEST)">
       <dtml-else>
        <dtml-call "REQUEST.set('s',getObjProperty('js_calcRawScore',REQUEST))">
       </dtml-if>
      </dtml-in>
      window.parent.rawScore = rawScore;
   }

   /**********************************************************************
    * calcScore():
    **********************************************************************/
   function calcScore()
   {
      calcRawScore();
      // Finish exam.
      if(currQuestion+1==numQuestions) {
        exitPageStatus = true;
        computeTime();  // the student has stopped here.
        calcRawScore();
        actualScore = ( rawScore / numQuestions ) * 100;
        doSetValue( "cmi.score.raw", rawScore );
        var mode = doGetValue( "cmi.mode" );
        if ( mode != "review"  &&  mode != "browse" )
        {
          if ( actualScore < <dtml-var "getObjProperty('score',REQUEST)"> )
          {
            doSetValue( "cmi.success_status", "failed" );
          }
          else 
          {
            doSetValue( "cmi.success_status", "passed" );
          }
          doSetValue( "cmi.completion_status", "completed" );
          doSetValue( "cmi.exit", "" );
        } 
        doCommit();
        doTerminate();
      }
      // Display next question.
      else {
        doSetValue( "cmi.completion_status", "incomplete" );
        window.location.href = "<dtml-var templateUrl>?<dtml-var actionId>=<dtml-var "REQUEST[actionId]">&cmiCurrInteractionNo:int=" + (currQuestion+1);
      }
   }

//-->
</script>

</head>
<body>

<form name="examForm">
<table cellspacing="8" cellpadding="0" border="0">
<dtml-call "REQUEST.set('cmiInteractionNo',0)">
<dtml-in "getObjChildren('exQuestions',REQUEST)">
 <dtml-if "_['sequence-index']==REQUEST.get('cmiCurrInteractionNo',0)">
 <tr>
  <td>
   <dtml-var "getBodyContent(REQUEST)"><br/>
  </td>
 </tr>
 <dtml-else>
  <dtml-call "REQUEST.set('s',getBodyContent(REQUEST))">
 </dtml-if>
</dtml-in>
<tr>
 <td>
  <script language="JavaScript">
  <!--//
    var mode = doGetValue("cmi.mode");
    if (mode=="normal") {
      document.write("<hr size=\"1\">");
      document.write("<input type=\"button\" class=\"buttonScorm\" value=\" <dtml-var "getLangStr('BTN_SUBMIT_ANSWERS',lang)"> \" onclick=\"calcScore()\">");
      document.write("<br/>");
    }
    else if (mode=="browse") {
      document.write("<hr size=\"1\">");
      if ( currQuestion > 0)
        document.write("[<a href=\"<dtml-var templateUrl>?<dtml-var actionId>=<dtml-var "REQUEST[actionId]">&cmiCurrInteractionNo:int="+(currQuestion-1)+"\"><dtml-var "getLangStr('ATTR_PREVIOUS',lang)"></a>]");
      if ( currQuestion+1<numQuestions)
        document.write("[<a href=\"<dtml-var templateUrl>?<dtml-var actionId>=<dtml-var "REQUEST[actionId]">&cmiCurrInteractionNo:int="+(currQuestion+1)+"\"><dtml-var "getLangStr('ATTR_NEXT',lang)"></a>]");
      document.write("<br/>");
    }
  //-->
  </script>
 </td>
</tr>
</table>
</form>

</body>
</html>

<!--// EO scoSingleFrameBottom //-->]]></item>
<item key="default"></item>
<item key="id"><![CDATA[scoSingleFrameBottom]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[Frame (Bottom)]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
<item type="dictionary"><dictionary>
<item key="custom"><![CDATA[<!--// BO imsmanifestScore //-->

<dtml-call "REQUEST.set('s_xml',[])">

    <dtml-call "s_xml.append('<imsss:sequencing>\n')">
    <dtml-call "s_xml.append('<imsss:objectives>\n')">
    <dtml-call "s_xml.append('<imsss:primaryObjective')">
    <dtml-call "s_xml.append(' objectiveID='+QUOT+id+'_primaryobj'+QUOT)">
    <dtml-call "s_xml.append(' satisfiedByMeasure='+QUOT+'true'+QUOT)">
    <dtml-call "s_xml.append('>\n')">
    <dtml-call "s_xml.append('<imsss:minNormalizedMeasure>'+str(getObjProperty('score',REQUEST)/100.0)+'</imsss:minNormalizedMeasure>\n')">
    <dtml-call "s_xml.append('</imsss:primaryObjective>\n')">
    <dtml-call "s_xml.append('</imsss:objectives>\n')">
    <dtml-call "s_xml.append('</imsss:sequencing>\n')">

<dtml-call "REQUEST.set('s_xml',''.join(s_xml))">
<dtml-return s_xml>

<!--// EO imsmanifestScore //-->]]></item>
<item key="default"></item>
<item key="id"><![CDATA[imsmanifestScore]]></item>
<item key="keys" type="list"><list>
</list>
</item>
<item key="mandatory" type="int">0</item>
<item key="multilang" type="int">0</item>
<item key="name"><![CDATA[imsmanifest.score]]></item>
<item key="repetitive" type="int">0</item>
<item key="type"><![CDATA[method]]></item>
</dictionary>
</item>
</list>
</item>
<item key="access" type="dictionary"><dictionary>
<item key="edit" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
<item key="insert" type="list"><list>
<item><![CDATA[ZMSAdministrator]]></item>
<item><![CDATA[ZMSAuthor]]></item>
<item><![CDATA[ZMSEditor]]></item>
</list>
</item>
</dictionary>
</item>
<item key="acquired" type="int">0</item>
<item key="name"><![CDATA[Exam (ZMS Generated)]]></item>
<item key="package"><![CDATA[com.zms.elc.lcms]]></item>
<item key="type"><![CDATA[ZMSDocument]]></item>
</dictionary>
</item>
</dictionary>
</item>
</list>
