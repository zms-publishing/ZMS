<dtml-call "REQUEST.set('row',record)"
><dtml-call "REQUEST.set('entity',SESSION[sessqentitykey])"><dtml-if ZMS_ENTITY><dtml-call "REQUEST.set('entity',ZMS_ENTITY)"></dtml-if
><dtml-call "REQUEST.set('css','form-element')"><dtml-if ZMS_CSS_EXTRA><dtml-call "REQUEST.set('css',css+' '+ZMS_CSS_EXTRA)"></dtml-if
><dtml-call "REQUEST.set('qexcludeids',[])"><dtml-if ZMS_EXCLUDE_IDS><dtml-call "REQUEST.set('qexcludeids',ZMS_EXCLUDE_IDS)"></dtml-if
><dtml-call f_recordset_init

><dtml-unless "REQUEST.get('f_zmiInputFormJavaScript')"
><script language="JavaScript"
><!--//

  function onFormSubmit(fm) 
  {
    var b = true;
    <dtml-in grid_cols mapping
    ><dtml-unless "id.lower() in _.map(lambda x: x.lower(), REQUEST.get('qexcludeids',[]))"
    ><dtml-call "REQUEST.set('elName','new_%s'%id)"><dtml-if ZMS_TABLE_PREFIX><dtml-call "REQUEST.set('elName',ZMS_TABLE_PREFIX+'_'+elName)"></dtml-if
    ><dtml-call "REQUEST.set('elNameOld','old_%s'%id)"><dtml-if ZMS_TABLE_PREFIX><dtml-call "REQUEST.set('elNameOld',ZMS_TABLE_PREFIX+'_'+elNameOld)"></dtml-if
    ><dtml-if password>
      if (self.btnClicked=="<dtml-var "getZMILangStr('BTN_INSERT')" html_quote>" ||
          self.btnClicked=="<dtml-var "getZMILangStr('BTN_CHANGE')" html_quote>") {
        if (fm.elements['<dtml-var elName>'] && fm.elements['<dtml-var "'new_%s_confirm'%id">']) {
          b = b && !disallowBlank(fm.elements['<dtml-var elName>'],"<dtml-var "getZMILangStr('MSG_REQUIRED')%label">",false);
          b = b && !disallowBlank(fm.elements['<dtml-var "'new_%s_confirm'%id">'],"<dtml-var "getZMILangStr('MSG_REQUIRED')%'%s (%s)'%(label,getZMILangStr('ATTR_CONFIRM'))">",false);
          if (fm.elements['<dtml-var elName>'].value!=fm.elements['<dtml-var "'new_%s_confirm'%id">'].value) {
            b = false;
            alert('<dtml-var label><><dtml-var "'%s (%s)'%(label,getZMILangStr('ATTR_CONFIRM'))">!');
          }
        }
      }
    </dtml-if
    ><dtml-if multimultiselect
     ><dtml-let mmsid="'%s_%s'%(multimultiselect.get('tablename'),multimultiselect.get('fk'))"
      >// multimultiselect
      var el = document.getElementById("<dtml-var mmsid>");
      for (var k=0; k < el.options.length; k++) {
        el.options[k].selected = true;
      }
     </dtml-let
    ></dtml-if
    ><dtml-if multiselect
    ><dtml-if "multiselect.has_key('lazy')"
     ><dtml-let mmsid="'new_%s'%id"
      >// lazy multiselect
      var el = document.getElementById("<dtml-var mmsid>");
      for (var k=0; k < el.options.length; k++) {
        el.options[k].selected = true;
      }
     </dtml-let
    ></dtml-if
    ></dtml-if
    ></dtml-unless
    ></dtml-in>
    return b;
  }

  function browseDbBtnClick(fmName, elId, fieldname, displayfield, tablename) 
  {
    var title = "<dtml-var "url_quote(getZMILangStr('CAPTION_CHOOSEOBJ'))">";
    var url = "<dtml-var absolute_url>/browse_db";
    var params = 'lang=<dtml-var lang>';
    params += '&fmName=' + escape( fmName);
    params += '&elId=' + escape( elId);
    params += '&fieldname=' + escape( fieldname);
    params += '&displayfield=' + escape( displayfield);
    params += '&tablename=' + escape( tablename);
    open_frame(title,url,params,420,360,",resizable=yes,scrollbars=yes");
    return false;
  }

    function multiMultiSelectRemoveElements( mmsid) {
      var mms = document.getElementById(mmsid);
      var i = 0;
      while (i < mms.options.length) {
        if ( mms.options[i].selected) {
          mms.options[i] = null;
        }
        else
          i++;
      }
      return false;
    }

    function multiMultiSelectAddElement(mmsid,l) {
      var mms = document.getElementById(mmsid);
      var label = '';
      var value = '';
      for ( var i = 0; i < l; i++) {
        var el = document.getElementById(mmsid+i);
        if ( el.type == 'select-one') {
          value += el.options[el.selectedIndex].value + ( i < l - 1 ? '/' : '');
          if ( el.options[el.selectedIndex].value.length > 0)
            label += el.options[el.selectedIndex].text + ( i < l - 1 ? ' / ' : '');
        }
        else {
          value += document.getElementById('new_'+mmsid+i).value + ( i < l - 1 ? '/' : '');
          label += document.getElementById('displayfield_'+mmsid+i).value + ( i < l - 1 ? ' / ' : '');
        }
      }
      var newoption = new Option(label, value, true, true);
      var exists = false;
      for (var i = 0; i < mms.options.length; i++) {
        exists |= mms.options[i].value == value;
      }
      if (!exists) {
        mms.options[mms.options.length] = newoption;
      }
      for (var i = 0; i < mms.options.length; i++) {
        mms.options[i].selected = true;
      }
      return false;
    }

    function lazyMultiSelectAddElement(elid, label, value) {
      var el = document.getElementById('new_'+elid);
      if (el) { 
        if ( el.type == 'select-multiple') {
          var newoption = new Option(label, value, true, true);
          var exists = false;
          for (var j = 0; j < el.options.length; j++) {
            exists |= el.options[j].value == value;
          }
          if (!exists) {
            el.options[el.options.length] = newoption;
          }
          for (var j = 0; j < el.options.length; j++) {
            el.options[j].selected = true;
          }
        }
        else {
          el.value = value;
          var el = document.getElementById('displayfield_'+elid);
          if (el) {
            el.value = label;
          }
        }
      }
    }

//-->
</script>
<dtml-call "REQUEST.set('f_zmiInputFormJavaScript',_.True)">
</dtml-unless>

<dtml-unless ZMS_HIDE_FORM>
  <form name="form0" action="<dtml-var URL>" method="post" onsubmit="return onFormSubmit(this)" enctype="multipart/form-data">
  <input type="hidden" name="lang" value="<dtml-var lang>" />
</dtml-unless>

<dtml-unless ZMS_HIDE_HIDDEN_INPUTS>
  <input type="hidden" name="action" value="<dtml-var action>" />
  <input type="hidden" name="rowid" value="<dtml-var rowid>" />
  <input type="hidden" name="details_action" value="<dtml-var "REQUEST.get('details_action')">"/>
  <input type="hidden" name="details_rowid" value="<dtml-var "REQUEST.get('details_rowid')">"/>
  <input type="hidden" name="qentity" value="<dtml-var "SESSION[sessqentitykey]">" />
  <input type="hidden" name="qorder" value="<dtml-var qorder>" />
  <input type="hidden" name="qorderdir" value="<dtml-var qorderdir>" />
  <input type="hidden" name="qstart" value="<dtml-var qstart>" />
  <dtml-in "REQUEST.get('qexcludeids',[])">
   <input type="hidden" name="qexcludeids:list" value="<dtml-var sequence-item>" />
  </dtml-in>
</dtml-unless>

  <dtml-if headline><dtml-var "f_headline(_,_,headline=headline%getZMILangStr('ATTR_RECORD'))"></dtml-if headline>
  <table cellspacing="0" cellpadding="1" border="0" width="100%">
  <colgroup>
   <col width="20%" />
   <col width="80%" />
  </colgroup>
  <dtml-in grid_cols mapping>
  <dtml-let grid_col=sequence-item>
  <dtml-unless "grid_col.get('disabled') or id.lower() in _.map(lambda x: x.lower(), REQUEST.get('qexcludeids',[]))"
  ><dtml-call "REQUEST.set('elName','new_%s'%id)"><dtml-if ZMS_TABLE_PREFIX><dtml-call "REQUEST.set('elName',ZMS_TABLE_PREFIX+'_'+elName)"></dtml-if
  ><dtml-call "REQUEST.set('elNameOld','old_%s'%id)"><dtml-if ZMS_TABLE_PREFIX><dtml-call "REQUEST.set('elNameOld',ZMS_TABLE_PREFIX+'_'+elNameOld)"></dtml-if
  ><dtml-try>
   <tr id="tr_<dtml-var id>">
    <dtml-comment>
    ############################################################################
    ## LABEL
    ############################################################################
    </dtml-comment>
    <td class="form-label">
     <dtml-if pk>
      <img src="<dtml-var MISC_ZMS>btn_key.gif" title="" border="0" align="middle"/>
     </dtml-if>
     <dtml-var label><dtml-if mandatory><sup style="color:red">*</sup></dtml-if>
    </td>
    <dtml-if "grid_col.get('details')">
    <dtml-comment>
    ############################################################################
    ## DETAILS
    ############################################################################
    </dtml-comment>
    <td><dtml-if ZMS_INSERT><dtml-var "getZMILangStr('MSG_AFTER_INSERT')%getZMILangStr('ATTR_RECORD')"><dtml-else><dtml-var input_details></dtml-if></td>
    <dtml-else>
    <dtml-comment>
    ############################################################################
    ## ELEMENT
    ############################################################################
    </dtml-comment>
    <td class="form-element">
     <dtml-if password>
     <dtml-unless ZMS_INSERT>
      <dtml-call "operator_setitem(row,id,'******')">
     </dtml-unless>
     </dtml-if>
     <input type="hidden" name="<dtml-var elNameOld>" value="<dtml-var "row.get(id,'')" html_quote>"/>
     <dtml-if auto>
      <dtml-if "row.get(id,'')">
       <dtml-if "type in ['date','datetime','time']">
        <dtml-var "getLangFmtDate(row.get(id,''),lang,'%s_FMT'%type.upper())">
       <dtml-else>
        <dtml-var "row.get(id,'')">
       </dtml-if>
      <dtml-else>
       Auto
      </dtml-if>
     <dtml-else>
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
     +- MULTIMULTISELECT
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
     </dtml-comment>
     <dtml-if multimultiselect>
     <dtml-let mmsid="'%s_%s'%(multimultiselect.get('tablename'),multimultiselect.get('fk'))">
      <table cellspacing="0" cellpadding="1" border="0">
      <tr>
       <td colspan="<dtml-var "_.len(multimultiselect.get('tables',[]))">">
        <div class="form-small"><dtml-in "multimultiselect.get('tables',[])" mapping><dtml-var label><dtml-unless sequence-end>/</dtml-unless></dtml-in></div>
        <dtml-let values="[]" leftjoins="[]" outerjoins="[]">
        <dtml-unless ZMS_INSERT>
         <dtml-in "multimultiselect.get('tables',[])" mapping
          ><dtml-let i=sequence-index item=sequence-item
           ><dtml-call "values.append(tablename+'.'+fieldname+' AS fk%i'%i)"
           ><dtml-if "displayfield.find(tablename+'.')>=0"
            ><dtml-call "values.append(displayfield+' AS displayfield%i'%i)"
           ><dtml-else
            ><dtml-call "values.append(tablename+'.'+displayfield+' AS displayfield%i'%i)"
           ></dtml-if
           ><dtml-if "item.get('nullable') in [1,_.True]"
            ><dtml-call "outerjoins.append(tablename+' ON '+multimultiselect.get('tablename')+'.'+fk+'='+tablename+'.'+fieldname)"
           ><dtml-else
            ><dtml-call "leftjoins.append(tablename+' ON '+multimultiselect.get('tablename')+'.'+fk+'='+tablename+'.'+fieldname)"
           ></dtml-if
          ></dtml-let
         ></dtml-in
         ><dtml-call "REQUEST.set('sqlStatement',[])"
         ><dtml-call "sqlStatement.append('SELECT '+', '.join(values))"
         ><dtml-call "sqlStatement.append(' FROM '+multimultiselect.get('tablename'))"
         ><dtml-if leftjoins
          ><dtml-call "leftjoins.insert(0,'')"
          ><dtml-call "sqlStatement.append(' LEFT JOIN '.join(leftjoins))"
         ></dtml-if
         ><dtml-if outerjoins
          ><dtml-call "outerjoins.insert(0,'')"
          ><dtml-call "sqlStatement.append(' LEFT OUTER JOIN '.join(outerjoins))"
         ></dtml-if
         ><dtml-call "sqlStatement.append(' WHERE '+multimultiselect.get('tablename')+'.'+multimultiselect.get('fk')+'='+sql_quote__(entity,primary_key,row.get('id','')))"
         ><dtml-call "REQUEST.set('sqlStatement',''.join(sqlStatement))"
         ><!-- input_form.dtml.SQL: <dtml-var sqlStatement> -->
        </dtml-unless>
        <select class="<dtml-var css>" id="<dtml-var mmsid>" name="<dtml-var mmsid>:list" size="5" multiple="multiple" style="width:100%;"
        ><dtml-unless ZMS_INSERT
        ><dtml-try
         ><dtml-in "query(sqlStatement)['records']"
          ><dtml-let row=sequence-item v="[]" l="[]"
           ><dtml-in "multimultiselect.get('tables',[])" mapping
            ><dtml-let i=sequence-index
             ><dtml-if "row['fk%i'%i]"
              ><dtml-call "v.append(_.str(row['fk%i'%i]))"
              ><dtml-try
               ><dtml-call "l.append(_.unicode(_.str(row['displayfield%i'%i]),REQUEST.get('qcharset','utf-8')).encode('utf-8'))"
              ><dtml-except
               ><dtml-call "l.append(_.str(row['displayfield%i'%i]))"
              ></dtml-try
             ><dtml-else
              ><dtml-call "v.append('')"
             > <dtml-call "l.append('')"
             ></dtml-if
            ></dtml-let
           ></dtml-in
           ><option value="<dtml-var "'/'.join(v)">" selected="selected"><dtml-var "'/'.join(l)"></option
          ></dtml-let
         ></dtml-in
        ><dtml-except
         ><dtml-var error_type>: <dtml-var error_value><br/>SQL: <dtml-var sqlStatement><hr/><dtml-var error_tb newline_to_br><br
         ><dtml-comment
         ***********************************************************************
         * ZGadflyDb: minimum compatibility mode!
         ***********************************************************************
         ></dtml-comment
         ><dtml-call "REQUEST.set('sqlStatement',[])"
         ><dtml-call "sqlStatement.append('SELECT '+', '.join(_.map(lambda x: x['fk'],multimultiselect.get('tables',[]))))"
         ><dtml-call "sqlStatement.append(' FROM '+multimultiselect.get('tablename'))"
         ><dtml-call "REQUEST.set('sqlStatement',''.join(sqlStatement))"
         ><dtml-try
          ><dtml-in "query(sqlStatement)['records']"
           ><dtml-let row=sequence-item v="_.map(lambda x: _.str(_['sequence-item'][x['fk']]),multimultiselect.get('tables',[]))" l=v
            ><option value="<dtml-var "'/'.join(v)">" selected="selected"><dtml-var "'/'.join(l)"></option
           ></dtml-let
          ></dtml-in
         ><dtml-except
          ><dtml-var error_type>: <dtml-var error_value><br/>SQL: <dtml-var sqlStatement><hr/><dtml-var error_tb newline_to_br><br
         ></dtml-try
        ></dtml-try
        ></dtml-unless
        ></select
        ></dtml-let
       ></td
       ><td style="vertical-align:middle"
        ><img class="form-submit" style="vertical-align:middle;padding:1px 2px;background:#fff"
            src="<dtml-var MISC_ZMS>pencil_delete.png"
            title="<dtml-var "getZMILangStr('BTN_DELETE')">" 
            onclick="return multiMultiSelectRemoveElements('<dtml-var mmsid>')"
       /><br
       /><img class="form-submit" style="vertical-align:middle;padding:1px 2px;background:#fff"
            src="<dtml-var MISC_ZMS>pencil_go.png"
            title="Linked Dataset" 
            onclick="javascript:var v=$('#<dtml-var mmsid>').val()[0]; v=v.substr(0,v.indexOf('/')); window.open('manage_main?lang=ger&qentity=<dtml-var "multimultiselect.get('tables',[])[0]['tablename']">&rowid='+v+'&action=update','<dtml-var "getZMILangStr('BTN_OPEN')">')"
       /></td
      ></tr
      ><tr
       ><dtml-in "multimultiselect.get('tables',[])" mapping
       ><dtml-let i=sequence-index item=sequence-item
       ><td style="vertical-align:bottom"
        ><div class="form-small"><dtml-var label><dtml-unless "item.get('nullable') in [1,_.True]"><sup style="color:red">*</sup></dtml-unless></div
        ><dtml-if "item.has_key('lazy')"
         ><dtml-let fk=item
          ><input type="hidden" id="<dtml-var mmsid><dtml-var sequence-index>" value=""
          /><input type="hidden" id="new_<dtml-var mmsid><dtml-var sequence-index>" value="" onchange="document.getElementById('<dtml-var mmsid><dtml-var sequence-index>').value=this.value;"
          /><input type="text" class="<dtml-var css>" style="vertical-align:bottom;background-color:#ddd;" id="displayfield_<dtml-var mmsid><dtml-var sequence-index>" value="" disabled="disabled"
          /><img 
              class="form-submit" style="vertical-align:bottom;padding:1px 2px;background:#fff"
              src="<dtml-var MISC_ZMS>pencil_go.png"
              title="<dtml-var "getZMILangStr('BTN_OPEN')">" 
              onclick="return browseDbBtnClick('form0','<dtml-var mmsid><dtml-var sequence-index>','<dtml-var "js_quote(fk.get('fieldname'))">','<dtml-var "js_quote(fk.get('displayfield'))">','<dtml-var "js_quote(fk.get('tablename'))">')"
          /></dtml-let
        ><dtml-else
         ><select class="<dtml-var css>" id="<dtml-var mmsid><dtml-var sequence-index>"
          ><dtml-if "item.get('nullable') in [1,_.True]"><option value="">----- <dtml-var "getZMILangStr('ACTION_SELECT')%label"> -----</option></dtml-if
          ><dtml-in "query( 'SELECT ' + fieldname + ' AS qkey, ' + displayfield + ' AS qvalue FROM ' + tablename + ' ORDER BY ' + displayfield)['records']"
           ><dtml-let row=sequence-item
            ><option value="<dtml-var "_.unicode(_.str(row['qkey']),REQUEST.get('qcharset','utf-8')).encode('utf-8')">"><dtml-var "_.unicode(_.str(row['qvalue']),REQUEST.get('qcharset','utf-8')).encode('utf-8')"></option
           ></dtml-let
          ></dtml-in
         ></select
        ></dtml-if
       ></td
       ></dtml-let
       ></dtml-in
       ><td style="vertical-align:bottom"
       ><img 
          class="form-submit" style="vertical-align:bottom;padding:1px 2px;background:#fff"
          src="<dtml-var MISC_ZMS>pencil_add.png"
          title="<dtml-var "getZMILangStr('BTN_INSERT')">" 
          onclick="return multiMultiSelectAddElement('<dtml-var mmsid>',<dtml-var "_.len(multimultiselect.get('tables',[]))">)"
       /></td>
      </tr>
      </table>
     </dtml-let>
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     +- SELECT
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     </dtml-comment>
     <dtml-elif fk>
      <dtml-call "REQUEST.set('options',[])">
      <dtml-if "fk.has_key('options')">
       <dtml-call "REQUEST.set('options',fk.get('options',[]))">
      <dtml-elif "fk.has_key('tablename')">
       <dtml-call "REQUEST.set('sqlStatement',[])">
       <dtml-call "sqlStatement.append( 'SELECT ' + fk.get('fieldname') + ' AS qkey, ' + fk.get('displayfield') + ' AS qvalue FROM ' + fk.get('tablename') + ' ')">
       <dtml-if "fk.has_key('lazy')">
        <dtml-if "row.get(id,'')">
         <dtml-call "sqlStatement.append( 'WHERE ' + fk.get('fieldname') + '=' + _.str(row.get(id,'')) + ' ')">
        <dtml-else>
         <dtml-call "sqlStatement.append( 'WHERE 1=0 ')">
        </dtml-if>
       </dtml-if>
       <dtml-if "fk.has_key('sort')">
        <dtml-call "sqlStatement.append( 'ORDER BY ' + fk.get('sort'))">
       <dtml-else>
        <dtml-call "sqlStatement.append( 'ORDER BY 2 ')">
       </dtml-if>
       <dtml-call "REQUEST.set('sqlStatement',''.join(sqlStatement))">
       <dtml-in "query(sqlStatement)['records']"
        ><dtml-let row=sequence-item
         ><dtml-unless "row['qvalue']==None" 
         ><dtml-try
          ><dtml-call "options.append([_.unicode(_.str(row['qkey']),REQUEST.get('qcharset','utf-8')).encode('utf-8'),_.unicode(_.str(row['qvalue']),REQUEST.get('qcharset','utf-8')).encode('utf-8')])"
         ><dtml-except
          ><dtml-call "options.append([_.str(row['qkey']),_.str(row['qvalue'])])"
         ></dtml-try
         ></dtml-unless
        ></dtml-let
       ></dtml-in>
      </dtml-if>
      <dtml-if "fk.has_key('lazy')">
       <input type="hidden" id="<dtml-var "'new_%s'%id">" name="<dtml-var "'new_%s'%id">" value="<dtml-var "row.get(id,'')" html_quote>"/>
       <dtml-in options>
        <dtml-let item=sequence-item key="item[0]" value="item[1]">
         <input type="text" class="<dtml-var css> lazy" id="<dtml-var "'displayfield_%s'%id">" name="<dtml-var "'displayfield_%s'%id">" value="<dtml-var value>" disabled="disabled"/>
        </dtml-let>
       <dtml-else>
        <input type="text" class="<dtml-var css> lazy" id="<dtml-var "'displayfield_%s'%id">" name="<dtml-var "'displayfield_%s'%id">" value="" disabled="disabled"/>
       </dtml-in>
       <img 
          class="form-submit" style="vertical-align:middle;padding:1px 2px;background:#fff"
          src="<dtml-var MISC_ZMS>pencil_add.png"
          title="<dtml-var "getZMILangStr('ACTION_SELECT')%label">" 
          onclick="return browseDbBtnClick('form0','<dtml-var id>','<dtml-var "js_quote(fk.get('fieldname'))">','<dtml-var "js_quote(fk.get('displayfield'))">','<dtml-var "js_quote(fk.get('tablename'))">')"/>
       <img class="form-submit" style="vertical-align:middle;padding:1px 2px;background:#fff"
            src="<dtml-var MISC_ZMS>pencil_go.png"
            title="Linked Dataset" 
            onclick="window.open('manage_main?lang=<dtml-var "REQUEST.get('lang')">&amp;qentity=<dtml-var "js_quote(fk.get('tablename'))">&amp;rowid=<dtml-var "row.get(id,'')" html_quote>&amp;action=update'); return false;"/>
       <dtml-if nullable><img class="form-submit" style="vertical-align:middle;padding:1px 2px;background:#fff"
            src="<dtml-var MISC_ZMS>pencil_delete.png"
            title="<dtml-var "getZMILangStr('BTN_DELETE')">" 
            onclick="document.getElementById('<dtml-var elName>').value='null'; document.getElementById('<dtml-var "'displayfield_%s'%id">').value='[null]'; return false;"/></dtml-if>
      <dtml-else>
       <select class="<dtml-var css>" id="<dtml-var elName>" name="<dtml-var elName>">
        <dtml-if nullable>
         <option value="">----- <dtml-var "getZMILangStr('ACTION_SELECT')%label"> -----</option>
        </dtml-if>
        <dtml-in options>
         <dtml-let item=sequence-item key="item[0]" value="item[1]">
          <option value="<dtml-var key>" <dtml-if "_.str(row.get(id,''))==_.str(key)">selected="selected"</dtml-if>><dtml-var value></option>
         </dtml-let>
        </dtml-in>
       </select>
      </dtml-if>
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     +- PASSWORD
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     </dtml-comment>
     <dtml-elif password>
      <dtml-var "getTextInput(fmName='form0', elName=elName, value=row.get(id,''), type='password',css=css)">
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     +- CHECKBOX
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     </dtml-comment>
     <dtml-elif checkbox>
      <dtml-try>
       <dtml-var "getCheckbox(fmName='form0',elName=elName,value=row.get(id,''),enabled=_.True,REQUEST=REQUEST,css=css)">
      <dtml-except>
       <dtml-var "getCheckbox(fmName='form0',elName=elName,value=row.get(id,''),enabled=1,hidden=1,REQUEST=REQUEST,css=css)">
      </dtml-try>
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     +- MULTISELECT
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     </dtml-comment>
     <dtml-elif multiselect
      ><dtml-if "multiselect.get('custom') or multiselect.get('mysqlset')"
       ><dtml-let optpl="[]"
        ><dtml-call "REQUEST.set('value',row.get(id,''))"
        ><dtml-if "multiselect.get('custom')"
         ><dtml-call "optpl.extend(dt_html(multiselect.get('custom'),REQUEST))"
        ><dtml-else
         ><dtml-in "query('DESCRIBE %s %s'%(entity,id))['records']"
          ><dtml-let record=sequence-item
           ><dtml-in "record['type'][4:-1].replace('\'','').split(',')"
            ><dtml-let i=sequence-item
             ><dtml-call "optpl.append([i,i])"
            ></dtml-let
           ></dtml-in
          ></dtml-let
         ></dtml-in
        ></dtml-if
        ><dtml-var "getSelect(fmName='form0', elName='%s:list'%elName, value=value, inputtype='multiselect', lang_str=label, required=0, optpl=optpl, enabled=1, REQUEST=REQUEST)"
       ></dtml-let
      ><dtml-else
      ><dtml-let intersection="getEntity(multiselect.get('tablename'))"
       ><dtml-in "intersection['columns']" mapping
        ><dtml-let col=sequence-item
         ><dtml-if fk
          ><dtml-if "fk.get('tablename',_.None) == entity"
           ><dtml-call "REQUEST.set('src',col)"
          ><dtml-else
           ><dtml-call "REQUEST.set('dst',col)"
          ></dtml-if
         ></dtml-if
        ></dtml-let
       ></dtml-in
       ><dtml-call "REQUEST.set('value',[])">
       <dtml-unless ZMS_INSERT>
        <dtml-call "REQUEST.set('sqlStatement',[])">
        <dtml-call "sqlStatement.append('SELECT ' + dst['id'] + ' AS dst_id FROM ' + intersection['id'] + ' ')">
        <dtml-call "sqlStatement.append('WHERE ' + src['id'] + '=' + sql_quote__(entity,primary_key,row.get(primary_key)))">
        <dtml-try>
         <!-- MULTISELECT.SQL.INTERSECTION: <dtml-var "''.join(sqlStatement)"> -->
         <dtml-in "query(''.join(sqlStatement))['records']">
          <dtml-let row=sequence-item>
           <dtml-call "value.append(_.str(row['dst_id']))">
          </dtml-let>
         </dtml-in>
        <dtml-except>
         SQL-ERROR: <dtml-var "''.join(sqlStatement)">
        </dtml-try>
       </dtml-unless>
       <dtml-let fk="dst['fk']">
       <dtml-call "REQUEST.set('sqlStatement',[])">
       <dtml-call "sqlStatement.append('SELECT ' + fk.get('fieldname') + ' AS qkey, ' + fk.get('displayfield') + ' AS qvalue ')">
       <dtml-call "sqlStatement.append('FROM ' + fk.get('tablename') + ' ')">
       <dtml-if "fk.has_key('sort')">
        <dtml-call "sqlStatement.append( 'ORDER BY ' + fk.get('sort'))">
       <dtml-else>
        <dtml-call "sqlStatement.append( 'ORDER BY 2 ')">
       </dtml-if>
       <dtml-call "REQUEST.set('optpl',[])">
       <dtml-try>
        <!-- MULTISELECT.SQL.FOREIGNTABLE: <dtml-var "''.join(sqlStatement)"> -->
        <dtml-in "query(''.join(sqlStatement))['records']"
         ><dtml-let row=sequence-item
          ><dtml-try
           ><dtml-call "optpl.append([_.unicode(_.str(row['qkey']),REQUEST.get('qcharset','utf-8')).encode('utf-8'),string_maxlen(_.unicode(_.str(row['qvalue']),REQUEST.get('qcharset','utf-8')).encode('utf-8'),25)])"
          ><dtml-except
           ><dtml-call "optpl.append([_.str(row['qkey']),string_maxlen(_.str(row['qvalue']),25)])"
          ></dtml-try
         ></dtml-let
        ></dtml-in
       ><dtml-except>
        SQL-ERROR: <dtml-var "''.join(sqlStatement)">
       </dtml-try>
       <dtml-if "multiselect.has_key('lazy')">
        <select class="<dtml-var css>" id="<dtml-var elName>" name="<dtml-var "'%s:list'%elName">" multiple="multiple" size="5">
        <dtml-in optpl>
         <dtml-let i=sequence-item k="i[0]" v="i[1]">
          <dtml-if "_.str(k) in value">
           <option value="<dtml-var k>"><dtml-if v><dtml-var v><dtml-else>None</dtml-if></option>
          </dtml-if>
         </dtml-let>
        </dtml-in>
        </select>
        <input class="form-submit" type="submit" value="..." title="<dtml-var "getZMILangStr('ACTION_SELECT')%label">" onclick="return browseDbBtnClick('form0','<dtml-var id>','<dtml-var "js_quote(fk.get('fieldname'))">','<dtml-var "js_quote(fk.get('displayfield'))">','<dtml-var "js_quote(fk.get('tablename'))">')"/>
        <input class="form-submit" type="submit" value="-" title="<dtml-var "getZMILangStr('BTN_DELETE')">" onclick="return multiMultiSelectRemoveElements('<dtml-var elName>')"/>
        <dtml-if nullable><input class="form-submit" type="submit" value="X" title="<dtml-var "getZMILangStr('BTN_DELETE')">" onclick="document.getElementById('<dtml-var elName>').value='null'; document.getElementById('<dtml-var "'displayfield_%s'%id">').value='[null]'; return false;"/></dtml-if>
       <dtml-else>
        <dtml-var "getSelect(fmName='form0', elName='%s:list'%elName, value=value, inputtype='multiselect', lang_str=label, required=0, optpl=optpl, enabled=1, REQUEST=REQUEST)">
       </dtml-if>
       </dtml-let>
      </dtml-let>
      </dtml-if>
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     +- BLOB
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     </dtml-comment>
     <dtml-elif blob>
      <dtml-if "row.get(id,'')">
       <dtml-try>
        <dtml-if "blob['type']=='image'">
         <dtml-let filename="row.get(id,'')">
          <table cellspacing="0" cellpadding="0" border="0" width="100%">
          <tr>
           <td valign="top">
            <div style="padding: 1px;" class="zmiNeutralColorStrong0">
             <div style="padding: 1px;" class="zmiNeutralColorMedium0">
              <div class="form-small">
              <dtml-try
               ><dtml-let filename="row.get(id,'')" data="http_import(url_append_params(blob.get('remote',absolute_url())+'/get_blob',{'tablename':entity,'id':id,'rowid':rowid}))" img="ImageFromData(data,filename)"
                ><b><dtml-var filename></b> (<dtml-var "img.getContentType()">, <dtml-var "img.getWidth()">x<dtml-var "img.getHeight()">px, <dtml-var "img.getDataSizeStr()">)
               </dtml-let
              ><dtml-except
               ><dtml-var error_type>: <dtml-var error_value
              ></dtml-try>
              </div>
             </div>
            </div>
            <div style="padding: 1px;">
             <span class="form-element"><dtml-var "getZMILangStr('ATTR_FILE')"></span>
             <input class="<dtml-var css>" type="file" name="blob_<dtml-var id>" size="25" value=""/>
             <input type="hidden" id="delete_blob_<dtml-var id>" name="delete_blob_<dtml-var id>:int" value="0"/>
             <input class="form-submit" type="submit" name="btn" value="<dtml-var "getZMILangStr('BTN_DELETE')">" onclick="document.getElementById('delete_blob_<dtml-var id>').value='1';"/>
            </div>
           </td>
           <td width="10"><img src="<dtml-var spacer_gif>" title="" border="0" width="10" height="1"></td>
           <!-- Preview -->
           <td align="right">
            <table cellspacing="1" cellpadding="0" border="0" class="neutralColorBlack">
            <tr>
            <td style="background-image:url(<dtml-var MISC_ZMS>bg_imgpreview.gif);"
             ><img src="<dtml-var "url_append_params(blob.get('remote',absolute_url())+'/get_blob',{'tablename':entity,'id':id,'rowid':rowid})">" border="0"
            ></td>
            </tr>
            </table>
           </td>
          </tr>
          </table>
         </dtml-let>
        <dtml-else>
         <dtml-let filename="row.get(id,'')" data="localfs_read(blob['path']+filename)" file="FileFromData(data,filename)">
          <div style="padding: 1px;" class="zmiNeutralColorStrong0">
           <div style="padding: 1px;" class="zmiNeutralColorMedium0">
            <div class="form-small">
             <a href="localfs_read?filename=<dtml-var "js_quote(blob['path']+filename)">" class="zmi"><b><dtml-var filename></b></a> (<dtml-var "file.getContentType()">, <dtml-var "file.getDataSizeStr()">)
            </div>
           </div>
          </div>
          <div style="padding: 1px;">
           <span class="form-element"><dtml-var "getZMILangStr('ATTR_FILE')"></span>
           <input class="<dtml-var css>" type="file" name="blob_<dtml-var id>" size="25" value=""/>
           <input type="hidden" id="delete_blob_<dtml-var id>" name="delete_blob_<dtml-var id>:int" value="0"/>
           <input class="form-submit" type="submit" name="btn" value="<dtml-var "getZMILangStr('BTN_DELETE')">" onclick="document.getElementById('delete_blob_<dtml-var id>').value='1';"/>
          </div>
         </dtml-let>
        </dtml-if>
       <dtml-except>
        <div style="padding: 1px;">
         <span class="form-element"><dtml-var "getZMILangStr('ATTR_FILE')"></span>
         <input class="<dtml-var css>" type="file" name="blob_<dtml-var id>" size="25" value=""/>
         <input type="hidden" id="delete_blob_<dtml-var id>" name="delete_blob_<dtml-var id>:int" value="0"/>
         <input class="form-submit" type="submit" name="btn" value="<dtml-var "getZMILangStr('BTN_DELETE')">" onclick="document.getElementById('delete_blob_<dtml-var id>').value='1';"/>
        </div>
        <dtml-var error_type>: <dtml-var error_value><hr/><dtml-var error_tb html_quote newline_to_br><br/>
       </dtml-try>
      <dtml-else>
       <input class="<dtml-var css>" type="file" name="blob_<dtml-var id>" size="25" value="" />
      </dtml-if>
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     +- NUMBERS
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     </dtml-comment>
     <dtml-elif "type in ['int','smallint','float']">
      <dtml-var "getTextInput(fmName='form0', elName=elName, value=row.get(id,''), size=8, css=css)">
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     +- DATE
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     </dtml-comment>
     <dtml-elif "type in ['date','datetime','time']">
      <dtml-var "getDateTimeInput(fmName='form0', elName=elName, size=10, value=row.get(id,''), enabled=1, fmt_str='%s_FMT'%type.upper(), REQUEST=REQUEST, css=css)">
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     +- TEXT
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     </dtml-comment>
     <dtml-elif "type in ['text']">
      <dtml-var "getTextArea(fmName='form0', elName=elName, cols=35, rows=4, value=row.get(id,''), enabled=1, REQUEST=REQUEST, css=css)">
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     +- RICHTEXT
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     </dtml-comment>
     <dtml-elif "type in ['richtext']">
      <dtml-var "f_selectRichtext(_,_,fmName='form0', elName=elName, cols=50, rows=15, value=row.get(id,''), key=id, metaObj=_.None, enabled=1, lang=lang, lang_str=label, REQUEST=REQUEST, css=css, wrap='virtual')">
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     +- OTHER
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     </dtml-comment>
     <dtml-else>
      <dtml-var "getTextInput(fmName='form0', elName=elName, value=row.get(id,''), size=30, css=css)">
     <dtml-comment>
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     </dtml-comment>
     </dtml-if>
     </dtml-if>
     <span id="<dtml-var "'info_%s'%id">" />
    </td>
    </dtml-if>
   </tr>
   <dtml-comment>
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   +- PASSWORD (CONFIRM)
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   </dtml-comment>
   <dtml-if password>
   <tr id="tr_<dtml-var id>_confirm">
    <td class="form-label"><dtml-var label> (<dtml-var "getZMILangStr('ATTR_CONFIRM')">)<dtml-unless nullable><sup style="color:red">*</sup></dtml-unless></td>
    <td class="form-element"><dtml-var "getTextInput(fmName='form0', elName='new_%s_confirm'%id, value=row.get(id,''), type='password', css=css)"></td>
   </tr>
   </dtml-if>
  <dtml-except>
   <tr><td colspan="2"><strong><dtml-var id></strong><br/><dtml-var error_type>: <dtml-var error_value><hr/><dtml-var error_tb newline_to_br html_quote></td></tr>
  </dtml-try>
  </dtml-unless>
  </dtml-let>
  </dtml-in>
  </table>

<dtml-unless ZMS_HIDE_FORM>
  <dtml-var f_submitBtn>
  <dtml-if tabledef>
   <dtml-var "dt_html(tabledef.get('interface',''),REQUEST)">
  </dtml-if>
  </form>
</dtml-unless>

